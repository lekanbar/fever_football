#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FF_Classes
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ForumDB")]
	public partial class FFLinqClassDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertFF_Admin(FF_Admin instance);
    partial void UpdateFF_Admin(FF_Admin instance);
    partial void DeleteFF_Admin(FF_Admin instance);
    partial void Insertyaf_WatchTopic(yaf_WatchTopic instance);
    partial void Updateyaf_WatchTopic(yaf_WatchTopic instance);
    partial void Deleteyaf_WatchTopic(yaf_WatchTopic instance);
    partial void InsertFF_Article(FF_Article instance);
    partial void UpdateFF_Article(FF_Article instance);
    partial void DeleteFF_Article(FF_Article instance);
    partial void InsertFF_Assist(FF_Assist instance);
    partial void UpdateFF_Assist(FF_Assist instance);
    partial void DeleteFF_Assist(FF_Assist instance);
    partial void InsertFF_ChampionGoalScorer(FF_ChampionGoalScorer instance);
    partial void UpdateFF_ChampionGoalScorer(FF_ChampionGoalScorer instance);
    partial void DeleteFF_ChampionGoalScorer(FF_ChampionGoalScorer instance);
    partial void InsertFF_ChampionsGroupStage(FF_ChampionsGroupStage instance);
    partial void UpdateFF_ChampionsGroupStage(FF_ChampionsGroupStage instance);
    partial void DeleteFF_ChampionsGroupStage(FF_ChampionsGroupStage instance);
    partial void InsertFF_ChampionsLeagueTable(FF_ChampionsLeagueTable instance);
    partial void UpdateFF_ChampionsLeagueTable(FF_ChampionsLeagueTable instance);
    partial void DeleteFF_ChampionsLeagueTable(FF_ChampionsLeagueTable instance);
    partial void InsertFF_ChampionsLegaueGroup(FF_ChampionsLegaueGroup instance);
    partial void UpdateFF_ChampionsLegaueGroup(FF_ChampionsLegaueGroup instance);
    partial void DeleteFF_ChampionsLegaueGroup(FF_ChampionsLegaueGroup instance);
    partial void InsertFF_ChampionsOtherStage(FF_ChampionsOtherStage instance);
    partial void UpdateFF_ChampionsOtherStage(FF_ChampionsOtherStage instance);
    partial void DeleteFF_ChampionsOtherStage(FF_ChampionsOtherStage instance);
    partial void InsertFF_Comment(FF_Comment instance);
    partial void UpdateFF_Comment(FF_Comment instance);
    partial void DeleteFF_Comment(FF_Comment instance);
    partial void InsertFF_CommentSubscription(FF_CommentSubscription instance);
    partial void UpdateFF_CommentSubscription(FF_CommentSubscription instance);
    partial void DeleteFF_CommentSubscription(FF_CommentSubscription instance);
    partial void InsertFF_GoalScorer(FF_GoalScorer instance);
    partial void UpdateFF_GoalScorer(FF_GoalScorer instance);
    partial void DeleteFF_GoalScorer(FF_GoalScorer instance);
    partial void InsertFF_League(FF_League instance);
    partial void UpdateFF_League(FF_League instance);
    partial void DeleteFF_League(FF_League instance);
    partial void InsertFF_LeagueTable(FF_LeagueTable instance);
    partial void UpdateFF_LeagueTable(FF_LeagueTable instance);
    partial void DeleteFF_LeagueTable(FF_LeagueTable instance);
    partial void InsertFF_Match(FF_Match instance);
    partial void UpdateFF_Match(FF_Match instance);
    partial void DeleteFF_Match(FF_Match instance);
    partial void InsertFF_New(FF_New instance);
    partial void UpdateFF_New(FF_New instance);
    partial void DeleteFF_New(FF_New instance);
    partial void InsertFF_Player(FF_Player instance);
    partial void UpdateFF_Player(FF_Player instance);
    partial void DeleteFF_Player(FF_Player instance);
    partial void InsertFF_PlayerStatus(FF_PlayerStatus instance);
    partial void UpdateFF_PlayerStatus(FF_PlayerStatus instance);
    partial void DeleteFF_PlayerStatus(FF_PlayerStatus instance);
    partial void InsertFF_Poll(FF_Poll instance);
    partial void UpdateFF_Poll(FF_Poll instance);
    partial void DeleteFF_Poll(FF_Poll instance);
    partial void InsertFF_Season(FF_Season instance);
    partial void UpdateFF_Season(FF_Season instance);
    partial void DeleteFF_Season(FF_Season instance);
    partial void InsertFF_TeamPlayer(FF_TeamPlayer instance);
    partial void UpdateFF_TeamPlayer(FF_TeamPlayer instance);
    partial void DeleteFF_TeamPlayer(FF_TeamPlayer instance);
    partial void InsertFF_Team(FF_Team instance);
    partial void UpdateFF_Team(FF_Team instance);
    partial void DeleteFF_Team(FF_Team instance);
    partial void InsertFF_TopScorer(FF_TopScorer instance);
    partial void UpdateFF_TopScorer(FF_TopScorer instance);
    partial void DeleteFF_TopScorer(FF_TopScorer instance);
    partial void InsertFF_UserComment(FF_UserComment instance);
    partial void UpdateFF_UserComment(FF_UserComment instance);
    partial void DeleteFF_UserComment(FF_UserComment instance);
    partial void InsertFF_UserComment2(FF_UserComment2 instance);
    partial void UpdateFF_UserComment2(FF_UserComment2 instance);
    partial void DeleteFF_UserComment2(FF_UserComment2 instance);
    partial void InsertFF_Vote(FF_Vote instance);
    partial void UpdateFF_Vote(FF_Vote instance);
    partial void DeleteFF_Vote(FF_Vote instance);
    partial void Insertyaf_AccessMask(yaf_AccessMask instance);
    partial void Updateyaf_AccessMask(yaf_AccessMask instance);
    partial void Deleteyaf_AccessMask(yaf_AccessMask instance);
    partial void Insertyaf_Active(yaf_Active instance);
    partial void Updateyaf_Active(yaf_Active instance);
    partial void Deleteyaf_Active(yaf_Active instance);
    partial void Insertyaf_Attachment(yaf_Attachment instance);
    partial void Updateyaf_Attachment(yaf_Attachment instance);
    partial void Deleteyaf_Attachment(yaf_Attachment instance);
    partial void Insertyaf_BannedIP(yaf_BannedIP instance);
    partial void Updateyaf_BannedIP(yaf_BannedIP instance);
    partial void Deleteyaf_BannedIP(yaf_BannedIP instance);
    partial void Insertyaf_BBCode(yaf_BBCode instance);
    partial void Updateyaf_BBCode(yaf_BBCode instance);
    partial void Deleteyaf_BBCode(yaf_BBCode instance);
    partial void Insertyaf_Board(yaf_Board instance);
    partial void Updateyaf_Board(yaf_Board instance);
    partial void Deleteyaf_Board(yaf_Board instance);
    partial void Insertyaf_Buddy(yaf_Buddy instance);
    partial void Updateyaf_Buddy(yaf_Buddy instance);
    partial void Deleteyaf_Buddy(yaf_Buddy instance);
    partial void Insertyaf_Category(yaf_Category instance);
    partial void Updateyaf_Category(yaf_Category instance);
    partial void Deleteyaf_Category(yaf_Category instance);
    partial void Insertyaf_CheckEmail(yaf_CheckEmail instance);
    partial void Updateyaf_CheckEmail(yaf_CheckEmail instance);
    partial void Deleteyaf_CheckEmail(yaf_CheckEmail instance);
    partial void Insertyaf_Choice(yaf_Choice instance);
    partial void Updateyaf_Choice(yaf_Choice instance);
    partial void Deleteyaf_Choice(yaf_Choice instance);
    partial void Insertyaf_EventLog(yaf_EventLog instance);
    partial void Updateyaf_EventLog(yaf_EventLog instance);
    partial void Deleteyaf_EventLog(yaf_EventLog instance);
    partial void Insertyaf_Extension(yaf_Extension instance);
    partial void Updateyaf_Extension(yaf_Extension instance);
    partial void Deleteyaf_Extension(yaf_Extension instance);
    partial void Insertyaf_FavoriteTopic(yaf_FavoriteTopic instance);
    partial void Updateyaf_FavoriteTopic(yaf_FavoriteTopic instance);
    partial void Deleteyaf_FavoriteTopic(yaf_FavoriteTopic instance);
    partial void Insertyaf_Forum(yaf_Forum instance);
    partial void Updateyaf_Forum(yaf_Forum instance);
    partial void Deleteyaf_Forum(yaf_Forum instance);
    partial void Insertyaf_ForumAccess(yaf_ForumAccess instance);
    partial void Updateyaf_ForumAccess(yaf_ForumAccess instance);
    partial void Deleteyaf_ForumAccess(yaf_ForumAccess instance);
    partial void Insertyaf_Group(yaf_Group instance);
    partial void Updateyaf_Group(yaf_Group instance);
    partial void Deleteyaf_Group(yaf_Group instance);
    partial void Insertyaf_IgnoreUser(yaf_IgnoreUser instance);
    partial void Updateyaf_IgnoreUser(yaf_IgnoreUser instance);
    partial void Deleteyaf_IgnoreUser(yaf_IgnoreUser instance);
    partial void Insertyaf_Mail(yaf_Mail instance);
    partial void Updateyaf_Mail(yaf_Mail instance);
    partial void Deleteyaf_Mail(yaf_Mail instance);
    partial void Insertyaf_Medal(yaf_Medal instance);
    partial void Updateyaf_Medal(yaf_Medal instance);
    partial void Deleteyaf_Medal(yaf_Medal instance);
    partial void Insertyaf_Message(yaf_Message instance);
    partial void Updateyaf_Message(yaf_Message instance);
    partial void Deleteyaf_Message(yaf_Message instance);
    partial void Insertyaf_NntpForum(yaf_NntpForum instance);
    partial void Updateyaf_NntpForum(yaf_NntpForum instance);
    partial void Deleteyaf_NntpForum(yaf_NntpForum instance);
    partial void Insertyaf_NntpServer(yaf_NntpServer instance);
    partial void Updateyaf_NntpServer(yaf_NntpServer instance);
    partial void Deleteyaf_NntpServer(yaf_NntpServer instance);
    partial void Insertyaf_NntpTopic(yaf_NntpTopic instance);
    partial void Updateyaf_NntpTopic(yaf_NntpTopic instance);
    partial void Deleteyaf_NntpTopic(yaf_NntpTopic instance);
    partial void Insertyaf_PMessage(yaf_PMessage instance);
    partial void Updateyaf_PMessage(yaf_PMessage instance);
    partial void Deleteyaf_PMessage(yaf_PMessage instance);
    partial void Insertyaf_Poll(yaf_Poll instance);
    partial void Updateyaf_Poll(yaf_Poll instance);
    partial void Deleteyaf_Poll(yaf_Poll instance);
    partial void Insertyaf_PollGroupCluster(yaf_PollGroupCluster instance);
    partial void Updateyaf_PollGroupCluster(yaf_PollGroupCluster instance);
    partial void Deleteyaf_PollGroupCluster(yaf_PollGroupCluster instance);
    partial void Insertyaf_PollVote(yaf_PollVote instance);
    partial void Updateyaf_PollVote(yaf_PollVote instance);
    partial void Deleteyaf_PollVote(yaf_PollVote instance);
    partial void Insertyaf_prov_Application(yaf_prov_Application instance);
    partial void Updateyaf_prov_Application(yaf_prov_Application instance);
    partial void Deleteyaf_prov_Application(yaf_prov_Application instance);
    partial void Insertyaf_prov_Membership(yaf_prov_Membership instance);
    partial void Updateyaf_prov_Membership(yaf_prov_Membership instance);
    partial void Deleteyaf_prov_Membership(yaf_prov_Membership instance);
    partial void Insertyaf_prov_Profile(yaf_prov_Profile instance);
    partial void Updateyaf_prov_Profile(yaf_prov_Profile instance);
    partial void Deleteyaf_prov_Profile(yaf_prov_Profile instance);
    partial void Insertyaf_prov_Role(yaf_prov_Role instance);
    partial void Updateyaf_prov_Role(yaf_prov_Role instance);
    partial void Deleteyaf_prov_Role(yaf_prov_Role instance);
    partial void Insertyaf_Rank(yaf_Rank instance);
    partial void Updateyaf_Rank(yaf_Rank instance);
    partial void Deleteyaf_Rank(yaf_Rank instance);
    partial void Insertyaf_Registry(yaf_Registry instance);
    partial void Updateyaf_Registry(yaf_Registry instance);
    partial void Deleteyaf_Registry(yaf_Registry instance);
    partial void Insertyaf_Replace_Word(yaf_Replace_Word instance);
    partial void Updateyaf_Replace_Word(yaf_Replace_Word instance);
    partial void Deleteyaf_Replace_Word(yaf_Replace_Word instance);
    partial void Insertyaf_ShoutboxMessage(yaf_ShoutboxMessage instance);
    partial void Updateyaf_ShoutboxMessage(yaf_ShoutboxMessage instance);
    partial void Deleteyaf_ShoutboxMessage(yaf_ShoutboxMessage instance);
    partial void Insertyaf_Smiley(yaf_Smiley instance);
    partial void Updateyaf_Smiley(yaf_Smiley instance);
    partial void Deleteyaf_Smiley(yaf_Smiley instance);
    partial void Insertyaf_Thank(yaf_Thank instance);
    partial void Updateyaf_Thank(yaf_Thank instance);
    partial void Deleteyaf_Thank(yaf_Thank instance);
    partial void Insertyaf_Topic(yaf_Topic instance);
    partial void Updateyaf_Topic(yaf_Topic instance);
    partial void Deleteyaf_Topic(yaf_Topic instance);
    partial void Insertyaf_User(yaf_User instance);
    partial void Updateyaf_User(yaf_User instance);
    partial void Deleteyaf_User(yaf_User instance);
    partial void Insertyaf_UserAlbum(yaf_UserAlbum instance);
    partial void Updateyaf_UserAlbum(yaf_UserAlbum instance);
    partial void Deleteyaf_UserAlbum(yaf_UserAlbum instance);
    partial void Insertyaf_UserAlbumImage(yaf_UserAlbumImage instance);
    partial void Updateyaf_UserAlbumImage(yaf_UserAlbumImage instance);
    partial void Deleteyaf_UserAlbumImage(yaf_UserAlbumImage instance);
    partial void Insertyaf_UserForum(yaf_UserForum instance);
    partial void Updateyaf_UserForum(yaf_UserForum instance);
    partial void Deleteyaf_UserForum(yaf_UserForum instance);
    partial void Insertyaf_UserGroup(yaf_UserGroup instance);
    partial void Updateyaf_UserGroup(yaf_UserGroup instance);
    partial void Deleteyaf_UserGroup(yaf_UserGroup instance);
    partial void Insertyaf_UserPMessage(yaf_UserPMessage instance);
    partial void Updateyaf_UserPMessage(yaf_UserPMessage instance);
    partial void Deleteyaf_UserPMessage(yaf_UserPMessage instance);
    partial void Insertyaf_WatchForum(yaf_WatchForum instance);
    partial void Updateyaf_WatchForum(yaf_WatchForum instance);
    partial void Deleteyaf_WatchForum(yaf_WatchForum instance);
    #endregion
		
		public FFLinqClassDataContext() : 
				base(global::FF_Classes.Properties.Settings.Default.ForumDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public FFLinqClassDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FFLinqClassDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FFLinqClassDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FFLinqClassDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<FF_Admin> FF_Admins
		{
			get
			{
				return this.GetTable<FF_Admin>();
			}
		}
		
		public System.Data.Linq.Table<yaf_WatchTopic> yaf_WatchTopics
		{
			get
			{
				return this.GetTable<yaf_WatchTopic>();
			}
		}
		
		public System.Data.Linq.Table<FF_Article> FF_Articles
		{
			get
			{
				return this.GetTable<FF_Article>();
			}
		}
		
		public System.Data.Linq.Table<FF_Assist> FF_Assists
		{
			get
			{
				return this.GetTable<FF_Assist>();
			}
		}
		
		public System.Data.Linq.Table<FF_ChampionGoalScorer> FF_ChampionGoalScorers
		{
			get
			{
				return this.GetTable<FF_ChampionGoalScorer>();
			}
		}
		
		public System.Data.Linq.Table<FF_ChampionsGroupStage> FF_ChampionsGroupStages
		{
			get
			{
				return this.GetTable<FF_ChampionsGroupStage>();
			}
		}
		
		public System.Data.Linq.Table<FF_ChampionsLeagueTable> FF_ChampionsLeagueTables
		{
			get
			{
				return this.GetTable<FF_ChampionsLeagueTable>();
			}
		}
		
		public System.Data.Linq.Table<FF_ChampionsLegaueGroup> FF_ChampionsLegaueGroups
		{
			get
			{
				return this.GetTable<FF_ChampionsLegaueGroup>();
			}
		}
		
		public System.Data.Linq.Table<FF_ChampionsOtherStage> FF_ChampionsOtherStages
		{
			get
			{
				return this.GetTable<FF_ChampionsOtherStage>();
			}
		}
		
		public System.Data.Linq.Table<FF_Comment> FF_Comments
		{
			get
			{
				return this.GetTable<FF_Comment>();
			}
		}
		
		public System.Data.Linq.Table<FF_CommentSubscription> FF_CommentSubscriptions
		{
			get
			{
				return this.GetTable<FF_CommentSubscription>();
			}
		}
		
		public System.Data.Linq.Table<FF_GoalScorer> FF_GoalScorers
		{
			get
			{
				return this.GetTable<FF_GoalScorer>();
			}
		}
		
		public System.Data.Linq.Table<FF_League> FF_Leagues
		{
			get
			{
				return this.GetTable<FF_League>();
			}
		}
		
		public System.Data.Linq.Table<FF_LeagueTable> FF_LeagueTables
		{
			get
			{
				return this.GetTable<FF_LeagueTable>();
			}
		}
		
		public System.Data.Linq.Table<FF_Match> FF_Matches
		{
			get
			{
				return this.GetTable<FF_Match>();
			}
		}
		
		public System.Data.Linq.Table<FF_New> FF_News
		{
			get
			{
				return this.GetTable<FF_New>();
			}
		}
		
		public System.Data.Linq.Table<FF_Player> FF_Players
		{
			get
			{
				return this.GetTable<FF_Player>();
			}
		}
		
		public System.Data.Linq.Table<FF_PlayerStatus> FF_PlayerStatus
		{
			get
			{
				return this.GetTable<FF_PlayerStatus>();
			}
		}
		
		public System.Data.Linq.Table<FF_Poll> FF_Polls
		{
			get
			{
				return this.GetTable<FF_Poll>();
			}
		}
		
		public System.Data.Linq.Table<FF_Season> FF_Seasons
		{
			get
			{
				return this.GetTable<FF_Season>();
			}
		}
		
		public System.Data.Linq.Table<FF_TeamPlayer> FF_TeamPlayers
		{
			get
			{
				return this.GetTable<FF_TeamPlayer>();
			}
		}
		
		public System.Data.Linq.Table<FF_Team> FF_Teams
		{
			get
			{
				return this.GetTable<FF_Team>();
			}
		}
		
		public System.Data.Linq.Table<FF_TopScorer> FF_TopScorers
		{
			get
			{
				return this.GetTable<FF_TopScorer>();
			}
		}
		
		public System.Data.Linq.Table<FF_UserComment> FF_UserComments
		{
			get
			{
				return this.GetTable<FF_UserComment>();
			}
		}
		
		public System.Data.Linq.Table<FF_UserComment2> FF_UserComment2s
		{
			get
			{
				return this.GetTable<FF_UserComment2>();
			}
		}
		
		public System.Data.Linq.Table<FF_Vote> FF_Votes
		{
			get
			{
				return this.GetTable<FF_Vote>();
			}
		}
		
		public System.Data.Linq.Table<yaf_AccessMask> yaf_AccessMasks
		{
			get
			{
				return this.GetTable<yaf_AccessMask>();
			}
		}
		
		public System.Data.Linq.Table<yaf_Active> yaf_Actives
		{
			get
			{
				return this.GetTable<yaf_Active>();
			}
		}
		
		public System.Data.Linq.Table<yaf_ActiveAccess> yaf_ActiveAccesses
		{
			get
			{
				return this.GetTable<yaf_ActiveAccess>();
			}
		}
		
		public System.Data.Linq.Table<yaf_Attachment> yaf_Attachments
		{
			get
			{
				return this.GetTable<yaf_Attachment>();
			}
		}
		
		public System.Data.Linq.Table<yaf_BannedIP> yaf_BannedIPs
		{
			get
			{
				return this.GetTable<yaf_BannedIP>();
			}
		}
		
		public System.Data.Linq.Table<yaf_BBCode> yaf_BBCodes
		{
			get
			{
				return this.GetTable<yaf_BBCode>();
			}
		}
		
		public System.Data.Linq.Table<yaf_Board> yaf_Boards
		{
			get
			{
				return this.GetTable<yaf_Board>();
			}
		}
		
		public System.Data.Linq.Table<yaf_Buddy> yaf_Buddies
		{
			get
			{
				return this.GetTable<yaf_Buddy>();
			}
		}
		
		public System.Data.Linq.Table<yaf_Category> yaf_Categories
		{
			get
			{
				return this.GetTable<yaf_Category>();
			}
		}
		
		public System.Data.Linq.Table<yaf_CheckEmail> yaf_CheckEmails
		{
			get
			{
				return this.GetTable<yaf_CheckEmail>();
			}
		}
		
		public System.Data.Linq.Table<yaf_Choice> yaf_Choices
		{
			get
			{
				return this.GetTable<yaf_Choice>();
			}
		}
		
		public System.Data.Linq.Table<yaf_EventLog> yaf_EventLogs
		{
			get
			{
				return this.GetTable<yaf_EventLog>();
			}
		}
		
		public System.Data.Linq.Table<yaf_Extension> yaf_Extensions
		{
			get
			{
				return this.GetTable<yaf_Extension>();
			}
		}
		
		public System.Data.Linq.Table<yaf_FavoriteTopic> yaf_FavoriteTopics
		{
			get
			{
				return this.GetTable<yaf_FavoriteTopic>();
			}
		}
		
		public System.Data.Linq.Table<yaf_Forum> yaf_Forums
		{
			get
			{
				return this.GetTable<yaf_Forum>();
			}
		}
		
		public System.Data.Linq.Table<yaf_ForumAccess> yaf_ForumAccesses
		{
			get
			{
				return this.GetTable<yaf_ForumAccess>();
			}
		}
		
		public System.Data.Linq.Table<yaf_Group> yaf_Groups
		{
			get
			{
				return this.GetTable<yaf_Group>();
			}
		}
		
		public System.Data.Linq.Table<yaf_GroupMedal> yaf_GroupMedals
		{
			get
			{
				return this.GetTable<yaf_GroupMedal>();
			}
		}
		
		public System.Data.Linq.Table<yaf_IgnoreUser> yaf_IgnoreUsers
		{
			get
			{
				return this.GetTable<yaf_IgnoreUser>();
			}
		}
		
		public System.Data.Linq.Table<yaf_Mail> yaf_Mails
		{
			get
			{
				return this.GetTable<yaf_Mail>();
			}
		}
		
		public System.Data.Linq.Table<yaf_Medal> yaf_Medals
		{
			get
			{
				return this.GetTable<yaf_Medal>();
			}
		}
		
		public System.Data.Linq.Table<yaf_Message> yaf_Messages
		{
			get
			{
				return this.GetTable<yaf_Message>();
			}
		}
		
		public System.Data.Linq.Table<yaf_MessageHistory> yaf_MessageHistories
		{
			get
			{
				return this.GetTable<yaf_MessageHistory>();
			}
		}
		
		public System.Data.Linq.Table<yaf_MessageReported> yaf_MessageReporteds
		{
			get
			{
				return this.GetTable<yaf_MessageReported>();
			}
		}
		
		public System.Data.Linq.Table<yaf_MessageReportedAudit> yaf_MessageReportedAudits
		{
			get
			{
				return this.GetTable<yaf_MessageReportedAudit>();
			}
		}
		
		public System.Data.Linq.Table<yaf_NntpForum> yaf_NntpForums
		{
			get
			{
				return this.GetTable<yaf_NntpForum>();
			}
		}
		
		public System.Data.Linq.Table<yaf_NntpServer> yaf_NntpServers
		{
			get
			{
				return this.GetTable<yaf_NntpServer>();
			}
		}
		
		public System.Data.Linq.Table<yaf_NntpTopic> yaf_NntpTopics
		{
			get
			{
				return this.GetTable<yaf_NntpTopic>();
			}
		}
		
		public System.Data.Linq.Table<yaf_PMessage> yaf_PMessages
		{
			get
			{
				return this.GetTable<yaf_PMessage>();
			}
		}
		
		public System.Data.Linq.Table<yaf_Poll> yaf_Polls
		{
			get
			{
				return this.GetTable<yaf_Poll>();
			}
		}
		
		public System.Data.Linq.Table<yaf_PollGroupCluster> yaf_PollGroupClusters
		{
			get
			{
				return this.GetTable<yaf_PollGroupCluster>();
			}
		}
		
		public System.Data.Linq.Table<yaf_PollVote> yaf_PollVotes
		{
			get
			{
				return this.GetTable<yaf_PollVote>();
			}
		}
		
		public System.Data.Linq.Table<yaf_prov_Application> yaf_prov_Applications
		{
			get
			{
				return this.GetTable<yaf_prov_Application>();
			}
		}
		
		public System.Data.Linq.Table<yaf_prov_Membership> yaf_prov_Memberships
		{
			get
			{
				return this.GetTable<yaf_prov_Membership>();
			}
		}
		
		public System.Data.Linq.Table<yaf_prov_Profile> yaf_prov_Profiles
		{
			get
			{
				return this.GetTable<yaf_prov_Profile>();
			}
		}
		
		public System.Data.Linq.Table<yaf_prov_Role> yaf_prov_Roles
		{
			get
			{
				return this.GetTable<yaf_prov_Role>();
			}
		}
		
		public System.Data.Linq.Table<yaf_prov_RoleMembership> yaf_prov_RoleMemberships
		{
			get
			{
				return this.GetTable<yaf_prov_RoleMembership>();
			}
		}
		
		public System.Data.Linq.Table<yaf_Rank> yaf_Ranks
		{
			get
			{
				return this.GetTable<yaf_Rank>();
			}
		}
		
		public System.Data.Linq.Table<yaf_Registry> yaf_Registries
		{
			get
			{
				return this.GetTable<yaf_Registry>();
			}
		}
		
		public System.Data.Linq.Table<yaf_Replace_Word> yaf_Replace_Words
		{
			get
			{
				return this.GetTable<yaf_Replace_Word>();
			}
		}
		
		public System.Data.Linq.Table<yaf_ShoutboxMessage> yaf_ShoutboxMessages
		{
			get
			{
				return this.GetTable<yaf_ShoutboxMessage>();
			}
		}
		
		public System.Data.Linq.Table<yaf_Smiley> yaf_Smileys
		{
			get
			{
				return this.GetTable<yaf_Smiley>();
			}
		}
		
		public System.Data.Linq.Table<yaf_Thank> yaf_Thanks
		{
			get
			{
				return this.GetTable<yaf_Thank>();
			}
		}
		
		public System.Data.Linq.Table<yaf_Topic> yaf_Topics
		{
			get
			{
				return this.GetTable<yaf_Topic>();
			}
		}
		
		public System.Data.Linq.Table<yaf_User> yaf_Users
		{
			get
			{
				return this.GetTable<yaf_User>();
			}
		}
		
		public System.Data.Linq.Table<yaf_UserAlbum> yaf_UserAlbums
		{
			get
			{
				return this.GetTable<yaf_UserAlbum>();
			}
		}
		
		public System.Data.Linq.Table<yaf_UserAlbumImage> yaf_UserAlbumImages
		{
			get
			{
				return this.GetTable<yaf_UserAlbumImage>();
			}
		}
		
		public System.Data.Linq.Table<yaf_UserForum> yaf_UserForums
		{
			get
			{
				return this.GetTable<yaf_UserForum>();
			}
		}
		
		public System.Data.Linq.Table<yaf_UserGroup> yaf_UserGroups
		{
			get
			{
				return this.GetTable<yaf_UserGroup>();
			}
		}
		
		public System.Data.Linq.Table<yaf_UserMedal> yaf_UserMedals
		{
			get
			{
				return this.GetTable<yaf_UserMedal>();
			}
		}
		
		public System.Data.Linq.Table<yaf_UserPMessage> yaf_UserPMessages
		{
			get
			{
				return this.GetTable<yaf_UserPMessage>();
			}
		}
		
		public System.Data.Linq.Table<yaf_WatchForum> yaf_WatchForums
		{
			get
			{
				return this.GetTable<yaf_WatchForum>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FF_Admin")]
	public partial class FF_Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserID;
		
		private string _UserName;
		
		private string _Password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public FF_Admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_WatchTopic")]
	public partial class yaf_WatchTopic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WatchTopicID;
		
		private int _TopicID;
		
		private int _UserID;
		
		private System.DateTime _Created;
		
		private System.Nullable<System.DateTime> _LastMail;
		
		private EntityRef<yaf_Topic> _yaf_Topic;
		
		private EntityRef<yaf_User> _yaf_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWatchTopicIDChanging(int value);
    partial void OnWatchTopicIDChanged();
    partial void OnTopicIDChanging(int value);
    partial void OnTopicIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnLastMailChanging(System.Nullable<System.DateTime> value);
    partial void OnLastMailChanged();
    #endregion
		
		public yaf_WatchTopic()
		{
			this._yaf_Topic = default(EntityRef<yaf_Topic>);
			this._yaf_User = default(EntityRef<yaf_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WatchTopicID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int WatchTopicID
		{
			get
			{
				return this._WatchTopicID;
			}
			set
			{
				if ((this._WatchTopicID != value))
				{
					this.OnWatchTopicIDChanging(value);
					this.SendPropertyChanging();
					this._WatchTopicID = value;
					this.SendPropertyChanged("WatchTopicID");
					this.OnWatchTopicIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicID", DbType="Int NOT NULL")]
		public int TopicID
		{
			get
			{
				return this._TopicID;
			}
			set
			{
				if ((this._TopicID != value))
				{
					if (this._yaf_Topic.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTopicIDChanging(value);
					this.SendPropertyChanging();
					this._TopicID = value;
					this.SendPropertyChanged("TopicID");
					this.OnTopicIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._yaf_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastMail", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastMail
		{
			get
			{
				return this._LastMail;
			}
			set
			{
				if ((this._LastMail != value))
				{
					this.OnLastMailChanging(value);
					this.SendPropertyChanging();
					this._LastMail = value;
					this.SendPropertyChanged("LastMail");
					this.OnLastMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Topic_yaf_WatchTopic", Storage="_yaf_Topic", ThisKey="TopicID", OtherKey="TopicID", IsForeignKey=true)]
		public yaf_Topic yaf_Topic
		{
			get
			{
				return this._yaf_Topic.Entity;
			}
			set
			{
				yaf_Topic previousValue = this._yaf_Topic.Entity;
				if (((previousValue != value) 
							|| (this._yaf_Topic.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_Topic.Entity = null;
						previousValue.yaf_WatchTopics.Remove(this);
					}
					this._yaf_Topic.Entity = value;
					if ((value != null))
					{
						value.yaf_WatchTopics.Add(this);
						this._TopicID = value.TopicID;
					}
					else
					{
						this._TopicID = default(int);
					}
					this.SendPropertyChanged("yaf_Topic");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_User_yaf_WatchTopic", Storage="_yaf_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public yaf_User yaf_User
		{
			get
			{
				return this._yaf_User.Entity;
			}
			set
			{
				yaf_User previousValue = this._yaf_User.Entity;
				if (((previousValue != value) 
							|| (this._yaf_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_User.Entity = null;
						previousValue.yaf_WatchTopics.Remove(this);
					}
					this._yaf_User.Entity = value;
					if ((value != null))
					{
						value.yaf_WatchTopics.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("yaf_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FF_Article")]
	public partial class FF_Article : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ArticleID;
		
		private string _Title;
		
		private string _Details;
		
		private string _ImageURL;
		
		private System.DateTime _Date;
		
		private int _UserID;
		
		private string _Paragraph2;
		
		private string _ImageURL2;
		
		private string _Paragraph3;
		
		private string _ImageURL3;
		
		private string _Paragraph4;
		
		private string _ImageURL4;
		
		private EntityRef<yaf_User> _yaf_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArticleIDChanging(System.Guid value);
    partial void OnArticleIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    partial void OnImageURLChanging(string value);
    partial void OnImageURLChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnParagraph2Changing(string value);
    partial void OnParagraph2Changed();
    partial void OnImageURL2Changing(string value);
    partial void OnImageURL2Changed();
    partial void OnParagraph3Changing(string value);
    partial void OnParagraph3Changed();
    partial void OnImageURL3Changing(string value);
    partial void OnImageURL3Changed();
    partial void OnParagraph4Changing(string value);
    partial void OnParagraph4Changed();
    partial void OnImageURL4Changing(string value);
    partial void OnImageURL4Changed();
    #endregion
		
		public FF_Article()
		{
			this._yaf_User = default(EntityRef<yaf_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ArticleID
		{
			get
			{
				return this._ArticleID;
			}
			set
			{
				if ((this._ArticleID != value))
				{
					this.OnArticleIDChanging(value);
					this.SendPropertyChanging();
					this._ArticleID = value;
					this.SendPropertyChanged("ArticleID");
					this.OnArticleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageURL", DbType="NVarChar(200)")]
		public string ImageURL
		{
			get
			{
				return this._ImageURL;
			}
			set
			{
				if ((this._ImageURL != value))
				{
					this.OnImageURLChanging(value);
					this.SendPropertyChanging();
					this._ImageURL = value;
					this.SendPropertyChanged("ImageURL");
					this.OnImageURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._yaf_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paragraph2", DbType="NVarChar(MAX)")]
		public string Paragraph2
		{
			get
			{
				return this._Paragraph2;
			}
			set
			{
				if ((this._Paragraph2 != value))
				{
					this.OnParagraph2Changing(value);
					this.SendPropertyChanging();
					this._Paragraph2 = value;
					this.SendPropertyChanged("Paragraph2");
					this.OnParagraph2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageURL2", DbType="NVarChar(200)")]
		public string ImageURL2
		{
			get
			{
				return this._ImageURL2;
			}
			set
			{
				if ((this._ImageURL2 != value))
				{
					this.OnImageURL2Changing(value);
					this.SendPropertyChanging();
					this._ImageURL2 = value;
					this.SendPropertyChanged("ImageURL2");
					this.OnImageURL2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paragraph3", DbType="NVarChar(MAX)")]
		public string Paragraph3
		{
			get
			{
				return this._Paragraph3;
			}
			set
			{
				if ((this._Paragraph3 != value))
				{
					this.OnParagraph3Changing(value);
					this.SendPropertyChanging();
					this._Paragraph3 = value;
					this.SendPropertyChanged("Paragraph3");
					this.OnParagraph3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageURL3", DbType="NVarChar(200)")]
		public string ImageURL3
		{
			get
			{
				return this._ImageURL3;
			}
			set
			{
				if ((this._ImageURL3 != value))
				{
					this.OnImageURL3Changing(value);
					this.SendPropertyChanging();
					this._ImageURL3 = value;
					this.SendPropertyChanged("ImageURL3");
					this.OnImageURL3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paragraph4", DbType="NVarChar(MAX)")]
		public string Paragraph4
		{
			get
			{
				return this._Paragraph4;
			}
			set
			{
				if ((this._Paragraph4 != value))
				{
					this.OnParagraph4Changing(value);
					this.SendPropertyChanging();
					this._Paragraph4 = value;
					this.SendPropertyChanged("Paragraph4");
					this.OnParagraph4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageURL4", DbType="NVarChar(200)")]
		public string ImageURL4
		{
			get
			{
				return this._ImageURL4;
			}
			set
			{
				if ((this._ImageURL4 != value))
				{
					this.OnImageURL4Changing(value);
					this.SendPropertyChanging();
					this._ImageURL4 = value;
					this.SendPropertyChanged("ImageURL4");
					this.OnImageURL4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_User_FF_Article", Storage="_yaf_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public yaf_User yaf_User
		{
			get
			{
				return this._yaf_User.Entity;
			}
			set
			{
				yaf_User previousValue = this._yaf_User.Entity;
				if (((previousValue != value) 
							|| (this._yaf_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_User.Entity = null;
						previousValue.FF_Articles.Remove(this);
					}
					this._yaf_User.Entity = value;
					if ((value != null))
					{
						value.FF_Articles.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("yaf_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FF_Assists")]
	public partial class FF_Assist : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Guid _PlayerID;
		
		private int _MatchID;
		
		private System.Guid _GoalID;
		
		private EntityRef<FF_Match> _FF_Match;
		
		private EntityRef<FF_TeamPlayer> _FF_TeamPlayer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnPlayerIDChanging(System.Guid value);
    partial void OnPlayerIDChanged();
    partial void OnMatchIDChanging(int value);
    partial void OnMatchIDChanged();
    partial void OnGoalIDChanging(System.Guid value);
    partial void OnGoalIDChanged();
    #endregion
		
		public FF_Assist()
		{
			this._FF_Match = default(EntityRef<FF_Match>);
			this._FF_TeamPlayer = default(EntityRef<FF_TeamPlayer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PlayerID
		{
			get
			{
				return this._PlayerID;
			}
			set
			{
				if ((this._PlayerID != value))
				{
					if (this._FF_TeamPlayer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlayerIDChanging(value);
					this.SendPropertyChanging();
					this._PlayerID = value;
					this.SendPropertyChanged("PlayerID");
					this.OnPlayerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchID", DbType="Int NOT NULL")]
		public int MatchID
		{
			get
			{
				return this._MatchID;
			}
			set
			{
				if ((this._MatchID != value))
				{
					if (this._FF_Match.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMatchIDChanging(value);
					this.SendPropertyChanging();
					this._MatchID = value;
					this.SendPropertyChanged("MatchID");
					this.OnMatchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoalID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GoalID
		{
			get
			{
				return this._GoalID;
			}
			set
			{
				if ((this._GoalID != value))
				{
					this.OnGoalIDChanging(value);
					this.SendPropertyChanging();
					this._GoalID = value;
					this.SendPropertyChanged("GoalID");
					this.OnGoalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Match_FF_Assist", Storage="_FF_Match", ThisKey="MatchID", OtherKey="ID", IsForeignKey=true)]
		public FF_Match FF_Match
		{
			get
			{
				return this._FF_Match.Entity;
			}
			set
			{
				FF_Match previousValue = this._FF_Match.Entity;
				if (((previousValue != value) 
							|| (this._FF_Match.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FF_Match.Entity = null;
						previousValue.FF_Assists.Remove(this);
					}
					this._FF_Match.Entity = value;
					if ((value != null))
					{
						value.FF_Assists.Add(this);
						this._MatchID = value.ID;
					}
					else
					{
						this._MatchID = default(int);
					}
					this.SendPropertyChanged("FF_Match");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_TeamPlayer_FF_Assist", Storage="_FF_TeamPlayer", ThisKey="PlayerID", OtherKey="ID", IsForeignKey=true)]
		public FF_TeamPlayer FF_TeamPlayer
		{
			get
			{
				return this._FF_TeamPlayer.Entity;
			}
			set
			{
				FF_TeamPlayer previousValue = this._FF_TeamPlayer.Entity;
				if (((previousValue != value) 
							|| (this._FF_TeamPlayer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FF_TeamPlayer.Entity = null;
						previousValue.FF_Assists.Remove(this);
					}
					this._FF_TeamPlayer.Entity = value;
					if ((value != null))
					{
						value.FF_Assists.Add(this);
						this._PlayerID = value.ID;
					}
					else
					{
						this._PlayerID = default(System.Guid);
					}
					this.SendPropertyChanged("FF_TeamPlayer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FF_ChampionGoalScorers")]
	public partial class FF_ChampionGoalScorer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Guid _TeamID;
		
		private int _MatchID;
		
		private string _PlayerName;
		
		private string _Minute;
		
		private EntityRef<FF_ChampionsGroupStage> _FF_ChampionsGroupStage;
		
		private EntityRef<FF_Team> _FF_Team;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTeamIDChanging(System.Guid value);
    partial void OnTeamIDChanged();
    partial void OnMatchIDChanging(int value);
    partial void OnMatchIDChanged();
    partial void OnPlayerNameChanging(string value);
    partial void OnPlayerNameChanged();
    partial void OnMinuteChanging(string value);
    partial void OnMinuteChanged();
    #endregion
		
		public FF_ChampionGoalScorer()
		{
			this._FF_ChampionsGroupStage = default(EntityRef<FF_ChampionsGroupStage>);
			this._FF_Team = default(EntityRef<FF_Team>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TeamID
		{
			get
			{
				return this._TeamID;
			}
			set
			{
				if ((this._TeamID != value))
				{
					if (this._FF_Team.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeamIDChanging(value);
					this.SendPropertyChanging();
					this._TeamID = value;
					this.SendPropertyChanged("TeamID");
					this.OnTeamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchID", DbType="Int NOT NULL")]
		public int MatchID
		{
			get
			{
				return this._MatchID;
			}
			set
			{
				if ((this._MatchID != value))
				{
					if (this._FF_ChampionsGroupStage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMatchIDChanging(value);
					this.SendPropertyChanging();
					this._MatchID = value;
					this.SendPropertyChanged("MatchID");
					this.OnMatchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PlayerName
		{
			get
			{
				return this._PlayerName;
			}
			set
			{
				if ((this._PlayerName != value))
				{
					this.OnPlayerNameChanging(value);
					this.SendPropertyChanging();
					this._PlayerName = value;
					this.SendPropertyChanged("PlayerName");
					this.OnPlayerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Minute", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string Minute
		{
			get
			{
				return this._Minute;
			}
			set
			{
				if ((this._Minute != value))
				{
					this.OnMinuteChanging(value);
					this.SendPropertyChanging();
					this._Minute = value;
					this.SendPropertyChanged("Minute");
					this.OnMinuteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_ChampionsGroupStage_FF_ChampionGoalScorer", Storage="_FF_ChampionsGroupStage", ThisKey="MatchID", OtherKey="ID", IsForeignKey=true)]
		public FF_ChampionsGroupStage FF_ChampionsGroupStage
		{
			get
			{
				return this._FF_ChampionsGroupStage.Entity;
			}
			set
			{
				FF_ChampionsGroupStage previousValue = this._FF_ChampionsGroupStage.Entity;
				if (((previousValue != value) 
							|| (this._FF_ChampionsGroupStage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FF_ChampionsGroupStage.Entity = null;
						previousValue.FF_ChampionGoalScorers.Remove(this);
					}
					this._FF_ChampionsGroupStage.Entity = value;
					if ((value != null))
					{
						value.FF_ChampionGoalScorers.Add(this);
						this._MatchID = value.ID;
					}
					else
					{
						this._MatchID = default(int);
					}
					this.SendPropertyChanged("FF_ChampionsGroupStage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Team_FF_ChampionGoalScorer", Storage="_FF_Team", ThisKey="TeamID", OtherKey="TeamID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public FF_Team FF_Team
		{
			get
			{
				return this._FF_Team.Entity;
			}
			set
			{
				FF_Team previousValue = this._FF_Team.Entity;
				if (((previousValue != value) 
							|| (this._FF_Team.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FF_Team.Entity = null;
						previousValue.FF_ChampionGoalScorers.Remove(this);
					}
					this._FF_Team.Entity = value;
					if ((value != null))
					{
						value.FF_ChampionGoalScorers.Add(this);
						this._TeamID = value.TeamID;
					}
					else
					{
						this._TeamID = default(System.Guid);
					}
					this.SendPropertyChanged("FF_Team");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FF_ChampionsGroupStages")]
	public partial class FF_ChampionsGroupStage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Guid _SeasonID;
		
		private System.Guid _GroupID;
		
		private System.Guid _Team1ID;
		
		private System.Guid _Team2ID;
		
		private string _Team1PlayerImageURL;
		
		private string _Team2PlayerImageURL;
		
		private string _Team1Details;
		
		private string _Team2Details;
		
		private string _Team1PlayerName;
		
		private string _Team2PlayerName;
		
		private string _Location;
		
		private int _Team1Score;
		
		private int _Team2Score;
		
		private System.DateTime _Date;
		
		private EntitySet<FF_ChampionGoalScorer> _FF_ChampionGoalScorers;
		
		private EntityRef<FF_Season> _FF_Season;
		
		private EntityRef<FF_Team> _FF_Team;
		
		private EntityRef<FF_Team> _FF_Team1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSeasonIDChanging(System.Guid value);
    partial void OnSeasonIDChanged();
    partial void OnGroupIDChanging(System.Guid value);
    partial void OnGroupIDChanged();
    partial void OnTeam1IDChanging(System.Guid value);
    partial void OnTeam1IDChanged();
    partial void OnTeam2IDChanging(System.Guid value);
    partial void OnTeam2IDChanged();
    partial void OnTeam1PlayerImageURLChanging(string value);
    partial void OnTeam1PlayerImageURLChanged();
    partial void OnTeam2PlayerImageURLChanging(string value);
    partial void OnTeam2PlayerImageURLChanged();
    partial void OnTeam1DetailsChanging(string value);
    partial void OnTeam1DetailsChanged();
    partial void OnTeam2DetailsChanging(string value);
    partial void OnTeam2DetailsChanged();
    partial void OnTeam1PlayerNameChanging(string value);
    partial void OnTeam1PlayerNameChanged();
    partial void OnTeam2PlayerNameChanging(string value);
    partial void OnTeam2PlayerNameChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnTeam1ScoreChanging(int value);
    partial void OnTeam1ScoreChanged();
    partial void OnTeam2ScoreChanging(int value);
    partial void OnTeam2ScoreChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    #endregion
		
		public FF_ChampionsGroupStage()
		{
			this._FF_ChampionGoalScorers = new EntitySet<FF_ChampionGoalScorer>(new Action<FF_ChampionGoalScorer>(this.attach_FF_ChampionGoalScorers), new Action<FF_ChampionGoalScorer>(this.detach_FF_ChampionGoalScorers));
			this._FF_Season = default(EntityRef<FF_Season>);
			this._FF_Team = default(EntityRef<FF_Team>);
			this._FF_Team1 = default(EntityRef<FF_Team>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeasonID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SeasonID
		{
			get
			{
				return this._SeasonID;
			}
			set
			{
				if ((this._SeasonID != value))
				{
					if (this._FF_Season.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSeasonIDChanging(value);
					this.SendPropertyChanging();
					this._SeasonID = value;
					this.SendPropertyChanged("SeasonID");
					this.OnSeasonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team1ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Team1ID
		{
			get
			{
				return this._Team1ID;
			}
			set
			{
				if ((this._Team1ID != value))
				{
					if (this._FF_Team.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeam1IDChanging(value);
					this.SendPropertyChanging();
					this._Team1ID = value;
					this.SendPropertyChanged("Team1ID");
					this.OnTeam1IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team2ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Team2ID
		{
			get
			{
				return this._Team2ID;
			}
			set
			{
				if ((this._Team2ID != value))
				{
					if (this._FF_Team1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeam2IDChanging(value);
					this.SendPropertyChanging();
					this._Team2ID = value;
					this.SendPropertyChanged("Team2ID");
					this.OnTeam2IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team1PlayerImageURL", DbType="NVarChar(200)")]
		public string Team1PlayerImageURL
		{
			get
			{
				return this._Team1PlayerImageURL;
			}
			set
			{
				if ((this._Team1PlayerImageURL != value))
				{
					this.OnTeam1PlayerImageURLChanging(value);
					this.SendPropertyChanging();
					this._Team1PlayerImageURL = value;
					this.SendPropertyChanged("Team1PlayerImageURL");
					this.OnTeam1PlayerImageURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team2PlayerImageURL", DbType="NVarChar(200)")]
		public string Team2PlayerImageURL
		{
			get
			{
				return this._Team2PlayerImageURL;
			}
			set
			{
				if ((this._Team2PlayerImageURL != value))
				{
					this.OnTeam2PlayerImageURLChanging(value);
					this.SendPropertyChanging();
					this._Team2PlayerImageURL = value;
					this.SendPropertyChanged("Team2PlayerImageURL");
					this.OnTeam2PlayerImageURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team1Details", DbType="NVarChar(MAX)")]
		public string Team1Details
		{
			get
			{
				return this._Team1Details;
			}
			set
			{
				if ((this._Team1Details != value))
				{
					this.OnTeam1DetailsChanging(value);
					this.SendPropertyChanging();
					this._Team1Details = value;
					this.SendPropertyChanged("Team1Details");
					this.OnTeam1DetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team2Details", DbType="NVarChar(MAX)")]
		public string Team2Details
		{
			get
			{
				return this._Team2Details;
			}
			set
			{
				if ((this._Team2Details != value))
				{
					this.OnTeam2DetailsChanging(value);
					this.SendPropertyChanging();
					this._Team2Details = value;
					this.SendPropertyChanged("Team2Details");
					this.OnTeam2DetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team1PlayerName", DbType="NVarChar(50)")]
		public string Team1PlayerName
		{
			get
			{
				return this._Team1PlayerName;
			}
			set
			{
				if ((this._Team1PlayerName != value))
				{
					this.OnTeam1PlayerNameChanging(value);
					this.SendPropertyChanging();
					this._Team1PlayerName = value;
					this.SendPropertyChanged("Team1PlayerName");
					this.OnTeam1PlayerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team2PlayerName", DbType="NVarChar(50)")]
		public string Team2PlayerName
		{
			get
			{
				return this._Team2PlayerName;
			}
			set
			{
				if ((this._Team2PlayerName != value))
				{
					this.OnTeam2PlayerNameChanging(value);
					this.SendPropertyChanging();
					this._Team2PlayerName = value;
					this.SendPropertyChanged("Team2PlayerName");
					this.OnTeam2PlayerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team1Score", DbType="Int NOT NULL")]
		public int Team1Score
		{
			get
			{
				return this._Team1Score;
			}
			set
			{
				if ((this._Team1Score != value))
				{
					this.OnTeam1ScoreChanging(value);
					this.SendPropertyChanging();
					this._Team1Score = value;
					this.SendPropertyChanged("Team1Score");
					this.OnTeam1ScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team2Score", DbType="Int NOT NULL")]
		public int Team2Score
		{
			get
			{
				return this._Team2Score;
			}
			set
			{
				if ((this._Team2Score != value))
				{
					this.OnTeam2ScoreChanging(value);
					this.SendPropertyChanging();
					this._Team2Score = value;
					this.SendPropertyChanged("Team2Score");
					this.OnTeam2ScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_ChampionsGroupStage_FF_ChampionGoalScorer", Storage="_FF_ChampionGoalScorers", ThisKey="ID", OtherKey="MatchID")]
		public EntitySet<FF_ChampionGoalScorer> FF_ChampionGoalScorers
		{
			get
			{
				return this._FF_ChampionGoalScorers;
			}
			set
			{
				this._FF_ChampionGoalScorers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Season_FF_ChampionsGroupStage", Storage="_FF_Season", ThisKey="SeasonID", OtherKey="SeasonID", IsForeignKey=true)]
		public FF_Season FF_Season
		{
			get
			{
				return this._FF_Season.Entity;
			}
			set
			{
				FF_Season previousValue = this._FF_Season.Entity;
				if (((previousValue != value) 
							|| (this._FF_Season.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FF_Season.Entity = null;
						previousValue.FF_ChampionsGroupStages.Remove(this);
					}
					this._FF_Season.Entity = value;
					if ((value != null))
					{
						value.FF_ChampionsGroupStages.Add(this);
						this._SeasonID = value.SeasonID;
					}
					else
					{
						this._SeasonID = default(System.Guid);
					}
					this.SendPropertyChanged("FF_Season");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Team_FF_ChampionsGroupStage", Storage="_FF_Team", ThisKey="Team1ID", OtherKey="TeamID", IsForeignKey=true)]
		public FF_Team FF_Team
		{
			get
			{
				return this._FF_Team.Entity;
			}
			set
			{
				FF_Team previousValue = this._FF_Team.Entity;
				if (((previousValue != value) 
							|| (this._FF_Team.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FF_Team.Entity = null;
						previousValue.FF_ChampionsGroupStages.Remove(this);
					}
					this._FF_Team.Entity = value;
					if ((value != null))
					{
						value.FF_ChampionsGroupStages.Add(this);
						this._Team1ID = value.TeamID;
					}
					else
					{
						this._Team1ID = default(System.Guid);
					}
					this.SendPropertyChanged("FF_Team");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Team_FF_ChampionsGroupStage1", Storage="_FF_Team1", ThisKey="Team2ID", OtherKey="TeamID", IsForeignKey=true)]
		public FF_Team FF_Team1
		{
			get
			{
				return this._FF_Team1.Entity;
			}
			set
			{
				FF_Team previousValue = this._FF_Team1.Entity;
				if (((previousValue != value) 
							|| (this._FF_Team1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FF_Team1.Entity = null;
						previousValue.FF_ChampionsGroupStages1.Remove(this);
					}
					this._FF_Team1.Entity = value;
					if ((value != null))
					{
						value.FF_ChampionsGroupStages1.Add(this);
						this._Team2ID = value.TeamID;
					}
					else
					{
						this._Team2ID = default(System.Guid);
					}
					this.SendPropertyChanged("FF_Team1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FF_ChampionGoalScorers(FF_ChampionGoalScorer entity)
		{
			this.SendPropertyChanging();
			entity.FF_ChampionsGroupStage = this;
		}
		
		private void detach_FF_ChampionGoalScorers(FF_ChampionGoalScorer entity)
		{
			this.SendPropertyChanging();
			entity.FF_ChampionsGroupStage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FF_ChampionsLeagueTable")]
	public partial class FF_ChampionsLeagueTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Guid _TeamID;
		
		private int _P;
		
		private int _W;
		
		private int _D;
		
		private int _L;
		
		private int _F;
		
		private int _A;
		
		private int _Diff;
		
		private int _Points;
		
		private System.Guid _SeasonID;
		
		private System.Guid _GroupID;
		
		private EntityRef<FF_ChampionsLegaueGroup> _FF_ChampionsLegaueGroup;
		
		private EntityRef<FF_Season> _FF_Season;
		
		private EntityRef<FF_Team> _FF_Team;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTeamIDChanging(System.Guid value);
    partial void OnTeamIDChanged();
    partial void OnPChanging(int value);
    partial void OnPChanged();
    partial void OnWChanging(int value);
    partial void OnWChanged();
    partial void OnDChanging(int value);
    partial void OnDChanged();
    partial void OnLChanging(int value);
    partial void OnLChanged();
    partial void OnFChanging(int value);
    partial void OnFChanged();
    partial void OnAChanging(int value);
    partial void OnAChanged();
    partial void OnDiffChanging(int value);
    partial void OnDiffChanged();
    partial void OnPointsChanging(int value);
    partial void OnPointsChanged();
    partial void OnSeasonIDChanging(System.Guid value);
    partial void OnSeasonIDChanged();
    partial void OnGroupIDChanging(System.Guid value);
    partial void OnGroupIDChanged();
    #endregion
		
		public FF_ChampionsLeagueTable()
		{
			this._FF_ChampionsLegaueGroup = default(EntityRef<FF_ChampionsLegaueGroup>);
			this._FF_Season = default(EntityRef<FF_Season>);
			this._FF_Team = default(EntityRef<FF_Team>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TeamID
		{
			get
			{
				return this._TeamID;
			}
			set
			{
				if ((this._TeamID != value))
				{
					if (this._FF_Team.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeamIDChanging(value);
					this.SendPropertyChanging();
					this._TeamID = value;
					this.SendPropertyChanged("TeamID");
					this.OnTeamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_P", DbType="Int NOT NULL")]
		public int P
		{
			get
			{
				return this._P;
			}
			set
			{
				if ((this._P != value))
				{
					this.OnPChanging(value);
					this.SendPropertyChanging();
					this._P = value;
					this.SendPropertyChanged("P");
					this.OnPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_W", DbType="Int NOT NULL")]
		public int W
		{
			get
			{
				return this._W;
			}
			set
			{
				if ((this._W != value))
				{
					this.OnWChanging(value);
					this.SendPropertyChanging();
					this._W = value;
					this.SendPropertyChanged("W");
					this.OnWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D", DbType="Int NOT NULL")]
		public int D
		{
			get
			{
				return this._D;
			}
			set
			{
				if ((this._D != value))
				{
					this.OnDChanging(value);
					this.SendPropertyChanging();
					this._D = value;
					this.SendPropertyChanged("D");
					this.OnDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L", DbType="Int NOT NULL")]
		public int L
		{
			get
			{
				return this._L;
			}
			set
			{
				if ((this._L != value))
				{
					this.OnLChanging(value);
					this.SendPropertyChanging();
					this._L = value;
					this.SendPropertyChanged("L");
					this.OnLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F", DbType="Int NOT NULL")]
		public int F
		{
			get
			{
				return this._F;
			}
			set
			{
				if ((this._F != value))
				{
					this.OnFChanging(value);
					this.SendPropertyChanging();
					this._F = value;
					this.SendPropertyChanged("F");
					this.OnFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A", DbType="Int NOT NULL")]
		public int A
		{
			get
			{
				return this._A;
			}
			set
			{
				if ((this._A != value))
				{
					this.OnAChanging(value);
					this.SendPropertyChanging();
					this._A = value;
					this.SendPropertyChanged("A");
					this.OnAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diff", DbType="Int NOT NULL")]
		public int Diff
		{
			get
			{
				return this._Diff;
			}
			set
			{
				if ((this._Diff != value))
				{
					this.OnDiffChanging(value);
					this.SendPropertyChanging();
					this._Diff = value;
					this.SendPropertyChanged("Diff");
					this.OnDiffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Points", DbType="Int NOT NULL")]
		public int Points
		{
			get
			{
				return this._Points;
			}
			set
			{
				if ((this._Points != value))
				{
					this.OnPointsChanging(value);
					this.SendPropertyChanging();
					this._Points = value;
					this.SendPropertyChanged("Points");
					this.OnPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeasonID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SeasonID
		{
			get
			{
				return this._SeasonID;
			}
			set
			{
				if ((this._SeasonID != value))
				{
					if (this._FF_Season.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSeasonIDChanging(value);
					this.SendPropertyChanging();
					this._SeasonID = value;
					this.SendPropertyChanged("SeasonID");
					this.OnSeasonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					if (this._FF_ChampionsLegaueGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_ChampionsLegaueGroup_FF_ChampionsLeagueTable", Storage="_FF_ChampionsLegaueGroup", ThisKey="GroupID", OtherKey="ID", IsForeignKey=true)]
		public FF_ChampionsLegaueGroup FF_ChampionsLegaueGroup
		{
			get
			{
				return this._FF_ChampionsLegaueGroup.Entity;
			}
			set
			{
				FF_ChampionsLegaueGroup previousValue = this._FF_ChampionsLegaueGroup.Entity;
				if (((previousValue != value) 
							|| (this._FF_ChampionsLegaueGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FF_ChampionsLegaueGroup.Entity = null;
						previousValue.FF_ChampionsLeagueTables.Remove(this);
					}
					this._FF_ChampionsLegaueGroup.Entity = value;
					if ((value != null))
					{
						value.FF_ChampionsLeagueTables.Add(this);
						this._GroupID = value.ID;
					}
					else
					{
						this._GroupID = default(System.Guid);
					}
					this.SendPropertyChanged("FF_ChampionsLegaueGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Season_FF_ChampionsLeagueTable", Storage="_FF_Season", ThisKey="SeasonID", OtherKey="SeasonID", IsForeignKey=true)]
		public FF_Season FF_Season
		{
			get
			{
				return this._FF_Season.Entity;
			}
			set
			{
				FF_Season previousValue = this._FF_Season.Entity;
				if (((previousValue != value) 
							|| (this._FF_Season.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FF_Season.Entity = null;
						previousValue.FF_ChampionsLeagueTables.Remove(this);
					}
					this._FF_Season.Entity = value;
					if ((value != null))
					{
						value.FF_ChampionsLeagueTables.Add(this);
						this._SeasonID = value.SeasonID;
					}
					else
					{
						this._SeasonID = default(System.Guid);
					}
					this.SendPropertyChanged("FF_Season");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Team_FF_ChampionsLeagueTable", Storage="_FF_Team", ThisKey="TeamID", OtherKey="TeamID", IsForeignKey=true)]
		public FF_Team FF_Team
		{
			get
			{
				return this._FF_Team.Entity;
			}
			set
			{
				FF_Team previousValue = this._FF_Team.Entity;
				if (((previousValue != value) 
							|| (this._FF_Team.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FF_Team.Entity = null;
						previousValue.FF_ChampionsLeagueTables.Remove(this);
					}
					this._FF_Team.Entity = value;
					if ((value != null))
					{
						value.FF_ChampionsLeagueTables.Add(this);
						this._TeamID = value.TeamID;
					}
					else
					{
						this._TeamID = default(System.Guid);
					}
					this.SendPropertyChanged("FF_Team");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FF_ChampionsLegaueGroups")]
	public partial class FF_ChampionsLegaueGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Group;
		
		private EntitySet<FF_ChampionsLeagueTable> _FF_ChampionsLeagueTables;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnGroupChanging(string value);
    partial void OnGroupChanged();
    #endregion
		
		public FF_ChampionsLegaueGroup()
		{
			this._FF_ChampionsLeagueTables = new EntitySet<FF_ChampionsLeagueTable>(new Action<FF_ChampionsLeagueTable>(this.attach_FF_ChampionsLeagueTables), new Action<FF_ChampionsLeagueTable>(this.detach_FF_ChampionsLeagueTables));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Group]", Storage="_Group", DbType="NVarChar(1) NOT NULL", CanBeNull=false)]
		public string Group
		{
			get
			{
				return this._Group;
			}
			set
			{
				if ((this._Group != value))
				{
					this.OnGroupChanging(value);
					this.SendPropertyChanging();
					this._Group = value;
					this.SendPropertyChanged("Group");
					this.OnGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_ChampionsLegaueGroup_FF_ChampionsLeagueTable", Storage="_FF_ChampionsLeagueTables", ThisKey="ID", OtherKey="GroupID")]
		public EntitySet<FF_ChampionsLeagueTable> FF_ChampionsLeagueTables
		{
			get
			{
				return this._FF_ChampionsLeagueTables;
			}
			set
			{
				this._FF_ChampionsLeagueTables.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FF_ChampionsLeagueTables(FF_ChampionsLeagueTable entity)
		{
			this.SendPropertyChanging();
			entity.FF_ChampionsLegaueGroup = this;
		}
		
		private void detach_FF_ChampionsLeagueTables(FF_ChampionsLeagueTable entity)
		{
			this.SendPropertyChanging();
			entity.FF_ChampionsLegaueGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FF_ChampionsOtherStages")]
	public partial class FF_ChampionsOtherStage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Guid _SeasonID;
		
		private System.Guid _Team1ID;
		
		private System.Guid _Team2ID;
		
		private string _Team1PlayerImageURL;
		
		private string _Team2PlayerImageURL;
		
		private string _Team1Details;
		
		private string _Team2Details;
		
		private string _Team1PlayerName;
		
		private string _Team2PlayerName;
		
		private string _Location;
		
		private int _Team1Score;
		
		private int _Team2Score;
		
		private System.DateTime _Date;
		
		private int _Aggregate1;
		
		private int _Aggregate2;
		
		private int _Leg;
		
		private EntityRef<FF_Season> _FF_Season;
		
		private EntityRef<FF_Team> _FF_Team;
		
		private EntityRef<FF_Team> _FF_Team1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSeasonIDChanging(System.Guid value);
    partial void OnSeasonIDChanged();
    partial void OnTeam1IDChanging(System.Guid value);
    partial void OnTeam1IDChanged();
    partial void OnTeam2IDChanging(System.Guid value);
    partial void OnTeam2IDChanged();
    partial void OnTeam1PlayerImageURLChanging(string value);
    partial void OnTeam1PlayerImageURLChanged();
    partial void OnTeam2PlayerImageURLChanging(string value);
    partial void OnTeam2PlayerImageURLChanged();
    partial void OnTeam1DetailsChanging(string value);
    partial void OnTeam1DetailsChanged();
    partial void OnTeam2DetailsChanging(string value);
    partial void OnTeam2DetailsChanged();
    partial void OnTeam1PlayerNameChanging(string value);
    partial void OnTeam1PlayerNameChanged();
    partial void OnTeam2PlayerNameChanging(string value);
    partial void OnTeam2PlayerNameChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnTeam1ScoreChanging(int value);
    partial void OnTeam1ScoreChanged();
    partial void OnTeam2ScoreChanging(int value);
    partial void OnTeam2ScoreChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnAggregate1Changing(int value);
    partial void OnAggregate1Changed();
    partial void OnAggregate2Changing(int value);
    partial void OnAggregate2Changed();
    partial void OnLegChanging(int value);
    partial void OnLegChanged();
    #endregion
		
		public FF_ChampionsOtherStage()
		{
			this._FF_Season = default(EntityRef<FF_Season>);
			this._FF_Team = default(EntityRef<FF_Team>);
			this._FF_Team1 = default(EntityRef<FF_Team>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeasonID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SeasonID
		{
			get
			{
				return this._SeasonID;
			}
			set
			{
				if ((this._SeasonID != value))
				{
					if (this._FF_Season.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSeasonIDChanging(value);
					this.SendPropertyChanging();
					this._SeasonID = value;
					this.SendPropertyChanged("SeasonID");
					this.OnSeasonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team1ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Team1ID
		{
			get
			{
				return this._Team1ID;
			}
			set
			{
				if ((this._Team1ID != value))
				{
					if (this._FF_Team.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeam1IDChanging(value);
					this.SendPropertyChanging();
					this._Team1ID = value;
					this.SendPropertyChanged("Team1ID");
					this.OnTeam1IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team2ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Team2ID
		{
			get
			{
				return this._Team2ID;
			}
			set
			{
				if ((this._Team2ID != value))
				{
					if (this._FF_Team1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeam2IDChanging(value);
					this.SendPropertyChanging();
					this._Team2ID = value;
					this.SendPropertyChanged("Team2ID");
					this.OnTeam2IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team1PlayerImageURL", DbType="NVarChar(200)")]
		public string Team1PlayerImageURL
		{
			get
			{
				return this._Team1PlayerImageURL;
			}
			set
			{
				if ((this._Team1PlayerImageURL != value))
				{
					this.OnTeam1PlayerImageURLChanging(value);
					this.SendPropertyChanging();
					this._Team1PlayerImageURL = value;
					this.SendPropertyChanged("Team1PlayerImageURL");
					this.OnTeam1PlayerImageURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team2PlayerImageURL", DbType="NVarChar(200)")]
		public string Team2PlayerImageURL
		{
			get
			{
				return this._Team2PlayerImageURL;
			}
			set
			{
				if ((this._Team2PlayerImageURL != value))
				{
					this.OnTeam2PlayerImageURLChanging(value);
					this.SendPropertyChanging();
					this._Team2PlayerImageURL = value;
					this.SendPropertyChanged("Team2PlayerImageURL");
					this.OnTeam2PlayerImageURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team1Details", DbType="NVarChar(MAX)")]
		public string Team1Details
		{
			get
			{
				return this._Team1Details;
			}
			set
			{
				if ((this._Team1Details != value))
				{
					this.OnTeam1DetailsChanging(value);
					this.SendPropertyChanging();
					this._Team1Details = value;
					this.SendPropertyChanged("Team1Details");
					this.OnTeam1DetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team2Details", DbType="NVarChar(MAX)")]
		public string Team2Details
		{
			get
			{
				return this._Team2Details;
			}
			set
			{
				if ((this._Team2Details != value))
				{
					this.OnTeam2DetailsChanging(value);
					this.SendPropertyChanging();
					this._Team2Details = value;
					this.SendPropertyChanged("Team2Details");
					this.OnTeam2DetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team1PlayerName", DbType="NVarChar(50)")]
		public string Team1PlayerName
		{
			get
			{
				return this._Team1PlayerName;
			}
			set
			{
				if ((this._Team1PlayerName != value))
				{
					this.OnTeam1PlayerNameChanging(value);
					this.SendPropertyChanging();
					this._Team1PlayerName = value;
					this.SendPropertyChanged("Team1PlayerName");
					this.OnTeam1PlayerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team2PlayerName", DbType="NVarChar(50)")]
		public string Team2PlayerName
		{
			get
			{
				return this._Team2PlayerName;
			}
			set
			{
				if ((this._Team2PlayerName != value))
				{
					this.OnTeam2PlayerNameChanging(value);
					this.SendPropertyChanging();
					this._Team2PlayerName = value;
					this.SendPropertyChanged("Team2PlayerName");
					this.OnTeam2PlayerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team1Score", DbType="Int NOT NULL")]
		public int Team1Score
		{
			get
			{
				return this._Team1Score;
			}
			set
			{
				if ((this._Team1Score != value))
				{
					this.OnTeam1ScoreChanging(value);
					this.SendPropertyChanging();
					this._Team1Score = value;
					this.SendPropertyChanged("Team1Score");
					this.OnTeam1ScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team2Score", DbType="Int NOT NULL")]
		public int Team2Score
		{
			get
			{
				return this._Team2Score;
			}
			set
			{
				if ((this._Team2Score != value))
				{
					this.OnTeam2ScoreChanging(value);
					this.SendPropertyChanging();
					this._Team2Score = value;
					this.SendPropertyChanged("Team2Score");
					this.OnTeam2ScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aggregate1", DbType="Int NOT NULL")]
		public int Aggregate1
		{
			get
			{
				return this._Aggregate1;
			}
			set
			{
				if ((this._Aggregate1 != value))
				{
					this.OnAggregate1Changing(value);
					this.SendPropertyChanging();
					this._Aggregate1 = value;
					this.SendPropertyChanged("Aggregate1");
					this.OnAggregate1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aggregate2", DbType="Int NOT NULL")]
		public int Aggregate2
		{
			get
			{
				return this._Aggregate2;
			}
			set
			{
				if ((this._Aggregate2 != value))
				{
					this.OnAggregate2Changing(value);
					this.SendPropertyChanging();
					this._Aggregate2 = value;
					this.SendPropertyChanged("Aggregate2");
					this.OnAggregate2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Leg", DbType="Int NOT NULL")]
		public int Leg
		{
			get
			{
				return this._Leg;
			}
			set
			{
				if ((this._Leg != value))
				{
					this.OnLegChanging(value);
					this.SendPropertyChanging();
					this._Leg = value;
					this.SendPropertyChanged("Leg");
					this.OnLegChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Season_FF_ChampionsOtherStage", Storage="_FF_Season", ThisKey="SeasonID", OtherKey="SeasonID", IsForeignKey=true)]
		public FF_Season FF_Season
		{
			get
			{
				return this._FF_Season.Entity;
			}
			set
			{
				FF_Season previousValue = this._FF_Season.Entity;
				if (((previousValue != value) 
							|| (this._FF_Season.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FF_Season.Entity = null;
						previousValue.FF_ChampionsOtherStages.Remove(this);
					}
					this._FF_Season.Entity = value;
					if ((value != null))
					{
						value.FF_ChampionsOtherStages.Add(this);
						this._SeasonID = value.SeasonID;
					}
					else
					{
						this._SeasonID = default(System.Guid);
					}
					this.SendPropertyChanged("FF_Season");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Team_FF_ChampionsOtherStage", Storage="_FF_Team", ThisKey="Team1ID", OtherKey="TeamID", IsForeignKey=true)]
		public FF_Team FF_Team
		{
			get
			{
				return this._FF_Team.Entity;
			}
			set
			{
				FF_Team previousValue = this._FF_Team.Entity;
				if (((previousValue != value) 
							|| (this._FF_Team.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FF_Team.Entity = null;
						previousValue.FF_ChampionsOtherStages.Remove(this);
					}
					this._FF_Team.Entity = value;
					if ((value != null))
					{
						value.FF_ChampionsOtherStages.Add(this);
						this._Team1ID = value.TeamID;
					}
					else
					{
						this._Team1ID = default(System.Guid);
					}
					this.SendPropertyChanged("FF_Team");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Team_FF_ChampionsOtherStage1", Storage="_FF_Team1", ThisKey="Team2ID", OtherKey="TeamID", IsForeignKey=true)]
		public FF_Team FF_Team1
		{
			get
			{
				return this._FF_Team1.Entity;
			}
			set
			{
				FF_Team previousValue = this._FF_Team1.Entity;
				if (((previousValue != value) 
							|| (this._FF_Team1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FF_Team1.Entity = null;
						previousValue.FF_ChampionsOtherStages1.Remove(this);
					}
					this._FF_Team1.Entity = value;
					if ((value != null))
					{
						value.FF_ChampionsOtherStages1.Add(this);
						this._Team2ID = value.TeamID;
					}
					else
					{
						this._Team2ID = default(System.Guid);
					}
					this.SendPropertyChanged("FF_Team1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FF_Comments")]
	public partial class FF_Comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Details;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Guid _OwnerID;
		
		private EntitySet<FF_UserComment> _FF_UserComments;
		
		private EntitySet<FF_UserComment2> _FF_UserComment2s;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnOwnerIDChanging(System.Guid value);
    partial void OnOwnerIDChanged();
    #endregion
		
		public FF_Comment()
		{
			this._FF_UserComments = new EntitySet<FF_UserComment>(new Action<FF_UserComment>(this.attach_FF_UserComments), new Action<FF_UserComment>(this.detach_FF_UserComments));
			this._FF_UserComment2s = new EntitySet<FF_UserComment2>(new Action<FF_UserComment2>(this.attach_FF_UserComment2s), new Action<FF_UserComment2>(this.detach_FF_UserComment2s));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="NVarChar(MAX)")]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this.OnOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._OwnerID = value;
					this.SendPropertyChanged("OwnerID");
					this.OnOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Comment_FF_UserComment", Storage="_FF_UserComments", ThisKey="ID", OtherKey="CommentID")]
		public EntitySet<FF_UserComment> FF_UserComments
		{
			get
			{
				return this._FF_UserComments;
			}
			set
			{
				this._FF_UserComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Comment_FF_UserComment2", Storage="_FF_UserComment2s", ThisKey="ID", OtherKey="CommentID")]
		public EntitySet<FF_UserComment2> FF_UserComment2s
		{
			get
			{
				return this._FF_UserComment2s;
			}
			set
			{
				this._FF_UserComment2s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FF_UserComments(FF_UserComment entity)
		{
			this.SendPropertyChanging();
			entity.FF_Comment = this;
		}
		
		private void detach_FF_UserComments(FF_UserComment entity)
		{
			this.SendPropertyChanging();
			entity.FF_Comment = null;
		}
		
		private void attach_FF_UserComment2s(FF_UserComment2 entity)
		{
			this.SendPropertyChanging();
			entity.FF_Comment = this;
		}
		
		private void detach_FF_UserComment2s(FF_UserComment2 entity)
		{
			this.SendPropertyChanging();
			entity.FF_Comment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FF_CommentSubscriptions")]
	public partial class FF_CommentSubscription : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Guid _UserCommentID;
		
		private System.Guid _OwnerID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnUserCommentIDChanging(System.Guid value);
    partial void OnUserCommentIDChanged();
    partial void OnOwnerIDChanging(System.Guid value);
    partial void OnOwnerIDChanged();
    #endregion
		
		public FF_CommentSubscription()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCommentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserCommentID
		{
			get
			{
				return this._UserCommentID;
			}
			set
			{
				if ((this._UserCommentID != value))
				{
					this.OnUserCommentIDChanging(value);
					this.SendPropertyChanging();
					this._UserCommentID = value;
					this.SendPropertyChanged("UserCommentID");
					this.OnUserCommentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this.OnOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._OwnerID = value;
					this.SendPropertyChanged("OwnerID");
					this.OnOwnerIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FF_GoalScorers")]
	public partial class FF_GoalScorer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _PlayerID;
		
		private System.Guid _TeamID;
		
		private int _MatchID;
		
		private string _Minute;
		
		private EntityRef<FF_Match> _FF_Match;
		
		private EntityRef<FF_TeamPlayer> _FF_TeamPlayer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPlayerIDChanging(System.Guid value);
    partial void OnPlayerIDChanged();
    partial void OnTeamIDChanging(System.Guid value);
    partial void OnTeamIDChanged();
    partial void OnMatchIDChanging(int value);
    partial void OnMatchIDChanged();
    partial void OnMinuteChanging(string value);
    partial void OnMinuteChanged();
    #endregion
		
		public FF_GoalScorer()
		{
			this._FF_Match = default(EntityRef<FF_Match>);
			this._FF_TeamPlayer = default(EntityRef<FF_TeamPlayer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PlayerID
		{
			get
			{
				return this._PlayerID;
			}
			set
			{
				if ((this._PlayerID != value))
				{
					if (this._FF_TeamPlayer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlayerIDChanging(value);
					this.SendPropertyChanging();
					this._PlayerID = value;
					this.SendPropertyChanged("PlayerID");
					this.OnPlayerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TeamID
		{
			get
			{
				return this._TeamID;
			}
			set
			{
				if ((this._TeamID != value))
				{
					this.OnTeamIDChanging(value);
					this.SendPropertyChanging();
					this._TeamID = value;
					this.SendPropertyChanged("TeamID");
					this.OnTeamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchID", DbType="Int NOT NULL")]
		public int MatchID
		{
			get
			{
				return this._MatchID;
			}
			set
			{
				if ((this._MatchID != value))
				{
					if (this._FF_Match.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMatchIDChanging(value);
					this.SendPropertyChanging();
					this._MatchID = value;
					this.SendPropertyChanged("MatchID");
					this.OnMatchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Minute", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string Minute
		{
			get
			{
				return this._Minute;
			}
			set
			{
				if ((this._Minute != value))
				{
					this.OnMinuteChanging(value);
					this.SendPropertyChanging();
					this._Minute = value;
					this.SendPropertyChanged("Minute");
					this.OnMinuteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Match_FF_GoalScorer", Storage="_FF_Match", ThisKey="MatchID", OtherKey="ID", IsForeignKey=true)]
		public FF_Match FF_Match
		{
			get
			{
				return this._FF_Match.Entity;
			}
			set
			{
				FF_Match previousValue = this._FF_Match.Entity;
				if (((previousValue != value) 
							|| (this._FF_Match.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FF_Match.Entity = null;
						previousValue.FF_GoalScorers.Remove(this);
					}
					this._FF_Match.Entity = value;
					if ((value != null))
					{
						value.FF_GoalScorers.Add(this);
						this._MatchID = value.ID;
					}
					else
					{
						this._MatchID = default(int);
					}
					this.SendPropertyChanged("FF_Match");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_TeamPlayer_FF_GoalScorer", Storage="_FF_TeamPlayer", ThisKey="PlayerID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public FF_TeamPlayer FF_TeamPlayer
		{
			get
			{
				return this._FF_TeamPlayer.Entity;
			}
			set
			{
				FF_TeamPlayer previousValue = this._FF_TeamPlayer.Entity;
				if (((previousValue != value) 
							|| (this._FF_TeamPlayer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FF_TeamPlayer.Entity = null;
						previousValue.FF_GoalScorers.Remove(this);
					}
					this._FF_TeamPlayer.Entity = value;
					if ((value != null))
					{
						value.FF_GoalScorers.Add(this);
						this._PlayerID = value.ID;
					}
					else
					{
						this._PlayerID = default(System.Guid);
					}
					this.SendPropertyChanged("FF_TeamPlayer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FF_Leagues")]
	public partial class FF_League : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LeagueID;
		
		private string _Name;
		
		private string _LogoURL;
		
		private EntitySet<FF_LeagueTable> _FF_LeagueTables;
		
		private EntitySet<FF_Match> _FF_Matches;
		
		private EntitySet<FF_New> _FF_News;
		
		private EntitySet<FF_Team> _FF_Teams;
		
		private EntitySet<FF_TopScorer> _FF_TopScorers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLeagueIDChanging(int value);
    partial void OnLeagueIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLogoURLChanging(string value);
    partial void OnLogoURLChanged();
    #endregion
		
		public FF_League()
		{
			this._FF_LeagueTables = new EntitySet<FF_LeagueTable>(new Action<FF_LeagueTable>(this.attach_FF_LeagueTables), new Action<FF_LeagueTable>(this.detach_FF_LeagueTables));
			this._FF_Matches = new EntitySet<FF_Match>(new Action<FF_Match>(this.attach_FF_Matches), new Action<FF_Match>(this.detach_FF_Matches));
			this._FF_News = new EntitySet<FF_New>(new Action<FF_New>(this.attach_FF_News), new Action<FF_New>(this.detach_FF_News));
			this._FF_Teams = new EntitySet<FF_Team>(new Action<FF_Team>(this.attach_FF_Teams), new Action<FF_Team>(this.detach_FF_Teams));
			this._FF_TopScorers = new EntitySet<FF_TopScorer>(new Action<FF_TopScorer>(this.attach_FF_TopScorers), new Action<FF_TopScorer>(this.detach_FF_TopScorers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeagueID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LeagueID
		{
			get
			{
				return this._LeagueID;
			}
			set
			{
				if ((this._LeagueID != value))
				{
					this.OnLeagueIDChanging(value);
					this.SendPropertyChanging();
					this._LeagueID = value;
					this.SendPropertyChanged("LeagueID");
					this.OnLeagueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoURL", DbType="NVarChar(200)")]
		public string LogoURL
		{
			get
			{
				return this._LogoURL;
			}
			set
			{
				if ((this._LogoURL != value))
				{
					this.OnLogoURLChanging(value);
					this.SendPropertyChanging();
					this._LogoURL = value;
					this.SendPropertyChanged("LogoURL");
					this.OnLogoURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_League_FF_LeagueTable", Storage="_FF_LeagueTables", ThisKey="LeagueID", OtherKey="LeagueID")]
		public EntitySet<FF_LeagueTable> FF_LeagueTables
		{
			get
			{
				return this._FF_LeagueTables;
			}
			set
			{
				this._FF_LeagueTables.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_League_FF_Match", Storage="_FF_Matches", ThisKey="LeagueID", OtherKey="LeagueID")]
		public EntitySet<FF_Match> FF_Matches
		{
			get
			{
				return this._FF_Matches;
			}
			set
			{
				this._FF_Matches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_League_FF_New", Storage="_FF_News", ThisKey="LeagueID", OtherKey="LeagueID")]
		public EntitySet<FF_New> FF_News
		{
			get
			{
				return this._FF_News;
			}
			set
			{
				this._FF_News.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_League_FF_Team", Storage="_FF_Teams", ThisKey="LeagueID", OtherKey="LeagueID")]
		public EntitySet<FF_Team> FF_Teams
		{
			get
			{
				return this._FF_Teams;
			}
			set
			{
				this._FF_Teams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_League_FF_TopScorer", Storage="_FF_TopScorers", ThisKey="LeagueID", OtherKey="LeagueID")]
		public EntitySet<FF_TopScorer> FF_TopScorers
		{
			get
			{
				return this._FF_TopScorers;
			}
			set
			{
				this._FF_TopScorers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FF_LeagueTables(FF_LeagueTable entity)
		{
			this.SendPropertyChanging();
			entity.FF_League = this;
		}
		
		private void detach_FF_LeagueTables(FF_LeagueTable entity)
		{
			this.SendPropertyChanging();
			entity.FF_League = null;
		}
		
		private void attach_FF_Matches(FF_Match entity)
		{
			this.SendPropertyChanging();
			entity.FF_League = this;
		}
		
		private void detach_FF_Matches(FF_Match entity)
		{
			this.SendPropertyChanging();
			entity.FF_League = null;
		}
		
		private void attach_FF_News(FF_New entity)
		{
			this.SendPropertyChanging();
			entity.FF_League = this;
		}
		
		private void detach_FF_News(FF_New entity)
		{
			this.SendPropertyChanging();
			entity.FF_League = null;
		}
		
		private void attach_FF_Teams(FF_Team entity)
		{
			this.SendPropertyChanging();
			entity.FF_League = this;
		}
		
		private void detach_FF_Teams(FF_Team entity)
		{
			this.SendPropertyChanging();
			entity.FF_League = null;
		}
		
		private void attach_FF_TopScorers(FF_TopScorer entity)
		{
			this.SendPropertyChanging();
			entity.FF_League = this;
		}
		
		private void detach_FF_TopScorers(FF_TopScorer entity)
		{
			this.SendPropertyChanging();
			entity.FF_League = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FF_LeagueTables")]
	public partial class FF_LeagueTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Guid _TeamID;
		
		private int _P;
		
		private int _W;
		
		private int _D;
		
		private int _L;
		
		private int _F;
		
		private int _A;
		
		private int _Diff;
		
		private int _Points;
		
		private System.Guid _SeasonID;
		
		private int _LeagueID;
		
		private EntityRef<FF_League> _FF_League;
		
		private EntityRef<FF_Season> _FF_Season;
		
		private EntityRef<FF_Team> _FF_Team;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTeamIDChanging(System.Guid value);
    partial void OnTeamIDChanged();
    partial void OnPChanging(int value);
    partial void OnPChanged();
    partial void OnWChanging(int value);
    partial void OnWChanged();
    partial void OnDChanging(int value);
    partial void OnDChanged();
    partial void OnLChanging(int value);
    partial void OnLChanged();
    partial void OnFChanging(int value);
    partial void OnFChanged();
    partial void OnAChanging(int value);
    partial void OnAChanged();
    partial void OnDiffChanging(int value);
    partial void OnDiffChanged();
    partial void OnPointsChanging(int value);
    partial void OnPointsChanged();
    partial void OnSeasonIDChanging(System.Guid value);
    partial void OnSeasonIDChanged();
    partial void OnLeagueIDChanging(int value);
    partial void OnLeagueIDChanged();
    #endregion
		
		public FF_LeagueTable()
		{
			this._FF_League = default(EntityRef<FF_League>);
			this._FF_Season = default(EntityRef<FF_Season>);
			this._FF_Team = default(EntityRef<FF_Team>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TeamID
		{
			get
			{
				return this._TeamID;
			}
			set
			{
				if ((this._TeamID != value))
				{
					if (this._FF_Team.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeamIDChanging(value);
					this.SendPropertyChanging();
					this._TeamID = value;
					this.SendPropertyChanged("TeamID");
					this.OnTeamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_P", DbType="Int NOT NULL")]
		public int P
		{
			get
			{
				return this._P;
			}
			set
			{
				if ((this._P != value))
				{
					this.OnPChanging(value);
					this.SendPropertyChanging();
					this._P = value;
					this.SendPropertyChanged("P");
					this.OnPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_W", DbType="Int NOT NULL")]
		public int W
		{
			get
			{
				return this._W;
			}
			set
			{
				if ((this._W != value))
				{
					this.OnWChanging(value);
					this.SendPropertyChanging();
					this._W = value;
					this.SendPropertyChanged("W");
					this.OnWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D", DbType="Int NOT NULL")]
		public int D
		{
			get
			{
				return this._D;
			}
			set
			{
				if ((this._D != value))
				{
					this.OnDChanging(value);
					this.SendPropertyChanging();
					this._D = value;
					this.SendPropertyChanged("D");
					this.OnDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L", DbType="Int NOT NULL")]
		public int L
		{
			get
			{
				return this._L;
			}
			set
			{
				if ((this._L != value))
				{
					this.OnLChanging(value);
					this.SendPropertyChanging();
					this._L = value;
					this.SendPropertyChanged("L");
					this.OnLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F", DbType="Int NOT NULL")]
		public int F
		{
			get
			{
				return this._F;
			}
			set
			{
				if ((this._F != value))
				{
					this.OnFChanging(value);
					this.SendPropertyChanging();
					this._F = value;
					this.SendPropertyChanged("F");
					this.OnFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A", DbType="Int NOT NULL")]
		public int A
		{
			get
			{
				return this._A;
			}
			set
			{
				if ((this._A != value))
				{
					this.OnAChanging(value);
					this.SendPropertyChanging();
					this._A = value;
					this.SendPropertyChanged("A");
					this.OnAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diff", DbType="Int NOT NULL")]
		public int Diff
		{
			get
			{
				return this._Diff;
			}
			set
			{
				if ((this._Diff != value))
				{
					this.OnDiffChanging(value);
					this.SendPropertyChanging();
					this._Diff = value;
					this.SendPropertyChanged("Diff");
					this.OnDiffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Points", DbType="Int NOT NULL")]
		public int Points
		{
			get
			{
				return this._Points;
			}
			set
			{
				if ((this._Points != value))
				{
					this.OnPointsChanging(value);
					this.SendPropertyChanging();
					this._Points = value;
					this.SendPropertyChanged("Points");
					this.OnPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeasonID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SeasonID
		{
			get
			{
				return this._SeasonID;
			}
			set
			{
				if ((this._SeasonID != value))
				{
					if (this._FF_Season.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSeasonIDChanging(value);
					this.SendPropertyChanging();
					this._SeasonID = value;
					this.SendPropertyChanged("SeasonID");
					this.OnSeasonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeagueID", DbType="Int NOT NULL")]
		public int LeagueID
		{
			get
			{
				return this._LeagueID;
			}
			set
			{
				if ((this._LeagueID != value))
				{
					if (this._FF_League.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLeagueIDChanging(value);
					this.SendPropertyChanging();
					this._LeagueID = value;
					this.SendPropertyChanged("LeagueID");
					this.OnLeagueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_League_FF_LeagueTable", Storage="_FF_League", ThisKey="LeagueID", OtherKey="LeagueID", IsForeignKey=true)]
		public FF_League FF_League
		{
			get
			{
				return this._FF_League.Entity;
			}
			set
			{
				FF_League previousValue = this._FF_League.Entity;
				if (((previousValue != value) 
							|| (this._FF_League.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FF_League.Entity = null;
						previousValue.FF_LeagueTables.Remove(this);
					}
					this._FF_League.Entity = value;
					if ((value != null))
					{
						value.FF_LeagueTables.Add(this);
						this._LeagueID = value.LeagueID;
					}
					else
					{
						this._LeagueID = default(int);
					}
					this.SendPropertyChanged("FF_League");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Season_FF_LeagueTable", Storage="_FF_Season", ThisKey="SeasonID", OtherKey="SeasonID", IsForeignKey=true)]
		public FF_Season FF_Season
		{
			get
			{
				return this._FF_Season.Entity;
			}
			set
			{
				FF_Season previousValue = this._FF_Season.Entity;
				if (((previousValue != value) 
							|| (this._FF_Season.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FF_Season.Entity = null;
						previousValue.FF_LeagueTables.Remove(this);
					}
					this._FF_Season.Entity = value;
					if ((value != null))
					{
						value.FF_LeagueTables.Add(this);
						this._SeasonID = value.SeasonID;
					}
					else
					{
						this._SeasonID = default(System.Guid);
					}
					this.SendPropertyChanged("FF_Season");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Team_FF_LeagueTable", Storage="_FF_Team", ThisKey="TeamID", OtherKey="TeamID", IsForeignKey=true)]
		public FF_Team FF_Team
		{
			get
			{
				return this._FF_Team.Entity;
			}
			set
			{
				FF_Team previousValue = this._FF_Team.Entity;
				if (((previousValue != value) 
							|| (this._FF_Team.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FF_Team.Entity = null;
						previousValue.FF_LeagueTables.Remove(this);
					}
					this._FF_Team.Entity = value;
					if ((value != null))
					{
						value.FF_LeagueTables.Add(this);
						this._TeamID = value.TeamID;
					}
					else
					{
						this._TeamID = default(System.Guid);
					}
					this.SendPropertyChanged("FF_Team");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FF_Matches")]
	public partial class FF_Match : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Guid _SeasonID;
		
		private int _LeagueID;
		
		private System.Guid _Team1ID;
		
		private System.Guid _Team2ID;
		
		private string _Team1Details;
		
		private string _Team2Details;
		
		private System.Nullable<System.Guid> _Team1PlayerID;
		
		private System.Nullable<System.Guid> _Team2PlayerID;
		
		private string _Location;
		
		private System.Nullable<int> _Team1Score;
		
		private System.Nullable<int> _Team2Score;
		
		private System.DateTime _Date;
		
		private bool _HasBeenPlayed;
		
		private EntitySet<FF_Assist> _FF_Assists;
		
		private EntitySet<FF_GoalScorer> _FF_GoalScorers;
		
		private EntityRef<FF_League> _FF_League;
		
		private EntityRef<FF_Season> _FF_Season;
		
		private EntityRef<FF_TeamPlayer> _FF_TeamPlayer;
		
		private EntityRef<FF_TeamPlayer> _FF_TeamPlayer1;
		
		private EntityRef<FF_Team> _FF_Team;
		
		private EntityRef<FF_Team> _FF_Team1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSeasonIDChanging(System.Guid value);
    partial void OnSeasonIDChanged();
    partial void OnLeagueIDChanging(int value);
    partial void OnLeagueIDChanged();
    partial void OnTeam1IDChanging(System.Guid value);
    partial void OnTeam1IDChanged();
    partial void OnTeam2IDChanging(System.Guid value);
    partial void OnTeam2IDChanged();
    partial void OnTeam1DetailsChanging(string value);
    partial void OnTeam1DetailsChanged();
    partial void OnTeam2DetailsChanging(string value);
    partial void OnTeam2DetailsChanged();
    partial void OnTeam1PlayerIDChanging(System.Nullable<System.Guid> value);
    partial void OnTeam1PlayerIDChanged();
    partial void OnTeam2PlayerIDChanging(System.Nullable<System.Guid> value);
    partial void OnTeam2PlayerIDChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnTeam1ScoreChanging(System.Nullable<int> value);
    partial void OnTeam1ScoreChanged();
    partial void OnTeam2ScoreChanging(System.Nullable<int> value);
    partial void OnTeam2ScoreChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnHasBeenPlayedChanging(bool value);
    partial void OnHasBeenPlayedChanged();
    #endregion
		
		public FF_Match()
		{
			this._FF_Assists = new EntitySet<FF_Assist>(new Action<FF_Assist>(this.attach_FF_Assists), new Action<FF_Assist>(this.detach_FF_Assists));
			this._FF_GoalScorers = new EntitySet<FF_GoalScorer>(new Action<FF_GoalScorer>(this.attach_FF_GoalScorers), new Action<FF_GoalScorer>(this.detach_FF_GoalScorers));
			this._FF_League = default(EntityRef<FF_League>);
			this._FF_Season = default(EntityRef<FF_Season>);
			this._FF_TeamPlayer = default(EntityRef<FF_TeamPlayer>);
			this._FF_TeamPlayer1 = default(EntityRef<FF_TeamPlayer>);
			this._FF_Team = default(EntityRef<FF_Team>);
			this._FF_Team1 = default(EntityRef<FF_Team>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeasonID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SeasonID
		{
			get
			{
				return this._SeasonID;
			}
			set
			{
				if ((this._SeasonID != value))
				{
					if (this._FF_Season.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSeasonIDChanging(value);
					this.SendPropertyChanging();
					this._SeasonID = value;
					this.SendPropertyChanged("SeasonID");
					this.OnSeasonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeagueID", DbType="Int NOT NULL")]
		public int LeagueID
		{
			get
			{
				return this._LeagueID;
			}
			set
			{
				if ((this._LeagueID != value))
				{
					if (this._FF_League.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLeagueIDChanging(value);
					this.SendPropertyChanging();
					this._LeagueID = value;
					this.SendPropertyChanged("LeagueID");
					this.OnLeagueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team1ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Team1ID
		{
			get
			{
				return this._Team1ID;
			}
			set
			{
				if ((this._Team1ID != value))
				{
					if (this._FF_Team.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeam1IDChanging(value);
					this.SendPropertyChanging();
					this._Team1ID = value;
					this.SendPropertyChanged("Team1ID");
					this.OnTeam1IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team2ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Team2ID
		{
			get
			{
				return this._Team2ID;
			}
			set
			{
				if ((this._Team2ID != value))
				{
					if (this._FF_Team1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeam2IDChanging(value);
					this.SendPropertyChanging();
					this._Team2ID = value;
					this.SendPropertyChanged("Team2ID");
					this.OnTeam2IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team1Details", DbType="NVarChar(MAX)")]
		public string Team1Details
		{
			get
			{
				return this._Team1Details;
			}
			set
			{
				if ((this._Team1Details != value))
				{
					this.OnTeam1DetailsChanging(value);
					this.SendPropertyChanging();
					this._Team1Details = value;
					this.SendPropertyChanged("Team1Details");
					this.OnTeam1DetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team2Details", DbType="NVarChar(MAX)")]
		public string Team2Details
		{
			get
			{
				return this._Team2Details;
			}
			set
			{
				if ((this._Team2Details != value))
				{
					this.OnTeam2DetailsChanging(value);
					this.SendPropertyChanging();
					this._Team2Details = value;
					this.SendPropertyChanged("Team2Details");
					this.OnTeam2DetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team1PlayerID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Team1PlayerID
		{
			get
			{
				return this._Team1PlayerID;
			}
			set
			{
				if ((this._Team1PlayerID != value))
				{
					if (this._FF_TeamPlayer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeam1PlayerIDChanging(value);
					this.SendPropertyChanging();
					this._Team1PlayerID = value;
					this.SendPropertyChanged("Team1PlayerID");
					this.OnTeam1PlayerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team2PlayerID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Team2PlayerID
		{
			get
			{
				return this._Team2PlayerID;
			}
			set
			{
				if ((this._Team2PlayerID != value))
				{
					if (this._FF_TeamPlayer1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeam2PlayerIDChanging(value);
					this.SendPropertyChanging();
					this._Team2PlayerID = value;
					this.SendPropertyChanged("Team2PlayerID");
					this.OnTeam2PlayerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team1Score", DbType="Int")]
		public System.Nullable<int> Team1Score
		{
			get
			{
				return this._Team1Score;
			}
			set
			{
				if ((this._Team1Score != value))
				{
					this.OnTeam1ScoreChanging(value);
					this.SendPropertyChanging();
					this._Team1Score = value;
					this.SendPropertyChanged("Team1Score");
					this.OnTeam1ScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team2Score", DbType="Int")]
		public System.Nullable<int> Team2Score
		{
			get
			{
				return this._Team2Score;
			}
			set
			{
				if ((this._Team2Score != value))
				{
					this.OnTeam2ScoreChanging(value);
					this.SendPropertyChanging();
					this._Team2Score = value;
					this.SendPropertyChanged("Team2Score");
					this.OnTeam2ScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasBeenPlayed", DbType="Bit NOT NULL")]
		public bool HasBeenPlayed
		{
			get
			{
				return this._HasBeenPlayed;
			}
			set
			{
				if ((this._HasBeenPlayed != value))
				{
					this.OnHasBeenPlayedChanging(value);
					this.SendPropertyChanging();
					this._HasBeenPlayed = value;
					this.SendPropertyChanged("HasBeenPlayed");
					this.OnHasBeenPlayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Match_FF_Assist", Storage="_FF_Assists", ThisKey="ID", OtherKey="MatchID")]
		public EntitySet<FF_Assist> FF_Assists
		{
			get
			{
				return this._FF_Assists;
			}
			set
			{
				this._FF_Assists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Match_FF_GoalScorer", Storage="_FF_GoalScorers", ThisKey="ID", OtherKey="MatchID")]
		public EntitySet<FF_GoalScorer> FF_GoalScorers
		{
			get
			{
				return this._FF_GoalScorers;
			}
			set
			{
				this._FF_GoalScorers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_League_FF_Match", Storage="_FF_League", ThisKey="LeagueID", OtherKey="LeagueID", IsForeignKey=true)]
		public FF_League FF_League
		{
			get
			{
				return this._FF_League.Entity;
			}
			set
			{
				FF_League previousValue = this._FF_League.Entity;
				if (((previousValue != value) 
							|| (this._FF_League.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FF_League.Entity = null;
						previousValue.FF_Matches.Remove(this);
					}
					this._FF_League.Entity = value;
					if ((value != null))
					{
						value.FF_Matches.Add(this);
						this._LeagueID = value.LeagueID;
					}
					else
					{
						this._LeagueID = default(int);
					}
					this.SendPropertyChanged("FF_League");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Season_FF_Match", Storage="_FF_Season", ThisKey="SeasonID", OtherKey="SeasonID", IsForeignKey=true)]
		public FF_Season FF_Season
		{
			get
			{
				return this._FF_Season.Entity;
			}
			set
			{
				FF_Season previousValue = this._FF_Season.Entity;
				if (((previousValue != value) 
							|| (this._FF_Season.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FF_Season.Entity = null;
						previousValue.FF_Matches.Remove(this);
					}
					this._FF_Season.Entity = value;
					if ((value != null))
					{
						value.FF_Matches.Add(this);
						this._SeasonID = value.SeasonID;
					}
					else
					{
						this._SeasonID = default(System.Guid);
					}
					this.SendPropertyChanged("FF_Season");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_TeamPlayer_FF_Match", Storage="_FF_TeamPlayer", ThisKey="Team1PlayerID", OtherKey="ID", IsForeignKey=true)]
		public FF_TeamPlayer FF_TeamPlayer
		{
			get
			{
				return this._FF_TeamPlayer.Entity;
			}
			set
			{
				FF_TeamPlayer previousValue = this._FF_TeamPlayer.Entity;
				if (((previousValue != value) 
							|| (this._FF_TeamPlayer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FF_TeamPlayer.Entity = null;
						previousValue.FF_Matches.Remove(this);
					}
					this._FF_TeamPlayer.Entity = value;
					if ((value != null))
					{
						value.FF_Matches.Add(this);
						this._Team1PlayerID = value.ID;
					}
					else
					{
						this._Team1PlayerID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("FF_TeamPlayer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_TeamPlayer_FF_Match1", Storage="_FF_TeamPlayer1", ThisKey="Team2PlayerID", OtherKey="ID", IsForeignKey=true)]
		public FF_TeamPlayer FF_TeamPlayer1
		{
			get
			{
				return this._FF_TeamPlayer1.Entity;
			}
			set
			{
				FF_TeamPlayer previousValue = this._FF_TeamPlayer1.Entity;
				if (((previousValue != value) 
							|| (this._FF_TeamPlayer1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FF_TeamPlayer1.Entity = null;
						previousValue.FF_Matches1.Remove(this);
					}
					this._FF_TeamPlayer1.Entity = value;
					if ((value != null))
					{
						value.FF_Matches1.Add(this);
						this._Team2PlayerID = value.ID;
					}
					else
					{
						this._Team2PlayerID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("FF_TeamPlayer1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Team_FF_Match", Storage="_FF_Team", ThisKey="Team1ID", OtherKey="TeamID", IsForeignKey=true)]
		public FF_Team FF_Team
		{
			get
			{
				return this._FF_Team.Entity;
			}
			set
			{
				FF_Team previousValue = this._FF_Team.Entity;
				if (((previousValue != value) 
							|| (this._FF_Team.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FF_Team.Entity = null;
						previousValue.FF_Matches.Remove(this);
					}
					this._FF_Team.Entity = value;
					if ((value != null))
					{
						value.FF_Matches.Add(this);
						this._Team1ID = value.TeamID;
					}
					else
					{
						this._Team1ID = default(System.Guid);
					}
					this.SendPropertyChanged("FF_Team");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Team_FF_Match1", Storage="_FF_Team1", ThisKey="Team2ID", OtherKey="TeamID", IsForeignKey=true)]
		public FF_Team FF_Team1
		{
			get
			{
				return this._FF_Team1.Entity;
			}
			set
			{
				FF_Team previousValue = this._FF_Team1.Entity;
				if (((previousValue != value) 
							|| (this._FF_Team1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FF_Team1.Entity = null;
						previousValue.FF_Matches1.Remove(this);
					}
					this._FF_Team1.Entity = value;
					if ((value != null))
					{
						value.FF_Matches1.Add(this);
						this._Team2ID = value.TeamID;
					}
					else
					{
						this._Team2ID = default(System.Guid);
					}
					this.SendPropertyChanged("FF_Team1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FF_Assists(FF_Assist entity)
		{
			this.SendPropertyChanging();
			entity.FF_Match = this;
		}
		
		private void detach_FF_Assists(FF_Assist entity)
		{
			this.SendPropertyChanging();
			entity.FF_Match = null;
		}
		
		private void attach_FF_GoalScorers(FF_GoalScorer entity)
		{
			this.SendPropertyChanging();
			entity.FF_Match = this;
		}
		
		private void detach_FF_GoalScorers(FF_GoalScorer entity)
		{
			this.SendPropertyChanging();
			entity.FF_Match = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FF_News")]
	public partial class FF_New : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _NewsID;
		
		private string _Title;
		
		private string _Details;
		
		private string _ImageURL;
		
		private System.Nullable<int> _LeagueID;
		
		private System.DateTime _Date;
		
		private System.Nullable<System.Guid> _SeasonID;
		
		private string _Excerpt;
		
		private EntityRef<FF_League> _FF_League;
		
		private EntityRef<FF_Season> _FF_Season;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNewsIDChanging(System.Guid value);
    partial void OnNewsIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    partial void OnImageURLChanging(string value);
    partial void OnImageURLChanged();
    partial void OnLeagueIDChanging(System.Nullable<int> value);
    partial void OnLeagueIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnSeasonIDChanging(System.Nullable<System.Guid> value);
    partial void OnSeasonIDChanged();
    partial void OnExcerptChanging(string value);
    partial void OnExcerptChanged();
    #endregion
		
		public FF_New()
		{
			this._FF_League = default(EntityRef<FF_League>);
			this._FF_Season = default(EntityRef<FF_Season>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid NewsID
		{
			get
			{
				return this._NewsID;
			}
			set
			{
				if ((this._NewsID != value))
				{
					this.OnNewsIDChanging(value);
					this.SendPropertyChanging();
					this._NewsID = value;
					this.SendPropertyChanged("NewsID");
					this.OnNewsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageURL", DbType="NVarChar(200)")]
		public string ImageURL
		{
			get
			{
				return this._ImageURL;
			}
			set
			{
				if ((this._ImageURL != value))
				{
					this.OnImageURLChanging(value);
					this.SendPropertyChanging();
					this._ImageURL = value;
					this.SendPropertyChanged("ImageURL");
					this.OnImageURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeagueID", DbType="Int")]
		public System.Nullable<int> LeagueID
		{
			get
			{
				return this._LeagueID;
			}
			set
			{
				if ((this._LeagueID != value))
				{
					if (this._FF_League.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLeagueIDChanging(value);
					this.SendPropertyChanging();
					this._LeagueID = value;
					this.SendPropertyChanged("LeagueID");
					this.OnLeagueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeasonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SeasonID
		{
			get
			{
				return this._SeasonID;
			}
			set
			{
				if ((this._SeasonID != value))
				{
					if (this._FF_Season.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSeasonIDChanging(value);
					this.SendPropertyChanging();
					this._SeasonID = value;
					this.SendPropertyChanged("SeasonID");
					this.OnSeasonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Excerpt", DbType="NVarChar(300)")]
		public string Excerpt
		{
			get
			{
				return this._Excerpt;
			}
			set
			{
				if ((this._Excerpt != value))
				{
					this.OnExcerptChanging(value);
					this.SendPropertyChanging();
					this._Excerpt = value;
					this.SendPropertyChanged("Excerpt");
					this.OnExcerptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_League_FF_New", Storage="_FF_League", ThisKey="LeagueID", OtherKey="LeagueID", IsForeignKey=true, DeleteRule="CASCADE")]
		public FF_League FF_League
		{
			get
			{
				return this._FF_League.Entity;
			}
			set
			{
				FF_League previousValue = this._FF_League.Entity;
				if (((previousValue != value) 
							|| (this._FF_League.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FF_League.Entity = null;
						previousValue.FF_News.Remove(this);
					}
					this._FF_League.Entity = value;
					if ((value != null))
					{
						value.FF_News.Add(this);
						this._LeagueID = value.LeagueID;
					}
					else
					{
						this._LeagueID = default(Nullable<int>);
					}
					this.SendPropertyChanged("FF_League");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Season_FF_New", Storage="_FF_Season", ThisKey="SeasonID", OtherKey="SeasonID", IsForeignKey=true)]
		public FF_Season FF_Season
		{
			get
			{
				return this._FF_Season.Entity;
			}
			set
			{
				FF_Season previousValue = this._FF_Season.Entity;
				if (((previousValue != value) 
							|| (this._FF_Season.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FF_Season.Entity = null;
						previousValue.FF_News.Remove(this);
					}
					this._FF_Season.Entity = value;
					if ((value != null))
					{
						value.FF_News.Add(this);
						this._SeasonID = value.SeasonID;
					}
					else
					{
						this._SeasonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("FF_Season");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FF_Player")]
	public partial class FF_Player : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PlayerID;
		
		private string _Name;
		
		private EntitySet<FF_TeamPlayer> _FF_TeamPlayers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlayerIDChanging(System.Guid value);
    partial void OnPlayerIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public FF_Player()
		{
			this._FF_TeamPlayers = new EntitySet<FF_TeamPlayer>(new Action<FF_TeamPlayer>(this.attach_FF_TeamPlayers), new Action<FF_TeamPlayer>(this.detach_FF_TeamPlayers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PlayerID
		{
			get
			{
				return this._PlayerID;
			}
			set
			{
				if ((this._PlayerID != value))
				{
					this.OnPlayerIDChanging(value);
					this.SendPropertyChanging();
					this._PlayerID = value;
					this.SendPropertyChanged("PlayerID");
					this.OnPlayerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Player_FF_TeamPlayer", Storage="_FF_TeamPlayers", ThisKey="PlayerID", OtherKey="PlayerID")]
		public EntitySet<FF_TeamPlayer> FF_TeamPlayers
		{
			get
			{
				return this._FF_TeamPlayers;
			}
			set
			{
				this._FF_TeamPlayers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FF_TeamPlayers(FF_TeamPlayer entity)
		{
			this.SendPropertyChanging();
			entity.FF_Player = this;
		}
		
		private void detach_FF_TeamPlayers(FF_TeamPlayer entity)
		{
			this.SendPropertyChanging();
			entity.FF_Player = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FF_PlayerStatus")]
	public partial class FF_PlayerStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StatusID;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public FF_PlayerStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FF_Polls")]
	public partial class FF_Poll : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Question;
		
		private string _Option1;
		
		private string _Option2;
		
		private string _Option3;
		
		private string _Other;
		
		private System.DateTime _Date;
		
		private bool _Retired;
		
		private EntitySet<FF_Vote> _FF_Votes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnQuestionChanging(string value);
    partial void OnQuestionChanged();
    partial void OnOption1Changing(string value);
    partial void OnOption1Changed();
    partial void OnOption2Changing(string value);
    partial void OnOption2Changed();
    partial void OnOption3Changing(string value);
    partial void OnOption3Changed();
    partial void OnOtherChanging(string value);
    partial void OnOtherChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnRetiredChanging(bool value);
    partial void OnRetiredChanged();
    #endregion
		
		public FF_Poll()
		{
			this._FF_Votes = new EntitySet<FF_Vote>(new Action<FF_Vote>(this.attach_FF_Votes), new Action<FF_Vote>(this.detach_FF_Votes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Question", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Question
		{
			get
			{
				return this._Question;
			}
			set
			{
				if ((this._Question != value))
				{
					this.OnQuestionChanging(value);
					this.SendPropertyChanging();
					this._Question = value;
					this.SendPropertyChanged("Question");
					this.OnQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Option1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Option1
		{
			get
			{
				return this._Option1;
			}
			set
			{
				if ((this._Option1 != value))
				{
					this.OnOption1Changing(value);
					this.SendPropertyChanging();
					this._Option1 = value;
					this.SendPropertyChanged("Option1");
					this.OnOption1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Option2", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Option2
		{
			get
			{
				return this._Option2;
			}
			set
			{
				if ((this._Option2 != value))
				{
					this.OnOption2Changing(value);
					this.SendPropertyChanging();
					this._Option2 = value;
					this.SendPropertyChanged("Option2");
					this.OnOption2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Option3", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Option3
		{
			get
			{
				return this._Option3;
			}
			set
			{
				if ((this._Option3 != value))
				{
					this.OnOption3Changing(value);
					this.SendPropertyChanging();
					this._Option3 = value;
					this.SendPropertyChanged("Option3");
					this.OnOption3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Other", DbType="NVarChar(50)")]
		public string Other
		{
			get
			{
				return this._Other;
			}
			set
			{
				if ((this._Other != value))
				{
					this.OnOtherChanging(value);
					this.SendPropertyChanging();
					this._Other = value;
					this.SendPropertyChanged("Other");
					this.OnOtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Retired", DbType="Bit NOT NULL")]
		public bool Retired
		{
			get
			{
				return this._Retired;
			}
			set
			{
				if ((this._Retired != value))
				{
					this.OnRetiredChanging(value);
					this.SendPropertyChanging();
					this._Retired = value;
					this.SendPropertyChanged("Retired");
					this.OnRetiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Poll_FF_Vote", Storage="_FF_Votes", ThisKey="ID", OtherKey="QuestionID")]
		public EntitySet<FF_Vote> FF_Votes
		{
			get
			{
				return this._FF_Votes;
			}
			set
			{
				this._FF_Votes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FF_Votes(FF_Vote entity)
		{
			this.SendPropertyChanging();
			entity.FF_Poll = this;
		}
		
		private void detach_FF_Votes(FF_Vote entity)
		{
			this.SendPropertyChanging();
			entity.FF_Poll = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FF_Season")]
	public partial class FF_Season : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SeasonID;
		
		private string _Period;
		
		private bool _IsCurrent;
		
		private EntitySet<FF_ChampionsGroupStage> _FF_ChampionsGroupStages;
		
		private EntitySet<FF_ChampionsLeagueTable> _FF_ChampionsLeagueTables;
		
		private EntitySet<FF_ChampionsOtherStage> _FF_ChampionsOtherStages;
		
		private EntitySet<FF_LeagueTable> _FF_LeagueTables;
		
		private EntitySet<FF_Match> _FF_Matches;
		
		private EntitySet<FF_New> _FF_News;
		
		private EntitySet<FF_TopScorer> _FF_TopScorers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSeasonIDChanging(System.Guid value);
    partial void OnSeasonIDChanged();
    partial void OnPeriodChanging(string value);
    partial void OnPeriodChanged();
    partial void OnIsCurrentChanging(bool value);
    partial void OnIsCurrentChanged();
    #endregion
		
		public FF_Season()
		{
			this._FF_ChampionsGroupStages = new EntitySet<FF_ChampionsGroupStage>(new Action<FF_ChampionsGroupStage>(this.attach_FF_ChampionsGroupStages), new Action<FF_ChampionsGroupStage>(this.detach_FF_ChampionsGroupStages));
			this._FF_ChampionsLeagueTables = new EntitySet<FF_ChampionsLeagueTable>(new Action<FF_ChampionsLeagueTable>(this.attach_FF_ChampionsLeagueTables), new Action<FF_ChampionsLeagueTable>(this.detach_FF_ChampionsLeagueTables));
			this._FF_ChampionsOtherStages = new EntitySet<FF_ChampionsOtherStage>(new Action<FF_ChampionsOtherStage>(this.attach_FF_ChampionsOtherStages), new Action<FF_ChampionsOtherStage>(this.detach_FF_ChampionsOtherStages));
			this._FF_LeagueTables = new EntitySet<FF_LeagueTable>(new Action<FF_LeagueTable>(this.attach_FF_LeagueTables), new Action<FF_LeagueTable>(this.detach_FF_LeagueTables));
			this._FF_Matches = new EntitySet<FF_Match>(new Action<FF_Match>(this.attach_FF_Matches), new Action<FF_Match>(this.detach_FF_Matches));
			this._FF_News = new EntitySet<FF_New>(new Action<FF_New>(this.attach_FF_News), new Action<FF_New>(this.detach_FF_News));
			this._FF_TopScorers = new EntitySet<FF_TopScorer>(new Action<FF_TopScorer>(this.attach_FF_TopScorers), new Action<FF_TopScorer>(this.detach_FF_TopScorers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeasonID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SeasonID
		{
			get
			{
				return this._SeasonID;
			}
			set
			{
				if ((this._SeasonID != value))
				{
					this.OnSeasonIDChanging(value);
					this.SendPropertyChanging();
					this._SeasonID = value;
					this.SendPropertyChanged("SeasonID");
					this.OnSeasonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Period", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this.OnPeriodChanging(value);
					this.SendPropertyChanging();
					this._Period = value;
					this.SendPropertyChanged("Period");
					this.OnPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCurrent", DbType="Bit NOT NULL")]
		public bool IsCurrent
		{
			get
			{
				return this._IsCurrent;
			}
			set
			{
				if ((this._IsCurrent != value))
				{
					this.OnIsCurrentChanging(value);
					this.SendPropertyChanging();
					this._IsCurrent = value;
					this.SendPropertyChanged("IsCurrent");
					this.OnIsCurrentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Season_FF_ChampionsGroupStage", Storage="_FF_ChampionsGroupStages", ThisKey="SeasonID", OtherKey="SeasonID")]
		public EntitySet<FF_ChampionsGroupStage> FF_ChampionsGroupStages
		{
			get
			{
				return this._FF_ChampionsGroupStages;
			}
			set
			{
				this._FF_ChampionsGroupStages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Season_FF_ChampionsLeagueTable", Storage="_FF_ChampionsLeagueTables", ThisKey="SeasonID", OtherKey="SeasonID")]
		public EntitySet<FF_ChampionsLeagueTable> FF_ChampionsLeagueTables
		{
			get
			{
				return this._FF_ChampionsLeagueTables;
			}
			set
			{
				this._FF_ChampionsLeagueTables.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Season_FF_ChampionsOtherStage", Storage="_FF_ChampionsOtherStages", ThisKey="SeasonID", OtherKey="SeasonID")]
		public EntitySet<FF_ChampionsOtherStage> FF_ChampionsOtherStages
		{
			get
			{
				return this._FF_ChampionsOtherStages;
			}
			set
			{
				this._FF_ChampionsOtherStages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Season_FF_LeagueTable", Storage="_FF_LeagueTables", ThisKey="SeasonID", OtherKey="SeasonID")]
		public EntitySet<FF_LeagueTable> FF_LeagueTables
		{
			get
			{
				return this._FF_LeagueTables;
			}
			set
			{
				this._FF_LeagueTables.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Season_FF_Match", Storage="_FF_Matches", ThisKey="SeasonID", OtherKey="SeasonID")]
		public EntitySet<FF_Match> FF_Matches
		{
			get
			{
				return this._FF_Matches;
			}
			set
			{
				this._FF_Matches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Season_FF_New", Storage="_FF_News", ThisKey="SeasonID", OtherKey="SeasonID")]
		public EntitySet<FF_New> FF_News
		{
			get
			{
				return this._FF_News;
			}
			set
			{
				this._FF_News.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Season_FF_TopScorer", Storage="_FF_TopScorers", ThisKey="SeasonID", OtherKey="SeasonID")]
		public EntitySet<FF_TopScorer> FF_TopScorers
		{
			get
			{
				return this._FF_TopScorers;
			}
			set
			{
				this._FF_TopScorers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FF_ChampionsGroupStages(FF_ChampionsGroupStage entity)
		{
			this.SendPropertyChanging();
			entity.FF_Season = this;
		}
		
		private void detach_FF_ChampionsGroupStages(FF_ChampionsGroupStage entity)
		{
			this.SendPropertyChanging();
			entity.FF_Season = null;
		}
		
		private void attach_FF_ChampionsLeagueTables(FF_ChampionsLeagueTable entity)
		{
			this.SendPropertyChanging();
			entity.FF_Season = this;
		}
		
		private void detach_FF_ChampionsLeagueTables(FF_ChampionsLeagueTable entity)
		{
			this.SendPropertyChanging();
			entity.FF_Season = null;
		}
		
		private void attach_FF_ChampionsOtherStages(FF_ChampionsOtherStage entity)
		{
			this.SendPropertyChanging();
			entity.FF_Season = this;
		}
		
		private void detach_FF_ChampionsOtherStages(FF_ChampionsOtherStage entity)
		{
			this.SendPropertyChanging();
			entity.FF_Season = null;
		}
		
		private void attach_FF_LeagueTables(FF_LeagueTable entity)
		{
			this.SendPropertyChanging();
			entity.FF_Season = this;
		}
		
		private void detach_FF_LeagueTables(FF_LeagueTable entity)
		{
			this.SendPropertyChanging();
			entity.FF_Season = null;
		}
		
		private void attach_FF_Matches(FF_Match entity)
		{
			this.SendPropertyChanging();
			entity.FF_Season = this;
		}
		
		private void detach_FF_Matches(FF_Match entity)
		{
			this.SendPropertyChanging();
			entity.FF_Season = null;
		}
		
		private void attach_FF_News(FF_New entity)
		{
			this.SendPropertyChanging();
			entity.FF_Season = this;
		}
		
		private void detach_FF_News(FF_New entity)
		{
			this.SendPropertyChanging();
			entity.FF_Season = null;
		}
		
		private void attach_FF_TopScorers(FF_TopScorer entity)
		{
			this.SendPropertyChanging();
			entity.FF_Season = this;
		}
		
		private void detach_FF_TopScorers(FF_TopScorer entity)
		{
			this.SendPropertyChanging();
			entity.FF_Season = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FF_TeamPlayers")]
	public partial class FF_TeamPlayer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _PlayerID;
		
		private System.Guid _TeamID;
		
		private int _StatusID;
		
		private string _ImageURL;
		
		private EntitySet<FF_Assist> _FF_Assists;
		
		private EntitySet<FF_GoalScorer> _FF_GoalScorers;
		
		private EntitySet<FF_Match> _FF_Matches;
		
		private EntitySet<FF_Match> _FF_Matches1;
		
		private EntityRef<FF_Player> _FF_Player;
		
		private EntityRef<FF_Team> _FF_Team;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPlayerIDChanging(System.Guid value);
    partial void OnPlayerIDChanged();
    partial void OnTeamIDChanging(System.Guid value);
    partial void OnTeamIDChanged();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnImageURLChanging(string value);
    partial void OnImageURLChanged();
    #endregion
		
		public FF_TeamPlayer()
		{
			this._FF_Assists = new EntitySet<FF_Assist>(new Action<FF_Assist>(this.attach_FF_Assists), new Action<FF_Assist>(this.detach_FF_Assists));
			this._FF_GoalScorers = new EntitySet<FF_GoalScorer>(new Action<FF_GoalScorer>(this.attach_FF_GoalScorers), new Action<FF_GoalScorer>(this.detach_FF_GoalScorers));
			this._FF_Matches = new EntitySet<FF_Match>(new Action<FF_Match>(this.attach_FF_Matches), new Action<FF_Match>(this.detach_FF_Matches));
			this._FF_Matches1 = new EntitySet<FF_Match>(new Action<FF_Match>(this.attach_FF_Matches1), new Action<FF_Match>(this.detach_FF_Matches1));
			this._FF_Player = default(EntityRef<FF_Player>);
			this._FF_Team = default(EntityRef<FF_Team>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PlayerID
		{
			get
			{
				return this._PlayerID;
			}
			set
			{
				if ((this._PlayerID != value))
				{
					if (this._FF_Player.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlayerIDChanging(value);
					this.SendPropertyChanging();
					this._PlayerID = value;
					this.SendPropertyChanged("PlayerID");
					this.OnPlayerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TeamID
		{
			get
			{
				return this._TeamID;
			}
			set
			{
				if ((this._TeamID != value))
				{
					if (this._FF_Team.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeamIDChanging(value);
					this.SendPropertyChanging();
					this._TeamID = value;
					this.SendPropertyChanged("TeamID");
					this.OnTeamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageURL", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ImageURL
		{
			get
			{
				return this._ImageURL;
			}
			set
			{
				if ((this._ImageURL != value))
				{
					this.OnImageURLChanging(value);
					this.SendPropertyChanging();
					this._ImageURL = value;
					this.SendPropertyChanged("ImageURL");
					this.OnImageURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_TeamPlayer_FF_Assist", Storage="_FF_Assists", ThisKey="ID", OtherKey="PlayerID")]
		public EntitySet<FF_Assist> FF_Assists
		{
			get
			{
				return this._FF_Assists;
			}
			set
			{
				this._FF_Assists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_TeamPlayer_FF_GoalScorer", Storage="_FF_GoalScorers", ThisKey="ID", OtherKey="PlayerID")]
		public EntitySet<FF_GoalScorer> FF_GoalScorers
		{
			get
			{
				return this._FF_GoalScorers;
			}
			set
			{
				this._FF_GoalScorers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_TeamPlayer_FF_Match", Storage="_FF_Matches", ThisKey="ID", OtherKey="Team1PlayerID")]
		public EntitySet<FF_Match> FF_Matches
		{
			get
			{
				return this._FF_Matches;
			}
			set
			{
				this._FF_Matches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_TeamPlayer_FF_Match1", Storage="_FF_Matches1", ThisKey="ID", OtherKey="Team2PlayerID")]
		public EntitySet<FF_Match> FF_Matches1
		{
			get
			{
				return this._FF_Matches1;
			}
			set
			{
				this._FF_Matches1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Player_FF_TeamPlayer", Storage="_FF_Player", ThisKey="PlayerID", OtherKey="PlayerID", IsForeignKey=true)]
		public FF_Player FF_Player
		{
			get
			{
				return this._FF_Player.Entity;
			}
			set
			{
				FF_Player previousValue = this._FF_Player.Entity;
				if (((previousValue != value) 
							|| (this._FF_Player.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FF_Player.Entity = null;
						previousValue.FF_TeamPlayers.Remove(this);
					}
					this._FF_Player.Entity = value;
					if ((value != null))
					{
						value.FF_TeamPlayers.Add(this);
						this._PlayerID = value.PlayerID;
					}
					else
					{
						this._PlayerID = default(System.Guid);
					}
					this.SendPropertyChanged("FF_Player");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Team_FF_TeamPlayer", Storage="_FF_Team", ThisKey="TeamID", OtherKey="TeamID", IsForeignKey=true)]
		public FF_Team FF_Team
		{
			get
			{
				return this._FF_Team.Entity;
			}
			set
			{
				FF_Team previousValue = this._FF_Team.Entity;
				if (((previousValue != value) 
							|| (this._FF_Team.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FF_Team.Entity = null;
						previousValue.FF_TeamPlayers.Remove(this);
					}
					this._FF_Team.Entity = value;
					if ((value != null))
					{
						value.FF_TeamPlayers.Add(this);
						this._TeamID = value.TeamID;
					}
					else
					{
						this._TeamID = default(System.Guid);
					}
					this.SendPropertyChanged("FF_Team");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FF_Assists(FF_Assist entity)
		{
			this.SendPropertyChanging();
			entity.FF_TeamPlayer = this;
		}
		
		private void detach_FF_Assists(FF_Assist entity)
		{
			this.SendPropertyChanging();
			entity.FF_TeamPlayer = null;
		}
		
		private void attach_FF_GoalScorers(FF_GoalScorer entity)
		{
			this.SendPropertyChanging();
			entity.FF_TeamPlayer = this;
		}
		
		private void detach_FF_GoalScorers(FF_GoalScorer entity)
		{
			this.SendPropertyChanging();
			entity.FF_TeamPlayer = null;
		}
		
		private void attach_FF_Matches(FF_Match entity)
		{
			this.SendPropertyChanging();
			entity.FF_TeamPlayer = this;
		}
		
		private void detach_FF_Matches(FF_Match entity)
		{
			this.SendPropertyChanging();
			entity.FF_TeamPlayer = null;
		}
		
		private void attach_FF_Matches1(FF_Match entity)
		{
			this.SendPropertyChanging();
			entity.FF_TeamPlayer1 = this;
		}
		
		private void detach_FF_Matches1(FF_Match entity)
		{
			this.SendPropertyChanging();
			entity.FF_TeamPlayer1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FF_Teams")]
	public partial class FF_Team : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _TeamID;
		
		private int _LeagueID;
		
		private string _Name;
		
		private string _LogoURL;
		
		private EntitySet<FF_ChampionGoalScorer> _FF_ChampionGoalScorers;
		
		private EntitySet<FF_ChampionsGroupStage> _FF_ChampionsGroupStages;
		
		private EntitySet<FF_ChampionsGroupStage> _FF_ChampionsGroupStages1;
		
		private EntitySet<FF_ChampionsLeagueTable> _FF_ChampionsLeagueTables;
		
		private EntitySet<FF_ChampionsOtherStage> _FF_ChampionsOtherStages;
		
		private EntitySet<FF_ChampionsOtherStage> _FF_ChampionsOtherStages1;
		
		private EntitySet<FF_LeagueTable> _FF_LeagueTables;
		
		private EntitySet<FF_Match> _FF_Matches;
		
		private EntitySet<FF_Match> _FF_Matches1;
		
		private EntitySet<FF_TeamPlayer> _FF_TeamPlayers;
		
		private EntityRef<FF_League> _FF_League;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTeamIDChanging(System.Guid value);
    partial void OnTeamIDChanged();
    partial void OnLeagueIDChanging(int value);
    partial void OnLeagueIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLogoURLChanging(string value);
    partial void OnLogoURLChanged();
    #endregion
		
		public FF_Team()
		{
			this._FF_ChampionGoalScorers = new EntitySet<FF_ChampionGoalScorer>(new Action<FF_ChampionGoalScorer>(this.attach_FF_ChampionGoalScorers), new Action<FF_ChampionGoalScorer>(this.detach_FF_ChampionGoalScorers));
			this._FF_ChampionsGroupStages = new EntitySet<FF_ChampionsGroupStage>(new Action<FF_ChampionsGroupStage>(this.attach_FF_ChampionsGroupStages), new Action<FF_ChampionsGroupStage>(this.detach_FF_ChampionsGroupStages));
			this._FF_ChampionsGroupStages1 = new EntitySet<FF_ChampionsGroupStage>(new Action<FF_ChampionsGroupStage>(this.attach_FF_ChampionsGroupStages1), new Action<FF_ChampionsGroupStage>(this.detach_FF_ChampionsGroupStages1));
			this._FF_ChampionsLeagueTables = new EntitySet<FF_ChampionsLeagueTable>(new Action<FF_ChampionsLeagueTable>(this.attach_FF_ChampionsLeagueTables), new Action<FF_ChampionsLeagueTable>(this.detach_FF_ChampionsLeagueTables));
			this._FF_ChampionsOtherStages = new EntitySet<FF_ChampionsOtherStage>(new Action<FF_ChampionsOtherStage>(this.attach_FF_ChampionsOtherStages), new Action<FF_ChampionsOtherStage>(this.detach_FF_ChampionsOtherStages));
			this._FF_ChampionsOtherStages1 = new EntitySet<FF_ChampionsOtherStage>(new Action<FF_ChampionsOtherStage>(this.attach_FF_ChampionsOtherStages1), new Action<FF_ChampionsOtherStage>(this.detach_FF_ChampionsOtherStages1));
			this._FF_LeagueTables = new EntitySet<FF_LeagueTable>(new Action<FF_LeagueTable>(this.attach_FF_LeagueTables), new Action<FF_LeagueTable>(this.detach_FF_LeagueTables));
			this._FF_Matches = new EntitySet<FF_Match>(new Action<FF_Match>(this.attach_FF_Matches), new Action<FF_Match>(this.detach_FF_Matches));
			this._FF_Matches1 = new EntitySet<FF_Match>(new Action<FF_Match>(this.attach_FF_Matches1), new Action<FF_Match>(this.detach_FF_Matches1));
			this._FF_TeamPlayers = new EntitySet<FF_TeamPlayer>(new Action<FF_TeamPlayer>(this.attach_FF_TeamPlayers), new Action<FF_TeamPlayer>(this.detach_FF_TeamPlayers));
			this._FF_League = default(EntityRef<FF_League>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid TeamID
		{
			get
			{
				return this._TeamID;
			}
			set
			{
				if ((this._TeamID != value))
				{
					this.OnTeamIDChanging(value);
					this.SendPropertyChanging();
					this._TeamID = value;
					this.SendPropertyChanged("TeamID");
					this.OnTeamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeagueID", DbType="Int NOT NULL")]
		public int LeagueID
		{
			get
			{
				return this._LeagueID;
			}
			set
			{
				if ((this._LeagueID != value))
				{
					if (this._FF_League.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLeagueIDChanging(value);
					this.SendPropertyChanging();
					this._LeagueID = value;
					this.SendPropertyChanged("LeagueID");
					this.OnLeagueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoURL", DbType="NVarChar(200)")]
		public string LogoURL
		{
			get
			{
				return this._LogoURL;
			}
			set
			{
				if ((this._LogoURL != value))
				{
					this.OnLogoURLChanging(value);
					this.SendPropertyChanging();
					this._LogoURL = value;
					this.SendPropertyChanged("LogoURL");
					this.OnLogoURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Team_FF_ChampionGoalScorer", Storage="_FF_ChampionGoalScorers", ThisKey="TeamID", OtherKey="TeamID")]
		public EntitySet<FF_ChampionGoalScorer> FF_ChampionGoalScorers
		{
			get
			{
				return this._FF_ChampionGoalScorers;
			}
			set
			{
				this._FF_ChampionGoalScorers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Team_FF_ChampionsGroupStage", Storage="_FF_ChampionsGroupStages", ThisKey="TeamID", OtherKey="Team1ID")]
		public EntitySet<FF_ChampionsGroupStage> FF_ChampionsGroupStages
		{
			get
			{
				return this._FF_ChampionsGroupStages;
			}
			set
			{
				this._FF_ChampionsGroupStages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Team_FF_ChampionsGroupStage1", Storage="_FF_ChampionsGroupStages1", ThisKey="TeamID", OtherKey="Team2ID")]
		public EntitySet<FF_ChampionsGroupStage> FF_ChampionsGroupStages1
		{
			get
			{
				return this._FF_ChampionsGroupStages1;
			}
			set
			{
				this._FF_ChampionsGroupStages1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Team_FF_ChampionsLeagueTable", Storage="_FF_ChampionsLeagueTables", ThisKey="TeamID", OtherKey="TeamID")]
		public EntitySet<FF_ChampionsLeagueTable> FF_ChampionsLeagueTables
		{
			get
			{
				return this._FF_ChampionsLeagueTables;
			}
			set
			{
				this._FF_ChampionsLeagueTables.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Team_FF_ChampionsOtherStage", Storage="_FF_ChampionsOtherStages", ThisKey="TeamID", OtherKey="Team1ID")]
		public EntitySet<FF_ChampionsOtherStage> FF_ChampionsOtherStages
		{
			get
			{
				return this._FF_ChampionsOtherStages;
			}
			set
			{
				this._FF_ChampionsOtherStages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Team_FF_ChampionsOtherStage1", Storage="_FF_ChampionsOtherStages1", ThisKey="TeamID", OtherKey="Team2ID")]
		public EntitySet<FF_ChampionsOtherStage> FF_ChampionsOtherStages1
		{
			get
			{
				return this._FF_ChampionsOtherStages1;
			}
			set
			{
				this._FF_ChampionsOtherStages1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Team_FF_LeagueTable", Storage="_FF_LeagueTables", ThisKey="TeamID", OtherKey="TeamID")]
		public EntitySet<FF_LeagueTable> FF_LeagueTables
		{
			get
			{
				return this._FF_LeagueTables;
			}
			set
			{
				this._FF_LeagueTables.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Team_FF_Match", Storage="_FF_Matches", ThisKey="TeamID", OtherKey="Team1ID")]
		public EntitySet<FF_Match> FF_Matches
		{
			get
			{
				return this._FF_Matches;
			}
			set
			{
				this._FF_Matches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Team_FF_Match1", Storage="_FF_Matches1", ThisKey="TeamID", OtherKey="Team2ID")]
		public EntitySet<FF_Match> FF_Matches1
		{
			get
			{
				return this._FF_Matches1;
			}
			set
			{
				this._FF_Matches1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Team_FF_TeamPlayer", Storage="_FF_TeamPlayers", ThisKey="TeamID", OtherKey="TeamID")]
		public EntitySet<FF_TeamPlayer> FF_TeamPlayers
		{
			get
			{
				return this._FF_TeamPlayers;
			}
			set
			{
				this._FF_TeamPlayers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_League_FF_Team", Storage="_FF_League", ThisKey="LeagueID", OtherKey="LeagueID", IsForeignKey=true)]
		public FF_League FF_League
		{
			get
			{
				return this._FF_League.Entity;
			}
			set
			{
				FF_League previousValue = this._FF_League.Entity;
				if (((previousValue != value) 
							|| (this._FF_League.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FF_League.Entity = null;
						previousValue.FF_Teams.Remove(this);
					}
					this._FF_League.Entity = value;
					if ((value != null))
					{
						value.FF_Teams.Add(this);
						this._LeagueID = value.LeagueID;
					}
					else
					{
						this._LeagueID = default(int);
					}
					this.SendPropertyChanged("FF_League");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FF_ChampionGoalScorers(FF_ChampionGoalScorer entity)
		{
			this.SendPropertyChanging();
			entity.FF_Team = this;
		}
		
		private void detach_FF_ChampionGoalScorers(FF_ChampionGoalScorer entity)
		{
			this.SendPropertyChanging();
			entity.FF_Team = null;
		}
		
		private void attach_FF_ChampionsGroupStages(FF_ChampionsGroupStage entity)
		{
			this.SendPropertyChanging();
			entity.FF_Team = this;
		}
		
		private void detach_FF_ChampionsGroupStages(FF_ChampionsGroupStage entity)
		{
			this.SendPropertyChanging();
			entity.FF_Team = null;
		}
		
		private void attach_FF_ChampionsGroupStages1(FF_ChampionsGroupStage entity)
		{
			this.SendPropertyChanging();
			entity.FF_Team1 = this;
		}
		
		private void detach_FF_ChampionsGroupStages1(FF_ChampionsGroupStage entity)
		{
			this.SendPropertyChanging();
			entity.FF_Team1 = null;
		}
		
		private void attach_FF_ChampionsLeagueTables(FF_ChampionsLeagueTable entity)
		{
			this.SendPropertyChanging();
			entity.FF_Team = this;
		}
		
		private void detach_FF_ChampionsLeagueTables(FF_ChampionsLeagueTable entity)
		{
			this.SendPropertyChanging();
			entity.FF_Team = null;
		}
		
		private void attach_FF_ChampionsOtherStages(FF_ChampionsOtherStage entity)
		{
			this.SendPropertyChanging();
			entity.FF_Team = this;
		}
		
		private void detach_FF_ChampionsOtherStages(FF_ChampionsOtherStage entity)
		{
			this.SendPropertyChanging();
			entity.FF_Team = null;
		}
		
		private void attach_FF_ChampionsOtherStages1(FF_ChampionsOtherStage entity)
		{
			this.SendPropertyChanging();
			entity.FF_Team1 = this;
		}
		
		private void detach_FF_ChampionsOtherStages1(FF_ChampionsOtherStage entity)
		{
			this.SendPropertyChanging();
			entity.FF_Team1 = null;
		}
		
		private void attach_FF_LeagueTables(FF_LeagueTable entity)
		{
			this.SendPropertyChanging();
			entity.FF_Team = this;
		}
		
		private void detach_FF_LeagueTables(FF_LeagueTable entity)
		{
			this.SendPropertyChanging();
			entity.FF_Team = null;
		}
		
		private void attach_FF_Matches(FF_Match entity)
		{
			this.SendPropertyChanging();
			entity.FF_Team = this;
		}
		
		private void detach_FF_Matches(FF_Match entity)
		{
			this.SendPropertyChanging();
			entity.FF_Team = null;
		}
		
		private void attach_FF_Matches1(FF_Match entity)
		{
			this.SendPropertyChanging();
			entity.FF_Team1 = this;
		}
		
		private void detach_FF_Matches1(FF_Match entity)
		{
			this.SendPropertyChanging();
			entity.FF_Team1 = null;
		}
		
		private void attach_FF_TeamPlayers(FF_TeamPlayer entity)
		{
			this.SendPropertyChanging();
			entity.FF_Team = this;
		}
		
		private void detach_FF_TeamPlayers(FF_TeamPlayer entity)
		{
			this.SendPropertyChanging();
			entity.FF_Team = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FF_TopScorers")]
	public partial class FF_TopScorer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private string _ImageURL;
		
		private int _Goals;
		
		private string _Details;
		
		private System.Guid _SeasonID;
		
		private int _LeagueID;
		
		private bool _IsCurrent;
		
		private int _Week;
		
		private EntityRef<FF_League> _FF_League;
		
		private EntityRef<FF_Season> _FF_Season;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnImageURLChanging(string value);
    partial void OnImageURLChanged();
    partial void OnGoalsChanging(int value);
    partial void OnGoalsChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    partial void OnSeasonIDChanging(System.Guid value);
    partial void OnSeasonIDChanged();
    partial void OnLeagueIDChanging(int value);
    partial void OnLeagueIDChanged();
    partial void OnIsCurrentChanging(bool value);
    partial void OnIsCurrentChanged();
    partial void OnWeekChanging(int value);
    partial void OnWeekChanged();
    #endregion
		
		public FF_TopScorer()
		{
			this._FF_League = default(EntityRef<FF_League>);
			this._FF_Season = default(EntityRef<FF_Season>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageURL", DbType="NVarChar(200)")]
		public string ImageURL
		{
			get
			{
				return this._ImageURL;
			}
			set
			{
				if ((this._ImageURL != value))
				{
					this.OnImageURLChanging(value);
					this.SendPropertyChanging();
					this._ImageURL = value;
					this.SendPropertyChanged("ImageURL");
					this.OnImageURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Goals", DbType="Int NOT NULL")]
		public int Goals
		{
			get
			{
				return this._Goals;
			}
			set
			{
				if ((this._Goals != value))
				{
					this.OnGoalsChanging(value);
					this.SendPropertyChanging();
					this._Goals = value;
					this.SendPropertyChanged("Goals");
					this.OnGoalsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="NVarChar(MAX)")]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeasonID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SeasonID
		{
			get
			{
				return this._SeasonID;
			}
			set
			{
				if ((this._SeasonID != value))
				{
					if (this._FF_Season.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSeasonIDChanging(value);
					this.SendPropertyChanging();
					this._SeasonID = value;
					this.SendPropertyChanged("SeasonID");
					this.OnSeasonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeagueID", DbType="Int NOT NULL")]
		public int LeagueID
		{
			get
			{
				return this._LeagueID;
			}
			set
			{
				if ((this._LeagueID != value))
				{
					if (this._FF_League.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLeagueIDChanging(value);
					this.SendPropertyChanging();
					this._LeagueID = value;
					this.SendPropertyChanged("LeagueID");
					this.OnLeagueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCurrent", DbType="Bit NOT NULL")]
		public bool IsCurrent
		{
			get
			{
				return this._IsCurrent;
			}
			set
			{
				if ((this._IsCurrent != value))
				{
					this.OnIsCurrentChanging(value);
					this.SendPropertyChanging();
					this._IsCurrent = value;
					this.SendPropertyChanged("IsCurrent");
					this.OnIsCurrentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Week", DbType="Int NOT NULL")]
		public int Week
		{
			get
			{
				return this._Week;
			}
			set
			{
				if ((this._Week != value))
				{
					this.OnWeekChanging(value);
					this.SendPropertyChanging();
					this._Week = value;
					this.SendPropertyChanged("Week");
					this.OnWeekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_League_FF_TopScorer", Storage="_FF_League", ThisKey="LeagueID", OtherKey="LeagueID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public FF_League FF_League
		{
			get
			{
				return this._FF_League.Entity;
			}
			set
			{
				FF_League previousValue = this._FF_League.Entity;
				if (((previousValue != value) 
							|| (this._FF_League.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FF_League.Entity = null;
						previousValue.FF_TopScorers.Remove(this);
					}
					this._FF_League.Entity = value;
					if ((value != null))
					{
						value.FF_TopScorers.Add(this);
						this._LeagueID = value.LeagueID;
					}
					else
					{
						this._LeagueID = default(int);
					}
					this.SendPropertyChanged("FF_League");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Season_FF_TopScorer", Storage="_FF_Season", ThisKey="SeasonID", OtherKey="SeasonID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public FF_Season FF_Season
		{
			get
			{
				return this._FF_Season.Entity;
			}
			set
			{
				FF_Season previousValue = this._FF_Season.Entity;
				if (((previousValue != value) 
							|| (this._FF_Season.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FF_Season.Entity = null;
						previousValue.FF_TopScorers.Remove(this);
					}
					this._FF_Season.Entity = value;
					if ((value != null))
					{
						value.FF_TopScorers.Add(this);
						this._SeasonID = value.SeasonID;
					}
					else
					{
						this._SeasonID = default(System.Guid);
					}
					this.SendPropertyChanged("FF_Season");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FF_UserComment")]
	public partial class FF_UserComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private int _UserID;
		
		private string _CommentID;
		
		private EntityRef<FF_Comment> _FF_Comment;
		
		private EntityRef<yaf_User> _yaf_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnCommentIDChanging(string value);
    partial void OnCommentIDChanged();
    #endregion
		
		public FF_UserComment()
		{
			this._FF_Comment = default(EntityRef<FF_Comment>);
			this._yaf_User = default(EntityRef<yaf_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._yaf_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string CommentID
		{
			get
			{
				return this._CommentID;
			}
			set
			{
				if ((this._CommentID != value))
				{
					if (this._FF_Comment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCommentIDChanging(value);
					this.SendPropertyChanging();
					this._CommentID = value;
					this.SendPropertyChanged("CommentID");
					this.OnCommentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Comment_FF_UserComment", Storage="_FF_Comment", ThisKey="CommentID", OtherKey="ID", IsForeignKey=true)]
		public FF_Comment FF_Comment
		{
			get
			{
				return this._FF_Comment.Entity;
			}
			set
			{
				FF_Comment previousValue = this._FF_Comment.Entity;
				if (((previousValue != value) 
							|| (this._FF_Comment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FF_Comment.Entity = null;
						previousValue.FF_UserComments.Remove(this);
					}
					this._FF_Comment.Entity = value;
					if ((value != null))
					{
						value.FF_UserComments.Add(this);
						this._CommentID = value.ID;
					}
					else
					{
						this._CommentID = default(string);
					}
					this.SendPropertyChanged("FF_Comment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_User_FF_UserComment", Storage="_yaf_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public yaf_User yaf_User
		{
			get
			{
				return this._yaf_User.Entity;
			}
			set
			{
				yaf_User previousValue = this._yaf_User.Entity;
				if (((previousValue != value) 
							|| (this._yaf_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_User.Entity = null;
						previousValue.FF_UserComments.Remove(this);
					}
					this._yaf_User.Entity = value;
					if ((value != null))
					{
						value.FF_UserComments.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("yaf_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FF_UserComment2")]
	public partial class FF_UserComment2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _CommentID;
		
		private string _Name;
		
		private string _Email;
		
		private EntityRef<FF_Comment> _FF_Comment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCommentIDChanging(string value);
    partial void OnCommentIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public FF_UserComment2()
		{
			this._FF_Comment = default(EntityRef<FF_Comment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string CommentID
		{
			get
			{
				return this._CommentID;
			}
			set
			{
				if ((this._CommentID != value))
				{
					if (this._FF_Comment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCommentIDChanging(value);
					this.SendPropertyChanging();
					this._CommentID = value;
					this.SendPropertyChanged("CommentID");
					this.OnCommentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Comment_FF_UserComment2", Storage="_FF_Comment", ThisKey="CommentID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public FF_Comment FF_Comment
		{
			get
			{
				return this._FF_Comment.Entity;
			}
			set
			{
				FF_Comment previousValue = this._FF_Comment.Entity;
				if (((previousValue != value) 
							|| (this._FF_Comment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FF_Comment.Entity = null;
						previousValue.FF_UserComment2s.Remove(this);
					}
					this._FF_Comment.Entity = value;
					if ((value != null))
					{
						value.FF_UserComment2s.Add(this);
						this._CommentID = value.ID;
					}
					else
					{
						this._CommentID = default(string);
					}
					this.SendPropertyChanged("FF_Comment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FF_Votes")]
	public partial class FF_Vote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _QuestionID;
		
		private string _Option;
		
		private long _Votes;
		
		private EntityRef<FF_Poll> _FF_Poll;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnQuestionIDChanging(string value);
    partial void OnQuestionIDChanged();
    partial void OnOptionChanging(string value);
    partial void OnOptionChanged();
    partial void OnVotesChanging(long value);
    partial void OnVotesChanged();
    #endregion
		
		public FF_Vote()
		{
			this._FF_Poll = default(EntityRef<FF_Poll>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string QuestionID
		{
			get
			{
				return this._QuestionID;
			}
			set
			{
				if ((this._QuestionID != value))
				{
					if (this._FF_Poll.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionID = value;
					this.SendPropertyChanged("QuestionID");
					this.OnQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Option]", Storage="_Option", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Option
		{
			get
			{
				return this._Option;
			}
			set
			{
				if ((this._Option != value))
				{
					this.OnOptionChanging(value);
					this.SendPropertyChanging();
					this._Option = value;
					this.SendPropertyChanged("Option");
					this.OnOptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Votes", DbType="BigInt NOT NULL")]
		public long Votes
		{
			get
			{
				return this._Votes;
			}
			set
			{
				if ((this._Votes != value))
				{
					this.OnVotesChanging(value);
					this.SendPropertyChanging();
					this._Votes = value;
					this.SendPropertyChanged("Votes");
					this.OnVotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FF_Poll_FF_Vote", Storage="_FF_Poll", ThisKey="QuestionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public FF_Poll FF_Poll
		{
			get
			{
				return this._FF_Poll.Entity;
			}
			set
			{
				FF_Poll previousValue = this._FF_Poll.Entity;
				if (((previousValue != value) 
							|| (this._FF_Poll.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FF_Poll.Entity = null;
						previousValue.FF_Votes.Remove(this);
					}
					this._FF_Poll.Entity = value;
					if ((value != null))
					{
						value.FF_Votes.Add(this);
						this._QuestionID = value.ID;
					}
					else
					{
						this._QuestionID = default(string);
					}
					this.SendPropertyChanged("FF_Poll");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_AccessMask")]
	public partial class yaf_AccessMask : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccessMaskID;
		
		private int _BoardID;
		
		private string _Name;
		
		private int _Flags;
		
		private short _SortOrder;
		
		private EntitySet<yaf_ForumAccess> _yaf_ForumAccesses;
		
		private EntitySet<yaf_UserForum> _yaf_UserForums;
		
		private EntityRef<yaf_Board> _yaf_Board;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccessMaskIDChanging(int value);
    partial void OnAccessMaskIDChanged();
    partial void OnBoardIDChanging(int value);
    partial void OnBoardIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFlagsChanging(int value);
    partial void OnFlagsChanged();
    partial void OnSortOrderChanging(short value);
    partial void OnSortOrderChanged();
    #endregion
		
		public yaf_AccessMask()
		{
			this._yaf_ForumAccesses = new EntitySet<yaf_ForumAccess>(new Action<yaf_ForumAccess>(this.attach_yaf_ForumAccesses), new Action<yaf_ForumAccess>(this.detach_yaf_ForumAccesses));
			this._yaf_UserForums = new EntitySet<yaf_UserForum>(new Action<yaf_UserForum>(this.attach_yaf_UserForums), new Action<yaf_UserForum>(this.detach_yaf_UserForums));
			this._yaf_Board = default(EntityRef<yaf_Board>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessMaskID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AccessMaskID
		{
			get
			{
				return this._AccessMaskID;
			}
			set
			{
				if ((this._AccessMaskID != value))
				{
					this.OnAccessMaskIDChanging(value);
					this.SendPropertyChanging();
					this._AccessMaskID = value;
					this.SendPropertyChanged("AccessMaskID");
					this.OnAccessMaskIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoardID", DbType="Int NOT NULL")]
		public int BoardID
		{
			get
			{
				return this._BoardID;
			}
			set
			{
				if ((this._BoardID != value))
				{
					if (this._yaf_Board.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBoardIDChanging(value);
					this.SendPropertyChanging();
					this._BoardID = value;
					this.SendPropertyChanged("BoardID");
					this.OnBoardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flags", DbType="Int NOT NULL")]
		public int Flags
		{
			get
			{
				return this._Flags;
			}
			set
			{
				if ((this._Flags != value))
				{
					this.OnFlagsChanging(value);
					this.SendPropertyChanging();
					this._Flags = value;
					this.SendPropertyChanged("Flags");
					this.OnFlagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="SmallInt NOT NULL")]
		public short SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_AccessMask_yaf_ForumAccess", Storage="_yaf_ForumAccesses", ThisKey="AccessMaskID", OtherKey="AccessMaskID")]
		public EntitySet<yaf_ForumAccess> yaf_ForumAccesses
		{
			get
			{
				return this._yaf_ForumAccesses;
			}
			set
			{
				this._yaf_ForumAccesses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_AccessMask_yaf_UserForum", Storage="_yaf_UserForums", ThisKey="AccessMaskID", OtherKey="AccessMaskID")]
		public EntitySet<yaf_UserForum> yaf_UserForums
		{
			get
			{
				return this._yaf_UserForums;
			}
			set
			{
				this._yaf_UserForums.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Board_yaf_AccessMask", Storage="_yaf_Board", ThisKey="BoardID", OtherKey="BoardID", IsForeignKey=true)]
		public yaf_Board yaf_Board
		{
			get
			{
				return this._yaf_Board.Entity;
			}
			set
			{
				yaf_Board previousValue = this._yaf_Board.Entity;
				if (((previousValue != value) 
							|| (this._yaf_Board.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_Board.Entity = null;
						previousValue.yaf_AccessMasks.Remove(this);
					}
					this._yaf_Board.Entity = value;
					if ((value != null))
					{
						value.yaf_AccessMasks.Add(this);
						this._BoardID = value.BoardID;
					}
					else
					{
						this._BoardID = default(int);
					}
					this.SendPropertyChanged("yaf_Board");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_yaf_ForumAccesses(yaf_ForumAccess entity)
		{
			this.SendPropertyChanging();
			entity.yaf_AccessMask = this;
		}
		
		private void detach_yaf_ForumAccesses(yaf_ForumAccess entity)
		{
			this.SendPropertyChanging();
			entity.yaf_AccessMask = null;
		}
		
		private void attach_yaf_UserForums(yaf_UserForum entity)
		{
			this.SendPropertyChanging();
			entity.yaf_AccessMask = this;
		}
		
		private void detach_yaf_UserForums(yaf_UserForum entity)
		{
			this.SendPropertyChanging();
			entity.yaf_AccessMask = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_Active")]
	public partial class yaf_Active : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SessionID;
		
		private int _BoardID;
		
		private int _UserID;
		
		private string _IP;
		
		private System.DateTime _Login;
		
		private System.DateTime _LastActive;
		
		private string _Location;
		
		private System.Nullable<int> _ForumID;
		
		private System.Nullable<int> _TopicID;
		
		private string _Browser;
		
		private string _Platform;
		
		private System.Nullable<int> _Flags;
		
		private string _ForumPage;
		
		private EntityRef<yaf_Board> _yaf_Board;
		
		private EntityRef<yaf_Forum> _yaf_Forum;
		
		private EntityRef<yaf_Topic> _yaf_Topic;
		
		private EntityRef<yaf_User> _yaf_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSessionIDChanging(string value);
    partial void OnSessionIDChanged();
    partial void OnBoardIDChanging(int value);
    partial void OnBoardIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnIPChanging(string value);
    partial void OnIPChanged();
    partial void OnLoginChanging(System.DateTime value);
    partial void OnLoginChanged();
    partial void OnLastActiveChanging(System.DateTime value);
    partial void OnLastActiveChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnForumIDChanging(System.Nullable<int> value);
    partial void OnForumIDChanged();
    partial void OnTopicIDChanging(System.Nullable<int> value);
    partial void OnTopicIDChanged();
    partial void OnBrowserChanging(string value);
    partial void OnBrowserChanged();
    partial void OnPlatformChanging(string value);
    partial void OnPlatformChanged();
    partial void OnFlagsChanging(System.Nullable<int> value);
    partial void OnFlagsChanged();
    partial void OnForumPageChanging(string value);
    partial void OnForumPageChanged();
    #endregion
		
		public yaf_Active()
		{
			this._yaf_Board = default(EntityRef<yaf_Board>);
			this._yaf_Forum = default(EntityRef<yaf_Forum>);
			this._yaf_Topic = default(EntityRef<yaf_Topic>);
			this._yaf_User = default(EntityRef<yaf_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionID", DbType="NVarChar(24) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SessionID
		{
			get
			{
				return this._SessionID;
			}
			set
			{
				if ((this._SessionID != value))
				{
					this.OnSessionIDChanging(value);
					this.SendPropertyChanging();
					this._SessionID = value;
					this.SendPropertyChanged("SessionID");
					this.OnSessionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoardID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BoardID
		{
			get
			{
				return this._BoardID;
			}
			set
			{
				if ((this._BoardID != value))
				{
					if (this._yaf_Board.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBoardIDChanging(value);
					this.SendPropertyChanging();
					this._BoardID = value;
					this.SendPropertyChanged("BoardID");
					this.OnBoardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._yaf_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP", DbType="VarChar(39) NOT NULL", CanBeNull=false)]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this.OnIPChanging(value);
					this.SendPropertyChanging();
					this._IP = value;
					this.SendPropertyChanged("IP");
					this.OnIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="DateTime NOT NULL")]
		public System.DateTime Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActive", DbType="DateTime NOT NULL")]
		public System.DateTime LastActive
		{
			get
			{
				return this._LastActive;
			}
			set
			{
				if ((this._LastActive != value))
				{
					this.OnLastActiveChanging(value);
					this.SendPropertyChanging();
					this._LastActive = value;
					this.SendPropertyChanged("LastActive");
					this.OnLastActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumID", DbType="Int")]
		public System.Nullable<int> ForumID
		{
			get
			{
				return this._ForumID;
			}
			set
			{
				if ((this._ForumID != value))
				{
					if (this._yaf_Forum.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForumIDChanging(value);
					this.SendPropertyChanging();
					this._ForumID = value;
					this.SendPropertyChanged("ForumID");
					this.OnForumIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicID", DbType="Int")]
		public System.Nullable<int> TopicID
		{
			get
			{
				return this._TopicID;
			}
			set
			{
				if ((this._TopicID != value))
				{
					if (this._yaf_Topic.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTopicIDChanging(value);
					this.SendPropertyChanging();
					this._TopicID = value;
					this.SendPropertyChanged("TopicID");
					this.OnTopicIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Browser", DbType="NVarChar(50)")]
		public string Browser
		{
			get
			{
				return this._Browser;
			}
			set
			{
				if ((this._Browser != value))
				{
					this.OnBrowserChanging(value);
					this.SendPropertyChanging();
					this._Browser = value;
					this.SendPropertyChanged("Browser");
					this.OnBrowserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Platform", DbType="NVarChar(50)")]
		public string Platform
		{
			get
			{
				return this._Platform;
			}
			set
			{
				if ((this._Platform != value))
				{
					this.OnPlatformChanging(value);
					this.SendPropertyChanging();
					this._Platform = value;
					this.SendPropertyChanged("Platform");
					this.OnPlatformChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flags", DbType="Int")]
		public System.Nullable<int> Flags
		{
			get
			{
				return this._Flags;
			}
			set
			{
				if ((this._Flags != value))
				{
					this.OnFlagsChanging(value);
					this.SendPropertyChanging();
					this._Flags = value;
					this.SendPropertyChanged("Flags");
					this.OnFlagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumPage", DbType="NVarChar(255)")]
		public string ForumPage
		{
			get
			{
				return this._ForumPage;
			}
			set
			{
				if ((this._ForumPage != value))
				{
					this.OnForumPageChanging(value);
					this.SendPropertyChanging();
					this._ForumPage = value;
					this.SendPropertyChanged("ForumPage");
					this.OnForumPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Board_yaf_Active", Storage="_yaf_Board", ThisKey="BoardID", OtherKey="BoardID", IsForeignKey=true)]
		public yaf_Board yaf_Board
		{
			get
			{
				return this._yaf_Board.Entity;
			}
			set
			{
				yaf_Board previousValue = this._yaf_Board.Entity;
				if (((previousValue != value) 
							|| (this._yaf_Board.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_Board.Entity = null;
						previousValue.yaf_Actives.Remove(this);
					}
					this._yaf_Board.Entity = value;
					if ((value != null))
					{
						value.yaf_Actives.Add(this);
						this._BoardID = value.BoardID;
					}
					else
					{
						this._BoardID = default(int);
					}
					this.SendPropertyChanged("yaf_Board");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Forum_yaf_Active", Storage="_yaf_Forum", ThisKey="ForumID", OtherKey="ForumID", IsForeignKey=true)]
		public yaf_Forum yaf_Forum
		{
			get
			{
				return this._yaf_Forum.Entity;
			}
			set
			{
				yaf_Forum previousValue = this._yaf_Forum.Entity;
				if (((previousValue != value) 
							|| (this._yaf_Forum.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_Forum.Entity = null;
						previousValue.yaf_Actives.Remove(this);
					}
					this._yaf_Forum.Entity = value;
					if ((value != null))
					{
						value.yaf_Actives.Add(this);
						this._ForumID = value.ForumID;
					}
					else
					{
						this._ForumID = default(Nullable<int>);
					}
					this.SendPropertyChanged("yaf_Forum");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Topic_yaf_Active", Storage="_yaf_Topic", ThisKey="TopicID", OtherKey="TopicID", IsForeignKey=true)]
		public yaf_Topic yaf_Topic
		{
			get
			{
				return this._yaf_Topic.Entity;
			}
			set
			{
				yaf_Topic previousValue = this._yaf_Topic.Entity;
				if (((previousValue != value) 
							|| (this._yaf_Topic.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_Topic.Entity = null;
						previousValue.yaf_Actives.Remove(this);
					}
					this._yaf_Topic.Entity = value;
					if ((value != null))
					{
						value.yaf_Actives.Add(this);
						this._TopicID = value.TopicID;
					}
					else
					{
						this._TopicID = default(Nullable<int>);
					}
					this.SendPropertyChanged("yaf_Topic");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_User_yaf_Active", Storage="_yaf_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public yaf_User yaf_User
		{
			get
			{
				return this._yaf_User.Entity;
			}
			set
			{
				yaf_User previousValue = this._yaf_User.Entity;
				if (((previousValue != value) 
							|| (this._yaf_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_User.Entity = null;
						previousValue.yaf_Actives.Remove(this);
					}
					this._yaf_User.Entity = value;
					if ((value != null))
					{
						value.yaf_Actives.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("yaf_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_ActiveAccess")]
	public partial class yaf_ActiveAccess
	{
		
		private int _UserID;
		
		private int _BoardID;
		
		private System.Nullable<int> _ForumID;
		
		private bool _IsAdmin;
		
		private bool _IsForumModerator;
		
		private bool _IsModerator;
		
		private bool _ReadAccess;
		
		private bool _PostAccess;
		
		private bool _ReplyAccess;
		
		private bool _PriorityAccess;
		
		private bool _PollAccess;
		
		private bool _VoteAccess;
		
		private bool _ModeratorAccess;
		
		private bool _EditAccess;
		
		private bool _DeleteAccess;
		
		private bool _UploadAccess;
		
		private bool _DownloadAccess;
		
		public yaf_ActiveAccess()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoardID", DbType="Int NOT NULL")]
		public int BoardID
		{
			get
			{
				return this._BoardID;
			}
			set
			{
				if ((this._BoardID != value))
				{
					this._BoardID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumID", DbType="Int")]
		public System.Nullable<int> ForumID
		{
			get
			{
				return this._ForumID;
			}
			set
			{
				if ((this._ForumID != value))
				{
					this._ForumID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdmin", DbType="Bit NOT NULL")]
		public bool IsAdmin
		{
			get
			{
				return this._IsAdmin;
			}
			set
			{
				if ((this._IsAdmin != value))
				{
					this._IsAdmin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsForumModerator", DbType="Bit NOT NULL")]
		public bool IsForumModerator
		{
			get
			{
				return this._IsForumModerator;
			}
			set
			{
				if ((this._IsForumModerator != value))
				{
					this._IsForumModerator = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsModerator", DbType="Bit NOT NULL")]
		public bool IsModerator
		{
			get
			{
				return this._IsModerator;
			}
			set
			{
				if ((this._IsModerator != value))
				{
					this._IsModerator = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReadAccess", DbType="Bit NOT NULL")]
		public bool ReadAccess
		{
			get
			{
				return this._ReadAccess;
			}
			set
			{
				if ((this._ReadAccess != value))
				{
					this._ReadAccess = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostAccess", DbType="Bit NOT NULL")]
		public bool PostAccess
		{
			get
			{
				return this._PostAccess;
			}
			set
			{
				if ((this._PostAccess != value))
				{
					this._PostAccess = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplyAccess", DbType="Bit NOT NULL")]
		public bool ReplyAccess
		{
			get
			{
				return this._ReplyAccess;
			}
			set
			{
				if ((this._ReplyAccess != value))
				{
					this._ReplyAccess = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriorityAccess", DbType="Bit NOT NULL")]
		public bool PriorityAccess
		{
			get
			{
				return this._PriorityAccess;
			}
			set
			{
				if ((this._PriorityAccess != value))
				{
					this._PriorityAccess = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollAccess", DbType="Bit NOT NULL")]
		public bool PollAccess
		{
			get
			{
				return this._PollAccess;
			}
			set
			{
				if ((this._PollAccess != value))
				{
					this._PollAccess = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoteAccess", DbType="Bit NOT NULL")]
		public bool VoteAccess
		{
			get
			{
				return this._VoteAccess;
			}
			set
			{
				if ((this._VoteAccess != value))
				{
					this._VoteAccess = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModeratorAccess", DbType="Bit NOT NULL")]
		public bool ModeratorAccess
		{
			get
			{
				return this._ModeratorAccess;
			}
			set
			{
				if ((this._ModeratorAccess != value))
				{
					this._ModeratorAccess = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditAccess", DbType="Bit NOT NULL")]
		public bool EditAccess
		{
			get
			{
				return this._EditAccess;
			}
			set
			{
				if ((this._EditAccess != value))
				{
					this._EditAccess = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteAccess", DbType="Bit NOT NULL")]
		public bool DeleteAccess
		{
			get
			{
				return this._DeleteAccess;
			}
			set
			{
				if ((this._DeleteAccess != value))
				{
					this._DeleteAccess = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadAccess", DbType="Bit NOT NULL")]
		public bool UploadAccess
		{
			get
			{
				return this._UploadAccess;
			}
			set
			{
				if ((this._UploadAccess != value))
				{
					this._UploadAccess = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownloadAccess", DbType="Bit NOT NULL")]
		public bool DownloadAccess
		{
			get
			{
				return this._DownloadAccess;
			}
			set
			{
				if ((this._DownloadAccess != value))
				{
					this._DownloadAccess = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_Attachment")]
	public partial class yaf_Attachment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AttachmentID;
		
		private int _MessageID;
		
		private string _FileName;
		
		private int _Bytes;
		
		private System.Nullable<int> _FileID;
		
		private string _ContentType;
		
		private int _Downloads;
		
		private System.Data.Linq.Binary _FileData;
		
		private EntityRef<yaf_Message> _yaf_Message;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttachmentIDChanging(int value);
    partial void OnAttachmentIDChanged();
    partial void OnMessageIDChanging(int value);
    partial void OnMessageIDChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnBytesChanging(int value);
    partial void OnBytesChanged();
    partial void OnFileIDChanging(System.Nullable<int> value);
    partial void OnFileIDChanged();
    partial void OnContentTypeChanging(string value);
    partial void OnContentTypeChanged();
    partial void OnDownloadsChanging(int value);
    partial void OnDownloadsChanged();
    partial void OnFileDataChanging(System.Data.Linq.Binary value);
    partial void OnFileDataChanged();
    #endregion
		
		public yaf_Attachment()
		{
			this._yaf_Message = default(EntityRef<yaf_Message>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AttachmentID
		{
			get
			{
				return this._AttachmentID;
			}
			set
			{
				if ((this._AttachmentID != value))
				{
					this.OnAttachmentIDChanging(value);
					this.SendPropertyChanging();
					this._AttachmentID = value;
					this.SendPropertyChanged("AttachmentID");
					this.OnAttachmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", DbType="Int NOT NULL")]
		public int MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					if (this._yaf_Message.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMessageIDChanging(value);
					this.SendPropertyChanging();
					this._MessageID = value;
					this.SendPropertyChanged("MessageID");
					this.OnMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bytes", DbType="Int NOT NULL")]
		public int Bytes
		{
			get
			{
				return this._Bytes;
			}
			set
			{
				if ((this._Bytes != value))
				{
					this.OnBytesChanging(value);
					this.SendPropertyChanging();
					this._Bytes = value;
					this.SendPropertyChanged("Bytes");
					this.OnBytesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileID", DbType="Int")]
		public System.Nullable<int> FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					this.OnFileIDChanging(value);
					this.SendPropertyChanging();
					this._FileID = value;
					this.SendPropertyChanged("FileID");
					this.OnFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentType", DbType="NVarChar(50)")]
		public string ContentType
		{
			get
			{
				return this._ContentType;
			}
			set
			{
				if ((this._ContentType != value))
				{
					this.OnContentTypeChanging(value);
					this.SendPropertyChanging();
					this._ContentType = value;
					this.SendPropertyChanged("ContentType");
					this.OnContentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Downloads", DbType="Int NOT NULL")]
		public int Downloads
		{
			get
			{
				return this._Downloads;
			}
			set
			{
				if ((this._Downloads != value))
				{
					this.OnDownloadsChanging(value);
					this.SendPropertyChanging();
					this._Downloads = value;
					this.SendPropertyChanged("Downloads");
					this.OnDownloadsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileData", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary FileData
		{
			get
			{
				return this._FileData;
			}
			set
			{
				if ((this._FileData != value))
				{
					this.OnFileDataChanging(value);
					this.SendPropertyChanging();
					this._FileData = value;
					this.SendPropertyChanged("FileData");
					this.OnFileDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Message_yaf_Attachment", Storage="_yaf_Message", ThisKey="MessageID", OtherKey="MessageID", IsForeignKey=true)]
		public yaf_Message yaf_Message
		{
			get
			{
				return this._yaf_Message.Entity;
			}
			set
			{
				yaf_Message previousValue = this._yaf_Message.Entity;
				if (((previousValue != value) 
							|| (this._yaf_Message.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_Message.Entity = null;
						previousValue.yaf_Attachments.Remove(this);
					}
					this._yaf_Message.Entity = value;
					if ((value != null))
					{
						value.yaf_Attachments.Add(this);
						this._MessageID = value.MessageID;
					}
					else
					{
						this._MessageID = default(int);
					}
					this.SendPropertyChanged("yaf_Message");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_BannedIP")]
	public partial class yaf_BannedIP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _BoardID;
		
		private string _Mask;
		
		private System.DateTime _Since;
		
		private string _Reason;
		
		private System.Nullable<int> _UserID;
		
		private EntityRef<yaf_Board> _yaf_Board;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBoardIDChanging(int value);
    partial void OnBoardIDChanged();
    partial void OnMaskChanging(string value);
    partial void OnMaskChanged();
    partial void OnSinceChanging(System.DateTime value);
    partial void OnSinceChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    #endregion
		
		public yaf_BannedIP()
		{
			this._yaf_Board = default(EntityRef<yaf_Board>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoardID", DbType="Int NOT NULL")]
		public int BoardID
		{
			get
			{
				return this._BoardID;
			}
			set
			{
				if ((this._BoardID != value))
				{
					if (this._yaf_Board.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBoardIDChanging(value);
					this.SendPropertyChanging();
					this._BoardID = value;
					this.SendPropertyChanged("BoardID");
					this.OnBoardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mask", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string Mask
		{
			get
			{
				return this._Mask;
			}
			set
			{
				if ((this._Mask != value))
				{
					this.OnMaskChanging(value);
					this.SendPropertyChanging();
					this._Mask = value;
					this.SendPropertyChanged("Mask");
					this.OnMaskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Since", DbType="DateTime NOT NULL")]
		public System.DateTime Since
		{
			get
			{
				return this._Since;
			}
			set
			{
				if ((this._Since != value))
				{
					this.OnSinceChanging(value);
					this.SendPropertyChanging();
					this._Since = value;
					this.SendPropertyChanged("Since");
					this.OnSinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="NVarChar(128)")]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Board_yaf_BannedIP", Storage="_yaf_Board", ThisKey="BoardID", OtherKey="BoardID", IsForeignKey=true)]
		public yaf_Board yaf_Board
		{
			get
			{
				return this._yaf_Board.Entity;
			}
			set
			{
				yaf_Board previousValue = this._yaf_Board.Entity;
				if (((previousValue != value) 
							|| (this._yaf_Board.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_Board.Entity = null;
						previousValue.yaf_BannedIPs.Remove(this);
					}
					this._yaf_Board.Entity = value;
					if ((value != null))
					{
						value.yaf_BannedIPs.Add(this);
						this._BoardID = value.BoardID;
					}
					else
					{
						this._BoardID = default(int);
					}
					this.SendPropertyChanged("yaf_Board");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_BBCode")]
	public partial class yaf_BBCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BBCodeID;
		
		private int _BoardID;
		
		private string _Name;
		
		private string _Description;
		
		private string _OnClickJS;
		
		private string _DisplayJS;
		
		private string _EditJS;
		
		private string _DisplayCSS;
		
		private string _SearchRegex;
		
		private string _ReplaceRegex;
		
		private string _Variables;
		
		private System.Nullable<bool> _UseModule;
		
		private string _ModuleClass;
		
		private int _ExecOrder;
		
		private EntityRef<yaf_Board> _yaf_Board;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBBCodeIDChanging(int value);
    partial void OnBBCodeIDChanged();
    partial void OnBoardIDChanging(int value);
    partial void OnBoardIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnOnClickJSChanging(string value);
    partial void OnOnClickJSChanged();
    partial void OnDisplayJSChanging(string value);
    partial void OnDisplayJSChanged();
    partial void OnEditJSChanging(string value);
    partial void OnEditJSChanged();
    partial void OnDisplayCSSChanging(string value);
    partial void OnDisplayCSSChanged();
    partial void OnSearchRegexChanging(string value);
    partial void OnSearchRegexChanged();
    partial void OnReplaceRegexChanging(string value);
    partial void OnReplaceRegexChanged();
    partial void OnVariablesChanging(string value);
    partial void OnVariablesChanged();
    partial void OnUseModuleChanging(System.Nullable<bool> value);
    partial void OnUseModuleChanged();
    partial void OnModuleClassChanging(string value);
    partial void OnModuleClassChanged();
    partial void OnExecOrderChanging(int value);
    partial void OnExecOrderChanged();
    #endregion
		
		public yaf_BBCode()
		{
			this._yaf_Board = default(EntityRef<yaf_Board>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BBCodeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BBCodeID
		{
			get
			{
				return this._BBCodeID;
			}
			set
			{
				if ((this._BBCodeID != value))
				{
					this.OnBBCodeIDChanging(value);
					this.SendPropertyChanging();
					this._BBCodeID = value;
					this.SendPropertyChanged("BBCodeID");
					this.OnBBCodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoardID", DbType="Int NOT NULL")]
		public int BoardID
		{
			get
			{
				return this._BoardID;
			}
			set
			{
				if ((this._BoardID != value))
				{
					if (this._yaf_Board.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBoardIDChanging(value);
					this.SendPropertyChanging();
					this._BoardID = value;
					this.SendPropertyChanged("BoardID");
					this.OnBoardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(4000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnClickJS", DbType="NVarChar(1000)")]
		public string OnClickJS
		{
			get
			{
				return this._OnClickJS;
			}
			set
			{
				if ((this._OnClickJS != value))
				{
					this.OnOnClickJSChanging(value);
					this.SendPropertyChanging();
					this._OnClickJS = value;
					this.SendPropertyChanged("OnClickJS");
					this.OnOnClickJSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayJS", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string DisplayJS
		{
			get
			{
				return this._DisplayJS;
			}
			set
			{
				if ((this._DisplayJS != value))
				{
					this.OnDisplayJSChanging(value);
					this.SendPropertyChanging();
					this._DisplayJS = value;
					this.SendPropertyChanged("DisplayJS");
					this.OnDisplayJSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditJS", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string EditJS
		{
			get
			{
				return this._EditJS;
			}
			set
			{
				if ((this._EditJS != value))
				{
					this.OnEditJSChanging(value);
					this.SendPropertyChanging();
					this._EditJS = value;
					this.SendPropertyChanged("EditJS");
					this.OnEditJSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayCSS", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string DisplayCSS
		{
			get
			{
				return this._DisplayCSS;
			}
			set
			{
				if ((this._DisplayCSS != value))
				{
					this.OnDisplayCSSChanging(value);
					this.SendPropertyChanging();
					this._DisplayCSS = value;
					this.SendPropertyChanged("DisplayCSS");
					this.OnDisplayCSSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchRegex", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string SearchRegex
		{
			get
			{
				return this._SearchRegex;
			}
			set
			{
				if ((this._SearchRegex != value))
				{
					this.OnSearchRegexChanging(value);
					this.SendPropertyChanging();
					this._SearchRegex = value;
					this.SendPropertyChanged("SearchRegex");
					this.OnSearchRegexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplaceRegex", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ReplaceRegex
		{
			get
			{
				return this._ReplaceRegex;
			}
			set
			{
				if ((this._ReplaceRegex != value))
				{
					this.OnReplaceRegexChanging(value);
					this.SendPropertyChanging();
					this._ReplaceRegex = value;
					this.SendPropertyChanged("ReplaceRegex");
					this.OnReplaceRegexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Variables", DbType="NVarChar(1000)")]
		public string Variables
		{
			get
			{
				return this._Variables;
			}
			set
			{
				if ((this._Variables != value))
				{
					this.OnVariablesChanging(value);
					this.SendPropertyChanging();
					this._Variables = value;
					this.SendPropertyChanged("Variables");
					this.OnVariablesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseModule", DbType="Bit")]
		public System.Nullable<bool> UseModule
		{
			get
			{
				return this._UseModule;
			}
			set
			{
				if ((this._UseModule != value))
				{
					this.OnUseModuleChanging(value);
					this.SendPropertyChanging();
					this._UseModule = value;
					this.SendPropertyChanged("UseModule");
					this.OnUseModuleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleClass", DbType="NVarChar(255)")]
		public string ModuleClass
		{
			get
			{
				return this._ModuleClass;
			}
			set
			{
				if ((this._ModuleClass != value))
				{
					this.OnModuleClassChanging(value);
					this.SendPropertyChanging();
					this._ModuleClass = value;
					this.SendPropertyChanged("ModuleClass");
					this.OnModuleClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecOrder", DbType="Int NOT NULL")]
		public int ExecOrder
		{
			get
			{
				return this._ExecOrder;
			}
			set
			{
				if ((this._ExecOrder != value))
				{
					this.OnExecOrderChanging(value);
					this.SendPropertyChanging();
					this._ExecOrder = value;
					this.SendPropertyChanged("ExecOrder");
					this.OnExecOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Board_yaf_BBCode", Storage="_yaf_Board", ThisKey="BoardID", OtherKey="BoardID", IsForeignKey=true)]
		public yaf_Board yaf_Board
		{
			get
			{
				return this._yaf_Board.Entity;
			}
			set
			{
				yaf_Board previousValue = this._yaf_Board.Entity;
				if (((previousValue != value) 
							|| (this._yaf_Board.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_Board.Entity = null;
						previousValue.yaf_BBCodes.Remove(this);
					}
					this._yaf_Board.Entity = value;
					if ((value != null))
					{
						value.yaf_BBCodes.Add(this);
						this._BoardID = value.BoardID;
					}
					else
					{
						this._BoardID = default(int);
					}
					this.SendPropertyChanged("yaf_Board");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_Board")]
	public partial class yaf_Board : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BoardID;
		
		private string _Name;
		
		private bool _AllowThreaded;
		
		private string _MembershipAppName;
		
		private string _RolesAppName;
		
		private System.Nullable<System.Guid> _BoardUID;
		
		private EntitySet<yaf_AccessMask> _yaf_AccessMasks;
		
		private EntitySet<yaf_Active> _yaf_Actives;
		
		private EntitySet<yaf_BannedIP> _yaf_BannedIPs;
		
		private EntitySet<yaf_BBCode> _yaf_BBCodes;
		
		private EntitySet<yaf_Category> _yaf_Categories;
		
		private EntitySet<yaf_Extension> _yaf_Extensions;
		
		private EntitySet<yaf_Group> _yaf_Groups;
		
		private EntitySet<yaf_NntpServer> _yaf_NntpServers;
		
		private EntitySet<yaf_Rank> _yaf_Ranks;
		
		private EntitySet<yaf_Registry> _yaf_Registries;
		
		private EntitySet<yaf_Smiley> _yaf_Smileys;
		
		private EntitySet<yaf_User> _yaf_Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBoardIDChanging(int value);
    partial void OnBoardIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAllowThreadedChanging(bool value);
    partial void OnAllowThreadedChanged();
    partial void OnMembershipAppNameChanging(string value);
    partial void OnMembershipAppNameChanged();
    partial void OnRolesAppNameChanging(string value);
    partial void OnRolesAppNameChanged();
    partial void OnBoardUIDChanging(System.Nullable<System.Guid> value);
    partial void OnBoardUIDChanged();
    #endregion
		
		public yaf_Board()
		{
			this._yaf_AccessMasks = new EntitySet<yaf_AccessMask>(new Action<yaf_AccessMask>(this.attach_yaf_AccessMasks), new Action<yaf_AccessMask>(this.detach_yaf_AccessMasks));
			this._yaf_Actives = new EntitySet<yaf_Active>(new Action<yaf_Active>(this.attach_yaf_Actives), new Action<yaf_Active>(this.detach_yaf_Actives));
			this._yaf_BannedIPs = new EntitySet<yaf_BannedIP>(new Action<yaf_BannedIP>(this.attach_yaf_BannedIPs), new Action<yaf_BannedIP>(this.detach_yaf_BannedIPs));
			this._yaf_BBCodes = new EntitySet<yaf_BBCode>(new Action<yaf_BBCode>(this.attach_yaf_BBCodes), new Action<yaf_BBCode>(this.detach_yaf_BBCodes));
			this._yaf_Categories = new EntitySet<yaf_Category>(new Action<yaf_Category>(this.attach_yaf_Categories), new Action<yaf_Category>(this.detach_yaf_Categories));
			this._yaf_Extensions = new EntitySet<yaf_Extension>(new Action<yaf_Extension>(this.attach_yaf_Extensions), new Action<yaf_Extension>(this.detach_yaf_Extensions));
			this._yaf_Groups = new EntitySet<yaf_Group>(new Action<yaf_Group>(this.attach_yaf_Groups), new Action<yaf_Group>(this.detach_yaf_Groups));
			this._yaf_NntpServers = new EntitySet<yaf_NntpServer>(new Action<yaf_NntpServer>(this.attach_yaf_NntpServers), new Action<yaf_NntpServer>(this.detach_yaf_NntpServers));
			this._yaf_Ranks = new EntitySet<yaf_Rank>(new Action<yaf_Rank>(this.attach_yaf_Ranks), new Action<yaf_Rank>(this.detach_yaf_Ranks));
			this._yaf_Registries = new EntitySet<yaf_Registry>(new Action<yaf_Registry>(this.attach_yaf_Registries), new Action<yaf_Registry>(this.detach_yaf_Registries));
			this._yaf_Smileys = new EntitySet<yaf_Smiley>(new Action<yaf_Smiley>(this.attach_yaf_Smileys), new Action<yaf_Smiley>(this.detach_yaf_Smileys));
			this._yaf_Users = new EntitySet<yaf_User>(new Action<yaf_User>(this.attach_yaf_Users), new Action<yaf_User>(this.detach_yaf_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoardID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BoardID
		{
			get
			{
				return this._BoardID;
			}
			set
			{
				if ((this._BoardID != value))
				{
					this.OnBoardIDChanging(value);
					this.SendPropertyChanging();
					this._BoardID = value;
					this.SendPropertyChanged("BoardID");
					this.OnBoardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowThreaded", DbType="Bit NOT NULL")]
		public bool AllowThreaded
		{
			get
			{
				return this._AllowThreaded;
			}
			set
			{
				if ((this._AllowThreaded != value))
				{
					this.OnAllowThreadedChanging(value);
					this.SendPropertyChanging();
					this._AllowThreaded = value;
					this.SendPropertyChanged("AllowThreaded");
					this.OnAllowThreadedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MembershipAppName", DbType="NVarChar(255)")]
		public string MembershipAppName
		{
			get
			{
				return this._MembershipAppName;
			}
			set
			{
				if ((this._MembershipAppName != value))
				{
					this.OnMembershipAppNameChanging(value);
					this.SendPropertyChanging();
					this._MembershipAppName = value;
					this.SendPropertyChanged("MembershipAppName");
					this.OnMembershipAppNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RolesAppName", DbType="NVarChar(255)")]
		public string RolesAppName
		{
			get
			{
				return this._RolesAppName;
			}
			set
			{
				if ((this._RolesAppName != value))
				{
					this.OnRolesAppNameChanging(value);
					this.SendPropertyChanging();
					this._RolesAppName = value;
					this.SendPropertyChanged("RolesAppName");
					this.OnRolesAppNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoardUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> BoardUID
		{
			get
			{
				return this._BoardUID;
			}
			set
			{
				if ((this._BoardUID != value))
				{
					this.OnBoardUIDChanging(value);
					this.SendPropertyChanging();
					this._BoardUID = value;
					this.SendPropertyChanged("BoardUID");
					this.OnBoardUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Board_yaf_AccessMask", Storage="_yaf_AccessMasks", ThisKey="BoardID", OtherKey="BoardID")]
		public EntitySet<yaf_AccessMask> yaf_AccessMasks
		{
			get
			{
				return this._yaf_AccessMasks;
			}
			set
			{
				this._yaf_AccessMasks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Board_yaf_Active", Storage="_yaf_Actives", ThisKey="BoardID", OtherKey="BoardID")]
		public EntitySet<yaf_Active> yaf_Actives
		{
			get
			{
				return this._yaf_Actives;
			}
			set
			{
				this._yaf_Actives.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Board_yaf_BannedIP", Storage="_yaf_BannedIPs", ThisKey="BoardID", OtherKey="BoardID")]
		public EntitySet<yaf_BannedIP> yaf_BannedIPs
		{
			get
			{
				return this._yaf_BannedIPs;
			}
			set
			{
				this._yaf_BannedIPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Board_yaf_BBCode", Storage="_yaf_BBCodes", ThisKey="BoardID", OtherKey="BoardID")]
		public EntitySet<yaf_BBCode> yaf_BBCodes
		{
			get
			{
				return this._yaf_BBCodes;
			}
			set
			{
				this._yaf_BBCodes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Board_yaf_Category", Storage="_yaf_Categories", ThisKey="BoardID", OtherKey="BoardID")]
		public EntitySet<yaf_Category> yaf_Categories
		{
			get
			{
				return this._yaf_Categories;
			}
			set
			{
				this._yaf_Categories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Board_yaf_Extension", Storage="_yaf_Extensions", ThisKey="BoardID", OtherKey="BoardId")]
		public EntitySet<yaf_Extension> yaf_Extensions
		{
			get
			{
				return this._yaf_Extensions;
			}
			set
			{
				this._yaf_Extensions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Board_yaf_Group", Storage="_yaf_Groups", ThisKey="BoardID", OtherKey="BoardID")]
		public EntitySet<yaf_Group> yaf_Groups
		{
			get
			{
				return this._yaf_Groups;
			}
			set
			{
				this._yaf_Groups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Board_yaf_NntpServer", Storage="_yaf_NntpServers", ThisKey="BoardID", OtherKey="BoardID")]
		public EntitySet<yaf_NntpServer> yaf_NntpServers
		{
			get
			{
				return this._yaf_NntpServers;
			}
			set
			{
				this._yaf_NntpServers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Board_yaf_Rank", Storage="_yaf_Ranks", ThisKey="BoardID", OtherKey="BoardID")]
		public EntitySet<yaf_Rank> yaf_Ranks
		{
			get
			{
				return this._yaf_Ranks;
			}
			set
			{
				this._yaf_Ranks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Board_yaf_Registry", Storage="_yaf_Registries", ThisKey="BoardID", OtherKey="BoardID")]
		public EntitySet<yaf_Registry> yaf_Registries
		{
			get
			{
				return this._yaf_Registries;
			}
			set
			{
				this._yaf_Registries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Board_yaf_Smiley", Storage="_yaf_Smileys", ThisKey="BoardID", OtherKey="BoardID")]
		public EntitySet<yaf_Smiley> yaf_Smileys
		{
			get
			{
				return this._yaf_Smileys;
			}
			set
			{
				this._yaf_Smileys.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Board_yaf_User", Storage="_yaf_Users", ThisKey="BoardID", OtherKey="BoardID")]
		public EntitySet<yaf_User> yaf_Users
		{
			get
			{
				return this._yaf_Users;
			}
			set
			{
				this._yaf_Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_yaf_AccessMasks(yaf_AccessMask entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Board = this;
		}
		
		private void detach_yaf_AccessMasks(yaf_AccessMask entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Board = null;
		}
		
		private void attach_yaf_Actives(yaf_Active entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Board = this;
		}
		
		private void detach_yaf_Actives(yaf_Active entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Board = null;
		}
		
		private void attach_yaf_BannedIPs(yaf_BannedIP entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Board = this;
		}
		
		private void detach_yaf_BannedIPs(yaf_BannedIP entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Board = null;
		}
		
		private void attach_yaf_BBCodes(yaf_BBCode entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Board = this;
		}
		
		private void detach_yaf_BBCodes(yaf_BBCode entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Board = null;
		}
		
		private void attach_yaf_Categories(yaf_Category entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Board = this;
		}
		
		private void detach_yaf_Categories(yaf_Category entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Board = null;
		}
		
		private void attach_yaf_Extensions(yaf_Extension entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Board = this;
		}
		
		private void detach_yaf_Extensions(yaf_Extension entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Board = null;
		}
		
		private void attach_yaf_Groups(yaf_Group entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Board = this;
		}
		
		private void detach_yaf_Groups(yaf_Group entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Board = null;
		}
		
		private void attach_yaf_NntpServers(yaf_NntpServer entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Board = this;
		}
		
		private void detach_yaf_NntpServers(yaf_NntpServer entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Board = null;
		}
		
		private void attach_yaf_Ranks(yaf_Rank entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Board = this;
		}
		
		private void detach_yaf_Ranks(yaf_Rank entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Board = null;
		}
		
		private void attach_yaf_Registries(yaf_Registry entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Board = this;
		}
		
		private void detach_yaf_Registries(yaf_Registry entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Board = null;
		}
		
		private void attach_yaf_Smileys(yaf_Smiley entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Board = this;
		}
		
		private void detach_yaf_Smileys(yaf_Smiley entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Board = null;
		}
		
		private void attach_yaf_Users(yaf_User entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Board = this;
		}
		
		private void detach_yaf_Users(yaf_User entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Board = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_Buddy")]
	public partial class yaf_Buddy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _FromUserID;
		
		private int _ToUserID;
		
		private bool _Approved;
		
		private System.DateTime _Requested;
		
		private EntityRef<yaf_User> _yaf_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFromUserIDChanging(int value);
    partial void OnFromUserIDChanged();
    partial void OnToUserIDChanging(int value);
    partial void OnToUserIDChanged();
    partial void OnApprovedChanging(bool value);
    partial void OnApprovedChanged();
    partial void OnRequestedChanging(System.DateTime value);
    partial void OnRequestedChanged();
    #endregion
		
		public yaf_Buddy()
		{
			this._yaf_User = default(EntityRef<yaf_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromUserID", DbType="Int NOT NULL")]
		public int FromUserID
		{
			get
			{
				return this._FromUserID;
			}
			set
			{
				if ((this._FromUserID != value))
				{
					if (this._yaf_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromUserIDChanging(value);
					this.SendPropertyChanging();
					this._FromUserID = value;
					this.SendPropertyChanged("FromUserID");
					this.OnFromUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToUserID", DbType="Int NOT NULL")]
		public int ToUserID
		{
			get
			{
				return this._ToUserID;
			}
			set
			{
				if ((this._ToUserID != value))
				{
					this.OnToUserIDChanging(value);
					this.SendPropertyChanging();
					this._ToUserID = value;
					this.SendPropertyChanged("ToUserID");
					this.OnToUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approved", DbType="Bit NOT NULL")]
		public bool Approved
		{
			get
			{
				return this._Approved;
			}
			set
			{
				if ((this._Approved != value))
				{
					this.OnApprovedChanging(value);
					this.SendPropertyChanging();
					this._Approved = value;
					this.SendPropertyChanged("Approved");
					this.OnApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Requested", DbType="DateTime NOT NULL")]
		public System.DateTime Requested
		{
			get
			{
				return this._Requested;
			}
			set
			{
				if ((this._Requested != value))
				{
					this.OnRequestedChanging(value);
					this.SendPropertyChanging();
					this._Requested = value;
					this.SendPropertyChanged("Requested");
					this.OnRequestedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_User_yaf_Buddy", Storage="_yaf_User", ThisKey="FromUserID", OtherKey="UserID", IsForeignKey=true)]
		public yaf_User yaf_User
		{
			get
			{
				return this._yaf_User.Entity;
			}
			set
			{
				yaf_User previousValue = this._yaf_User.Entity;
				if (((previousValue != value) 
							|| (this._yaf_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_User.Entity = null;
						previousValue.yaf_Buddies.Remove(this);
					}
					this._yaf_User.Entity = value;
					if ((value != null))
					{
						value.yaf_Buddies.Add(this);
						this._FromUserID = value.UserID;
					}
					else
					{
						this._FromUserID = default(int);
					}
					this.SendPropertyChanged("yaf_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_Category")]
	public partial class yaf_Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CategoryID;
		
		private int _BoardID;
		
		private string _Name;
		
		private string _CategoryImage;
		
		private short _SortOrder;
		
		private System.Nullable<int> _PollGroupID;
		
		private EntitySet<yaf_Forum> _yaf_Forums;
		
		private EntityRef<yaf_Board> _yaf_Board;
		
		private EntityRef<yaf_PollGroupCluster> _yaf_PollGroupCluster;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    partial void OnBoardIDChanging(int value);
    partial void OnBoardIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCategoryImageChanging(string value);
    partial void OnCategoryImageChanged();
    partial void OnSortOrderChanging(short value);
    partial void OnSortOrderChanged();
    partial void OnPollGroupIDChanging(System.Nullable<int> value);
    partial void OnPollGroupIDChanged();
    #endregion
		
		public yaf_Category()
		{
			this._yaf_Forums = new EntitySet<yaf_Forum>(new Action<yaf_Forum>(this.attach_yaf_Forums), new Action<yaf_Forum>(this.detach_yaf_Forums));
			this._yaf_Board = default(EntityRef<yaf_Board>);
			this._yaf_PollGroupCluster = default(EntityRef<yaf_PollGroupCluster>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoardID", DbType="Int NOT NULL")]
		public int BoardID
		{
			get
			{
				return this._BoardID;
			}
			set
			{
				if ((this._BoardID != value))
				{
					if (this._yaf_Board.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBoardIDChanging(value);
					this.SendPropertyChanging();
					this._BoardID = value;
					this.SendPropertyChanged("BoardID");
					this.OnBoardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryImage", DbType="NVarChar(255)")]
		public string CategoryImage
		{
			get
			{
				return this._CategoryImage;
			}
			set
			{
				if ((this._CategoryImage != value))
				{
					this.OnCategoryImageChanging(value);
					this.SendPropertyChanging();
					this._CategoryImage = value;
					this.SendPropertyChanged("CategoryImage");
					this.OnCategoryImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="SmallInt NOT NULL")]
		public short SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollGroupID", DbType="Int")]
		public System.Nullable<int> PollGroupID
		{
			get
			{
				return this._PollGroupID;
			}
			set
			{
				if ((this._PollGroupID != value))
				{
					if (this._yaf_PollGroupCluster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPollGroupIDChanging(value);
					this.SendPropertyChanging();
					this._PollGroupID = value;
					this.SendPropertyChanged("PollGroupID");
					this.OnPollGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Category_yaf_Forum", Storage="_yaf_Forums", ThisKey="CategoryID", OtherKey="CategoryID")]
		public EntitySet<yaf_Forum> yaf_Forums
		{
			get
			{
				return this._yaf_Forums;
			}
			set
			{
				this._yaf_Forums.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Board_yaf_Category", Storage="_yaf_Board", ThisKey="BoardID", OtherKey="BoardID", IsForeignKey=true)]
		public yaf_Board yaf_Board
		{
			get
			{
				return this._yaf_Board.Entity;
			}
			set
			{
				yaf_Board previousValue = this._yaf_Board.Entity;
				if (((previousValue != value) 
							|| (this._yaf_Board.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_Board.Entity = null;
						previousValue.yaf_Categories.Remove(this);
					}
					this._yaf_Board.Entity = value;
					if ((value != null))
					{
						value.yaf_Categories.Add(this);
						this._BoardID = value.BoardID;
					}
					else
					{
						this._BoardID = default(int);
					}
					this.SendPropertyChanged("yaf_Board");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_PollGroupCluster_yaf_Category", Storage="_yaf_PollGroupCluster", ThisKey="PollGroupID", OtherKey="PollGroupID", IsForeignKey=true)]
		public yaf_PollGroupCluster yaf_PollGroupCluster
		{
			get
			{
				return this._yaf_PollGroupCluster.Entity;
			}
			set
			{
				yaf_PollGroupCluster previousValue = this._yaf_PollGroupCluster.Entity;
				if (((previousValue != value) 
							|| (this._yaf_PollGroupCluster.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_PollGroupCluster.Entity = null;
						previousValue.yaf_Categories.Remove(this);
					}
					this._yaf_PollGroupCluster.Entity = value;
					if ((value != null))
					{
						value.yaf_Categories.Add(this);
						this._PollGroupID = value.PollGroupID;
					}
					else
					{
						this._PollGroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("yaf_PollGroupCluster");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_yaf_Forums(yaf_Forum entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Category = this;
		}
		
		private void detach_yaf_Forums(yaf_Forum entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_CheckEmail")]
	public partial class yaf_CheckEmail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CheckEmailID;
		
		private int _UserID;
		
		private string _Email;
		
		private System.DateTime _Created;
		
		private string _Hash;
		
		private EntityRef<yaf_User> _yaf_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCheckEmailIDChanging(int value);
    partial void OnCheckEmailIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnHashChanging(string value);
    partial void OnHashChanged();
    #endregion
		
		public yaf_CheckEmail()
		{
			this._yaf_User = default(EntityRef<yaf_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckEmailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CheckEmailID
		{
			get
			{
				return this._CheckEmailID;
			}
			set
			{
				if ((this._CheckEmailID != value))
				{
					this.OnCheckEmailIDChanging(value);
					this.SendPropertyChanging();
					this._CheckEmailID = value;
					this.SendPropertyChanged("CheckEmailID");
					this.OnCheckEmailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._yaf_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hash", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string Hash
		{
			get
			{
				return this._Hash;
			}
			set
			{
				if ((this._Hash != value))
				{
					this.OnHashChanging(value);
					this.SendPropertyChanging();
					this._Hash = value;
					this.SendPropertyChanged("Hash");
					this.OnHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_User_yaf_CheckEmail", Storage="_yaf_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public yaf_User yaf_User
		{
			get
			{
				return this._yaf_User.Entity;
			}
			set
			{
				yaf_User previousValue = this._yaf_User.Entity;
				if (((previousValue != value) 
							|| (this._yaf_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_User.Entity = null;
						previousValue.yaf_CheckEmails.Remove(this);
					}
					this._yaf_User.Entity = value;
					if ((value != null))
					{
						value.yaf_CheckEmails.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("yaf_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_Choice")]
	public partial class yaf_Choice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ChoiceID;
		
		private int _PollID;
		
		private string _Choice;
		
		private int _Votes;
		
		private string _ObjectPath;
		
		private string _MimeType;
		
		private EntityRef<yaf_Poll> _yaf_Poll;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChoiceIDChanging(int value);
    partial void OnChoiceIDChanged();
    partial void OnPollIDChanging(int value);
    partial void OnPollIDChanged();
    partial void OnChoiceChanging(string value);
    partial void OnChoiceChanged();
    partial void OnVotesChanging(int value);
    partial void OnVotesChanged();
    partial void OnObjectPathChanging(string value);
    partial void OnObjectPathChanged();
    partial void OnMimeTypeChanging(string value);
    partial void OnMimeTypeChanged();
    #endregion
		
		public yaf_Choice()
		{
			this._yaf_Poll = default(EntityRef<yaf_Poll>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChoiceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ChoiceID
		{
			get
			{
				return this._ChoiceID;
			}
			set
			{
				if ((this._ChoiceID != value))
				{
					this.OnChoiceIDChanging(value);
					this.SendPropertyChanging();
					this._ChoiceID = value;
					this.SendPropertyChanged("ChoiceID");
					this.OnChoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollID", DbType="Int NOT NULL")]
		public int PollID
		{
			get
			{
				return this._PollID;
			}
			set
			{
				if ((this._PollID != value))
				{
					if (this._yaf_Poll.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPollIDChanging(value);
					this.SendPropertyChanging();
					this._PollID = value;
					this.SendPropertyChanged("PollID");
					this.OnPollIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Choice", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Choice
		{
			get
			{
				return this._Choice;
			}
			set
			{
				if ((this._Choice != value))
				{
					this.OnChoiceChanging(value);
					this.SendPropertyChanging();
					this._Choice = value;
					this.SendPropertyChanged("Choice");
					this.OnChoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Votes", DbType="Int NOT NULL")]
		public int Votes
		{
			get
			{
				return this._Votes;
			}
			set
			{
				if ((this._Votes != value))
				{
					this.OnVotesChanging(value);
					this.SendPropertyChanging();
					this._Votes = value;
					this.SendPropertyChanged("Votes");
					this.OnVotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectPath", DbType="NVarChar(255)")]
		public string ObjectPath
		{
			get
			{
				return this._ObjectPath;
			}
			set
			{
				if ((this._ObjectPath != value))
				{
					this.OnObjectPathChanging(value);
					this.SendPropertyChanging();
					this._ObjectPath = value;
					this.SendPropertyChanged("ObjectPath");
					this.OnObjectPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MimeType", DbType="VarChar(50)")]
		public string MimeType
		{
			get
			{
				return this._MimeType;
			}
			set
			{
				if ((this._MimeType != value))
				{
					this.OnMimeTypeChanging(value);
					this.SendPropertyChanging();
					this._MimeType = value;
					this.SendPropertyChanged("MimeType");
					this.OnMimeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Poll_yaf_Choice", Storage="_yaf_Poll", ThisKey="PollID", OtherKey="PollID", IsForeignKey=true)]
		public yaf_Poll yaf_Poll
		{
			get
			{
				return this._yaf_Poll.Entity;
			}
			set
			{
				yaf_Poll previousValue = this._yaf_Poll.Entity;
				if (((previousValue != value) 
							|| (this._yaf_Poll.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_Poll.Entity = null;
						previousValue.yaf_Choices.Remove(this);
					}
					this._yaf_Poll.Entity = value;
					if ((value != null))
					{
						value.yaf_Choices.Add(this);
						this._PollID = value.PollID;
					}
					else
					{
						this._PollID = default(int);
					}
					this.SendPropertyChanged("yaf_Poll");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_EventLog")]
	public partial class yaf_EventLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EventLogID;
		
		private System.DateTime _EventTime;
		
		private System.Nullable<int> _UserID;
		
		private string _Source;
		
		private string _Description;
		
		private int _Type;
		
		private EntityRef<yaf_User> _yaf_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventLogIDChanging(int value);
    partial void OnEventLogIDChanged();
    partial void OnEventTimeChanging(System.DateTime value);
    partial void OnEventTimeChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    #endregion
		
		public yaf_EventLog()
		{
			this._yaf_User = default(EntityRef<yaf_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventLogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EventLogID
		{
			get
			{
				return this._EventLogID;
			}
			set
			{
				if ((this._EventLogID != value))
				{
					this.OnEventLogIDChanging(value);
					this.SendPropertyChanging();
					this._EventLogID = value;
					this.SendPropertyChanged("EventLogID");
					this.OnEventLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTime", DbType="DateTime NOT NULL")]
		public System.DateTime EventTime
		{
			get
			{
				return this._EventTime;
			}
			set
			{
				if ((this._EventTime != value))
				{
					this.OnEventTimeChanging(value);
					this.SendPropertyChanging();
					this._EventTime = value;
					this.SendPropertyChanged("EventTime");
					this.OnEventTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._yaf_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_User_yaf_EventLog", Storage="_yaf_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true, DeleteRule="CASCADE")]
		public yaf_User yaf_User
		{
			get
			{
				return this._yaf_User.Entity;
			}
			set
			{
				yaf_User previousValue = this._yaf_User.Entity;
				if (((previousValue != value) 
							|| (this._yaf_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_User.Entity = null;
						previousValue.yaf_EventLogs.Remove(this);
					}
					this._yaf_User.Entity = value;
					if ((value != null))
					{
						value.yaf_EventLogs.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("yaf_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_Extension")]
	public partial class yaf_Extension : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExtensionID;
		
		private int _BoardId;
		
		private string _Extension;
		
		private EntityRef<yaf_Board> _yaf_Board;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnBoardIdChanging(int value);
    partial void OnBoardIdChanged();
    partial void OnExtensionChanging(string value);
    partial void OnExtensionChanged();
    #endregion
		
		public yaf_Extension()
		{
			this._yaf_Board = default(EntityRef<yaf_Board>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtensionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoardId", DbType="Int NOT NULL")]
		public int BoardId
		{
			get
			{
				return this._BoardId;
			}
			set
			{
				if ((this._BoardId != value))
				{
					if (this._yaf_Board.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBoardIdChanging(value);
					this.SendPropertyChanging();
					this._BoardId = value;
					this.SendPropertyChanged("BoardId");
					this.OnBoardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extension", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					this.OnExtensionChanging(value);
					this.SendPropertyChanging();
					this._Extension = value;
					this.SendPropertyChanged("Extension");
					this.OnExtensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Board_yaf_Extension", Storage="_yaf_Board", ThisKey="BoardId", OtherKey="BoardID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public yaf_Board yaf_Board
		{
			get
			{
				return this._yaf_Board.Entity;
			}
			set
			{
				yaf_Board previousValue = this._yaf_Board.Entity;
				if (((previousValue != value) 
							|| (this._yaf_Board.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_Board.Entity = null;
						previousValue.yaf_Extensions.Remove(this);
					}
					this._yaf_Board.Entity = value;
					if ((value != null))
					{
						value.yaf_Extensions.Add(this);
						this._BoardId = value.BoardID;
					}
					else
					{
						this._BoardId = default(int);
					}
					this.SendPropertyChanged("yaf_Board");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_FavoriteTopic")]
	public partial class yaf_FavoriteTopic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _UserID;
		
		private int _TopicID;
		
		private EntityRef<yaf_Topic> _yaf_Topic;
		
		private EntityRef<yaf_User> _yaf_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnTopicIDChanging(int value);
    partial void OnTopicIDChanged();
    #endregion
		
		public yaf_FavoriteTopic()
		{
			this._yaf_Topic = default(EntityRef<yaf_Topic>);
			this._yaf_User = default(EntityRef<yaf_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._yaf_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicID", DbType="Int NOT NULL")]
		public int TopicID
		{
			get
			{
				return this._TopicID;
			}
			set
			{
				if ((this._TopicID != value))
				{
					if (this._yaf_Topic.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTopicIDChanging(value);
					this.SendPropertyChanging();
					this._TopicID = value;
					this.SendPropertyChanged("TopicID");
					this.OnTopicIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Topic_yaf_FavoriteTopic", Storage="_yaf_Topic", ThisKey="TopicID", OtherKey="TopicID", IsForeignKey=true)]
		public yaf_Topic yaf_Topic
		{
			get
			{
				return this._yaf_Topic.Entity;
			}
			set
			{
				yaf_Topic previousValue = this._yaf_Topic.Entity;
				if (((previousValue != value) 
							|| (this._yaf_Topic.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_Topic.Entity = null;
						previousValue.yaf_FavoriteTopics.Remove(this);
					}
					this._yaf_Topic.Entity = value;
					if ((value != null))
					{
						value.yaf_FavoriteTopics.Add(this);
						this._TopicID = value.TopicID;
					}
					else
					{
						this._TopicID = default(int);
					}
					this.SendPropertyChanged("yaf_Topic");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_User_yaf_FavoriteTopic", Storage="_yaf_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public yaf_User yaf_User
		{
			get
			{
				return this._yaf_User.Entity;
			}
			set
			{
				yaf_User previousValue = this._yaf_User.Entity;
				if (((previousValue != value) 
							|| (this._yaf_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_User.Entity = null;
						previousValue.yaf_FavoriteTopics.Remove(this);
					}
					this._yaf_User.Entity = value;
					if ((value != null))
					{
						value.yaf_FavoriteTopics.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("yaf_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_Forum")]
	public partial class yaf_Forum : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ForumID;
		
		private int _CategoryID;
		
		private System.Nullable<int> _ParentID;
		
		private string _Name;
		
		private string _Description;
		
		private short _SortOrder;
		
		private System.Nullable<System.DateTime> _LastPosted;
		
		private System.Nullable<int> _LastTopicID;
		
		private System.Nullable<int> _LastMessageID;
		
		private System.Nullable<int> _LastUserID;
		
		private string _LastUserName;
		
		private int _NumTopics;
		
		private int _NumPosts;
		
		private string _RemoteURL;
		
		private int _Flags;
		
		private System.Nullable<bool> _IsLocked;
		
		private System.Nullable<bool> _IsHidden;
		
		private System.Nullable<bool> _IsNoCount;
		
		private System.Nullable<bool> _IsModerated;
		
		private string _ThemeURL;
		
		private System.Nullable<int> _PollGroupID;
		
		private System.Nullable<int> _UserID;
		
		private string _ImageURL;
		
		private string _Styles;
		
		private EntitySet<yaf_Active> _yaf_Actives;
		
		private EntitySet<yaf_Forum> _yaf_Forums;
		
		private EntitySet<yaf_ForumAccess> _yaf_ForumAccesses;
		
		private EntitySet<yaf_NntpForum> _yaf_NntpForums;
		
		private EntitySet<yaf_Topic> _yaf_Topics;
		
		private EntitySet<yaf_UserForum> _yaf_UserForums;
		
		private EntitySet<yaf_WatchForum> _yaf_WatchForums;
		
		private EntityRef<yaf_Category> _yaf_Category;
		
		private EntityRef<yaf_Forum> _yaf_Forum1;
		
		private EntityRef<yaf_Message> _yaf_Message;
		
		private EntityRef<yaf_PollGroupCluster> _yaf_PollGroupCluster;
		
		private EntityRef<yaf_Topic> _yaf_Topic;
		
		private EntityRef<yaf_User> _yaf_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnForumIDChanging(int value);
    partial void OnForumIDChanged();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSortOrderChanging(short value);
    partial void OnSortOrderChanged();
    partial void OnLastPostedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastPostedChanged();
    partial void OnLastTopicIDChanging(System.Nullable<int> value);
    partial void OnLastTopicIDChanged();
    partial void OnLastMessageIDChanging(System.Nullable<int> value);
    partial void OnLastMessageIDChanged();
    partial void OnLastUserIDChanging(System.Nullable<int> value);
    partial void OnLastUserIDChanged();
    partial void OnLastUserNameChanging(string value);
    partial void OnLastUserNameChanged();
    partial void OnNumTopicsChanging(int value);
    partial void OnNumTopicsChanged();
    partial void OnNumPostsChanging(int value);
    partial void OnNumPostsChanged();
    partial void OnRemoteURLChanging(string value);
    partial void OnRemoteURLChanged();
    partial void OnFlagsChanging(int value);
    partial void OnFlagsChanged();
    partial void OnIsLockedChanging(System.Nullable<bool> value);
    partial void OnIsLockedChanged();
    partial void OnIsHiddenChanging(System.Nullable<bool> value);
    partial void OnIsHiddenChanged();
    partial void OnIsNoCountChanging(System.Nullable<bool> value);
    partial void OnIsNoCountChanged();
    partial void OnIsModeratedChanging(System.Nullable<bool> value);
    partial void OnIsModeratedChanged();
    partial void OnThemeURLChanging(string value);
    partial void OnThemeURLChanged();
    partial void OnPollGroupIDChanging(System.Nullable<int> value);
    partial void OnPollGroupIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnImageURLChanging(string value);
    partial void OnImageURLChanged();
    partial void OnStylesChanging(string value);
    partial void OnStylesChanged();
    #endregion
		
		public yaf_Forum()
		{
			this._yaf_Actives = new EntitySet<yaf_Active>(new Action<yaf_Active>(this.attach_yaf_Actives), new Action<yaf_Active>(this.detach_yaf_Actives));
			this._yaf_Forums = new EntitySet<yaf_Forum>(new Action<yaf_Forum>(this.attach_yaf_Forums), new Action<yaf_Forum>(this.detach_yaf_Forums));
			this._yaf_ForumAccesses = new EntitySet<yaf_ForumAccess>(new Action<yaf_ForumAccess>(this.attach_yaf_ForumAccesses), new Action<yaf_ForumAccess>(this.detach_yaf_ForumAccesses));
			this._yaf_NntpForums = new EntitySet<yaf_NntpForum>(new Action<yaf_NntpForum>(this.attach_yaf_NntpForums), new Action<yaf_NntpForum>(this.detach_yaf_NntpForums));
			this._yaf_Topics = new EntitySet<yaf_Topic>(new Action<yaf_Topic>(this.attach_yaf_Topics), new Action<yaf_Topic>(this.detach_yaf_Topics));
			this._yaf_UserForums = new EntitySet<yaf_UserForum>(new Action<yaf_UserForum>(this.attach_yaf_UserForums), new Action<yaf_UserForum>(this.detach_yaf_UserForums));
			this._yaf_WatchForums = new EntitySet<yaf_WatchForum>(new Action<yaf_WatchForum>(this.attach_yaf_WatchForums), new Action<yaf_WatchForum>(this.detach_yaf_WatchForums));
			this._yaf_Category = default(EntityRef<yaf_Category>);
			this._yaf_Forum1 = default(EntityRef<yaf_Forum>);
			this._yaf_Message = default(EntityRef<yaf_Message>);
			this._yaf_PollGroupCluster = default(EntityRef<yaf_PollGroupCluster>);
			this._yaf_Topic = default(EntityRef<yaf_Topic>);
			this._yaf_User = default(EntityRef<yaf_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ForumID
		{
			get
			{
				return this._ForumID;
			}
			set
			{
				if ((this._ForumID != value))
				{
					this.OnForumIDChanging(value);
					this.SendPropertyChanging();
					this._ForumID = value;
					this.SendPropertyChanged("ForumID");
					this.OnForumIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL")]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					if (this._yaf_Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._yaf_Forum1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="SmallInt NOT NULL")]
		public short SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPosted", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastPosted
		{
			get
			{
				return this._LastPosted;
			}
			set
			{
				if ((this._LastPosted != value))
				{
					this.OnLastPostedChanging(value);
					this.SendPropertyChanging();
					this._LastPosted = value;
					this.SendPropertyChanged("LastPosted");
					this.OnLastPostedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastTopicID", DbType="Int")]
		public System.Nullable<int> LastTopicID
		{
			get
			{
				return this._LastTopicID;
			}
			set
			{
				if ((this._LastTopicID != value))
				{
					if (this._yaf_Topic.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLastTopicIDChanging(value);
					this.SendPropertyChanging();
					this._LastTopicID = value;
					this.SendPropertyChanged("LastTopicID");
					this.OnLastTopicIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastMessageID", DbType="Int")]
		public System.Nullable<int> LastMessageID
		{
			get
			{
				return this._LastMessageID;
			}
			set
			{
				if ((this._LastMessageID != value))
				{
					if (this._yaf_Message.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLastMessageIDChanging(value);
					this.SendPropertyChanging();
					this._LastMessageID = value;
					this.SendPropertyChanged("LastMessageID");
					this.OnLastMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUserID", DbType="Int")]
		public System.Nullable<int> LastUserID
		{
			get
			{
				return this._LastUserID;
			}
			set
			{
				if ((this._LastUserID != value))
				{
					if (this._yaf_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLastUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastUserID = value;
					this.SendPropertyChanged("LastUserID");
					this.OnLastUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUserName", DbType="NVarChar(255)")]
		public string LastUserName
		{
			get
			{
				return this._LastUserName;
			}
			set
			{
				if ((this._LastUserName != value))
				{
					this.OnLastUserNameChanging(value);
					this.SendPropertyChanging();
					this._LastUserName = value;
					this.SendPropertyChanged("LastUserName");
					this.OnLastUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumTopics", DbType="Int NOT NULL")]
		public int NumTopics
		{
			get
			{
				return this._NumTopics;
			}
			set
			{
				if ((this._NumTopics != value))
				{
					this.OnNumTopicsChanging(value);
					this.SendPropertyChanging();
					this._NumTopics = value;
					this.SendPropertyChanged("NumTopics");
					this.OnNumTopicsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumPosts", DbType="Int NOT NULL")]
		public int NumPosts
		{
			get
			{
				return this._NumPosts;
			}
			set
			{
				if ((this._NumPosts != value))
				{
					this.OnNumPostsChanging(value);
					this.SendPropertyChanging();
					this._NumPosts = value;
					this.SendPropertyChanged("NumPosts");
					this.OnNumPostsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemoteURL", DbType="NVarChar(100)")]
		public string RemoteURL
		{
			get
			{
				return this._RemoteURL;
			}
			set
			{
				if ((this._RemoteURL != value))
				{
					this.OnRemoteURLChanging(value);
					this.SendPropertyChanging();
					this._RemoteURL = value;
					this.SendPropertyChanged("RemoteURL");
					this.OnRemoteURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flags", DbType="Int NOT NULL")]
		public int Flags
		{
			get
			{
				return this._Flags;
			}
			set
			{
				if ((this._Flags != value))
				{
					this.OnFlagsChanging(value);
					this.SendPropertyChanging();
					this._Flags = value;
					this.SendPropertyChanged("Flags");
					this.OnFlagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", AutoSync=AutoSync.Always, DbType="Bit", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHidden", AutoSync=AutoSync.Always, DbType="Bit", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsHidden
		{
			get
			{
				return this._IsHidden;
			}
			set
			{
				if ((this._IsHidden != value))
				{
					this.OnIsHiddenChanging(value);
					this.SendPropertyChanging();
					this._IsHidden = value;
					this.SendPropertyChanged("IsHidden");
					this.OnIsHiddenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNoCount", AutoSync=AutoSync.Always, DbType="Bit", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsNoCount
		{
			get
			{
				return this._IsNoCount;
			}
			set
			{
				if ((this._IsNoCount != value))
				{
					this.OnIsNoCountChanging(value);
					this.SendPropertyChanging();
					this._IsNoCount = value;
					this.SendPropertyChanged("IsNoCount");
					this.OnIsNoCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsModerated", AutoSync=AutoSync.Always, DbType="Bit", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsModerated
		{
			get
			{
				return this._IsModerated;
			}
			set
			{
				if ((this._IsModerated != value))
				{
					this.OnIsModeratedChanging(value);
					this.SendPropertyChanging();
					this._IsModerated = value;
					this.SendPropertyChanged("IsModerated");
					this.OnIsModeratedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThemeURL", DbType="NVarChar(50)")]
		public string ThemeURL
		{
			get
			{
				return this._ThemeURL;
			}
			set
			{
				if ((this._ThemeURL != value))
				{
					this.OnThemeURLChanging(value);
					this.SendPropertyChanging();
					this._ThemeURL = value;
					this.SendPropertyChanged("ThemeURL");
					this.OnThemeURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollGroupID", DbType="Int")]
		public System.Nullable<int> PollGroupID
		{
			get
			{
				return this._PollGroupID;
			}
			set
			{
				if ((this._PollGroupID != value))
				{
					if (this._yaf_PollGroupCluster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPollGroupIDChanging(value);
					this.SendPropertyChanging();
					this._PollGroupID = value;
					this.SendPropertyChanged("PollGroupID");
					this.OnPollGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageURL", DbType="NVarChar(128)")]
		public string ImageURL
		{
			get
			{
				return this._ImageURL;
			}
			set
			{
				if ((this._ImageURL != value))
				{
					this.OnImageURLChanging(value);
					this.SendPropertyChanging();
					this._ImageURL = value;
					this.SendPropertyChanged("ImageURL");
					this.OnImageURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Styles", DbType="NVarChar(255)")]
		public string Styles
		{
			get
			{
				return this._Styles;
			}
			set
			{
				if ((this._Styles != value))
				{
					this.OnStylesChanging(value);
					this.SendPropertyChanging();
					this._Styles = value;
					this.SendPropertyChanged("Styles");
					this.OnStylesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Forum_yaf_Active", Storage="_yaf_Actives", ThisKey="ForumID", OtherKey="ForumID")]
		public EntitySet<yaf_Active> yaf_Actives
		{
			get
			{
				return this._yaf_Actives;
			}
			set
			{
				this._yaf_Actives.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Forum_yaf_Forum", Storage="_yaf_Forums", ThisKey="ForumID", OtherKey="ParentID")]
		public EntitySet<yaf_Forum> yaf_Forums
		{
			get
			{
				return this._yaf_Forums;
			}
			set
			{
				this._yaf_Forums.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Forum_yaf_ForumAccess", Storage="_yaf_ForumAccesses", ThisKey="ForumID", OtherKey="ForumID")]
		public EntitySet<yaf_ForumAccess> yaf_ForumAccesses
		{
			get
			{
				return this._yaf_ForumAccesses;
			}
			set
			{
				this._yaf_ForumAccesses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Forum_yaf_NntpForum", Storage="_yaf_NntpForums", ThisKey="ForumID", OtherKey="ForumID")]
		public EntitySet<yaf_NntpForum> yaf_NntpForums
		{
			get
			{
				return this._yaf_NntpForums;
			}
			set
			{
				this._yaf_NntpForums.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Forum_yaf_Topic", Storage="_yaf_Topics", ThisKey="ForumID", OtherKey="ForumID")]
		public EntitySet<yaf_Topic> yaf_Topics
		{
			get
			{
				return this._yaf_Topics;
			}
			set
			{
				this._yaf_Topics.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Forum_yaf_UserForum", Storage="_yaf_UserForums", ThisKey="ForumID", OtherKey="ForumID")]
		public EntitySet<yaf_UserForum> yaf_UserForums
		{
			get
			{
				return this._yaf_UserForums;
			}
			set
			{
				this._yaf_UserForums.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Forum_yaf_WatchForum", Storage="_yaf_WatchForums", ThisKey="ForumID", OtherKey="ForumID")]
		public EntitySet<yaf_WatchForum> yaf_WatchForums
		{
			get
			{
				return this._yaf_WatchForums;
			}
			set
			{
				this._yaf_WatchForums.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Category_yaf_Forum", Storage="_yaf_Category", ThisKey="CategoryID", OtherKey="CategoryID", IsForeignKey=true)]
		public yaf_Category yaf_Category
		{
			get
			{
				return this._yaf_Category.Entity;
			}
			set
			{
				yaf_Category previousValue = this._yaf_Category.Entity;
				if (((previousValue != value) 
							|| (this._yaf_Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_Category.Entity = null;
						previousValue.yaf_Forums.Remove(this);
					}
					this._yaf_Category.Entity = value;
					if ((value != null))
					{
						value.yaf_Forums.Add(this);
						this._CategoryID = value.CategoryID;
					}
					else
					{
						this._CategoryID = default(int);
					}
					this.SendPropertyChanged("yaf_Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Forum_yaf_Forum", Storage="_yaf_Forum1", ThisKey="ParentID", OtherKey="ForumID", IsForeignKey=true)]
		public yaf_Forum yaf_Forum1
		{
			get
			{
				return this._yaf_Forum1.Entity;
			}
			set
			{
				yaf_Forum previousValue = this._yaf_Forum1.Entity;
				if (((previousValue != value) 
							|| (this._yaf_Forum1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_Forum1.Entity = null;
						previousValue.yaf_Forums.Remove(this);
					}
					this._yaf_Forum1.Entity = value;
					if ((value != null))
					{
						value.yaf_Forums.Add(this);
						this._ParentID = value.ForumID;
					}
					else
					{
						this._ParentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("yaf_Forum1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Message_yaf_Forum", Storage="_yaf_Message", ThisKey="LastMessageID", OtherKey="MessageID", IsForeignKey=true)]
		public yaf_Message yaf_Message
		{
			get
			{
				return this._yaf_Message.Entity;
			}
			set
			{
				yaf_Message previousValue = this._yaf_Message.Entity;
				if (((previousValue != value) 
							|| (this._yaf_Message.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_Message.Entity = null;
						previousValue.yaf_Forums.Remove(this);
					}
					this._yaf_Message.Entity = value;
					if ((value != null))
					{
						value.yaf_Forums.Add(this);
						this._LastMessageID = value.MessageID;
					}
					else
					{
						this._LastMessageID = default(Nullable<int>);
					}
					this.SendPropertyChanged("yaf_Message");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_PollGroupCluster_yaf_Forum", Storage="_yaf_PollGroupCluster", ThisKey="PollGroupID", OtherKey="PollGroupID", IsForeignKey=true)]
		public yaf_PollGroupCluster yaf_PollGroupCluster
		{
			get
			{
				return this._yaf_PollGroupCluster.Entity;
			}
			set
			{
				yaf_PollGroupCluster previousValue = this._yaf_PollGroupCluster.Entity;
				if (((previousValue != value) 
							|| (this._yaf_PollGroupCluster.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_PollGroupCluster.Entity = null;
						previousValue.yaf_Forums.Remove(this);
					}
					this._yaf_PollGroupCluster.Entity = value;
					if ((value != null))
					{
						value.yaf_Forums.Add(this);
						this._PollGroupID = value.PollGroupID;
					}
					else
					{
						this._PollGroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("yaf_PollGroupCluster");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Topic_yaf_Forum", Storage="_yaf_Topic", ThisKey="LastTopicID", OtherKey="TopicID", IsForeignKey=true)]
		public yaf_Topic yaf_Topic
		{
			get
			{
				return this._yaf_Topic.Entity;
			}
			set
			{
				yaf_Topic previousValue = this._yaf_Topic.Entity;
				if (((previousValue != value) 
							|| (this._yaf_Topic.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_Topic.Entity = null;
						previousValue.yaf_Forums.Remove(this);
					}
					this._yaf_Topic.Entity = value;
					if ((value != null))
					{
						value.yaf_Forums.Add(this);
						this._LastTopicID = value.TopicID;
					}
					else
					{
						this._LastTopicID = default(Nullable<int>);
					}
					this.SendPropertyChanged("yaf_Topic");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_User_yaf_Forum", Storage="_yaf_User", ThisKey="LastUserID", OtherKey="UserID", IsForeignKey=true)]
		public yaf_User yaf_User
		{
			get
			{
				return this._yaf_User.Entity;
			}
			set
			{
				yaf_User previousValue = this._yaf_User.Entity;
				if (((previousValue != value) 
							|| (this._yaf_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_User.Entity = null;
						previousValue.yaf_Forums.Remove(this);
					}
					this._yaf_User.Entity = value;
					if ((value != null))
					{
						value.yaf_Forums.Add(this);
						this._LastUserID = value.UserID;
					}
					else
					{
						this._LastUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("yaf_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_yaf_Actives(yaf_Active entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Forum = this;
		}
		
		private void detach_yaf_Actives(yaf_Active entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Forum = null;
		}
		
		private void attach_yaf_Forums(yaf_Forum entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Forum1 = this;
		}
		
		private void detach_yaf_Forums(yaf_Forum entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Forum1 = null;
		}
		
		private void attach_yaf_ForumAccesses(yaf_ForumAccess entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Forum = this;
		}
		
		private void detach_yaf_ForumAccesses(yaf_ForumAccess entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Forum = null;
		}
		
		private void attach_yaf_NntpForums(yaf_NntpForum entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Forum = this;
		}
		
		private void detach_yaf_NntpForums(yaf_NntpForum entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Forum = null;
		}
		
		private void attach_yaf_Topics(yaf_Topic entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Forum = this;
		}
		
		private void detach_yaf_Topics(yaf_Topic entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Forum = null;
		}
		
		private void attach_yaf_UserForums(yaf_UserForum entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Forum = this;
		}
		
		private void detach_yaf_UserForums(yaf_UserForum entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Forum = null;
		}
		
		private void attach_yaf_WatchForums(yaf_WatchForum entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Forum = this;
		}
		
		private void detach_yaf_WatchForums(yaf_WatchForum entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Forum = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_ForumAccess")]
	public partial class yaf_ForumAccess : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GroupID;
		
		private int _ForumID;
		
		private int _AccessMaskID;
		
		private EntityRef<yaf_AccessMask> _yaf_AccessMask;
		
		private EntityRef<yaf_Forum> _yaf_Forum;
		
		private EntityRef<yaf_Group> _yaf_Group;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    partial void OnForumIDChanging(int value);
    partial void OnForumIDChanged();
    partial void OnAccessMaskIDChanging(int value);
    partial void OnAccessMaskIDChanged();
    #endregion
		
		public yaf_ForumAccess()
		{
			this._yaf_AccessMask = default(EntityRef<yaf_AccessMask>);
			this._yaf_Forum = default(EntityRef<yaf_Forum>);
			this._yaf_Group = default(EntityRef<yaf_Group>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					if (this._yaf_Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ForumID
		{
			get
			{
				return this._ForumID;
			}
			set
			{
				if ((this._ForumID != value))
				{
					if (this._yaf_Forum.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForumIDChanging(value);
					this.SendPropertyChanging();
					this._ForumID = value;
					this.SendPropertyChanged("ForumID");
					this.OnForumIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessMaskID", DbType="Int NOT NULL")]
		public int AccessMaskID
		{
			get
			{
				return this._AccessMaskID;
			}
			set
			{
				if ((this._AccessMaskID != value))
				{
					if (this._yaf_AccessMask.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccessMaskIDChanging(value);
					this.SendPropertyChanging();
					this._AccessMaskID = value;
					this.SendPropertyChanged("AccessMaskID");
					this.OnAccessMaskIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_AccessMask_yaf_ForumAccess", Storage="_yaf_AccessMask", ThisKey="AccessMaskID", OtherKey="AccessMaskID", IsForeignKey=true)]
		public yaf_AccessMask yaf_AccessMask
		{
			get
			{
				return this._yaf_AccessMask.Entity;
			}
			set
			{
				yaf_AccessMask previousValue = this._yaf_AccessMask.Entity;
				if (((previousValue != value) 
							|| (this._yaf_AccessMask.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_AccessMask.Entity = null;
						previousValue.yaf_ForumAccesses.Remove(this);
					}
					this._yaf_AccessMask.Entity = value;
					if ((value != null))
					{
						value.yaf_ForumAccesses.Add(this);
						this._AccessMaskID = value.AccessMaskID;
					}
					else
					{
						this._AccessMaskID = default(int);
					}
					this.SendPropertyChanged("yaf_AccessMask");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Forum_yaf_ForumAccess", Storage="_yaf_Forum", ThisKey="ForumID", OtherKey="ForumID", IsForeignKey=true)]
		public yaf_Forum yaf_Forum
		{
			get
			{
				return this._yaf_Forum.Entity;
			}
			set
			{
				yaf_Forum previousValue = this._yaf_Forum.Entity;
				if (((previousValue != value) 
							|| (this._yaf_Forum.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_Forum.Entity = null;
						previousValue.yaf_ForumAccesses.Remove(this);
					}
					this._yaf_Forum.Entity = value;
					if ((value != null))
					{
						value.yaf_ForumAccesses.Add(this);
						this._ForumID = value.ForumID;
					}
					else
					{
						this._ForumID = default(int);
					}
					this.SendPropertyChanged("yaf_Forum");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Group_yaf_ForumAccess", Storage="_yaf_Group", ThisKey="GroupID", OtherKey="GroupID", IsForeignKey=true)]
		public yaf_Group yaf_Group
		{
			get
			{
				return this._yaf_Group.Entity;
			}
			set
			{
				yaf_Group previousValue = this._yaf_Group.Entity;
				if (((previousValue != value) 
							|| (this._yaf_Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_Group.Entity = null;
						previousValue.yaf_ForumAccesses.Remove(this);
					}
					this._yaf_Group.Entity = value;
					if ((value != null))
					{
						value.yaf_ForumAccesses.Add(this);
						this._GroupID = value.GroupID;
					}
					else
					{
						this._GroupID = default(int);
					}
					this.SendPropertyChanged("yaf_Group");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_Group")]
	public partial class yaf_Group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GroupID;
		
		private int _BoardID;
		
		private string _Name;
		
		private int _Flags;
		
		private System.Nullable<int> _PMLimit;
		
		private string _Style;
		
		private short _SortOrder;
		
		private string _Description;
		
		private int _UsrSigChars;
		
		private string _UsrSigBBCodes;
		
		private string _UsrSigHTMLTags;
		
		private int _UsrAlbums;
		
		private int _UsrAlbumImages;
		
		private EntitySet<yaf_ForumAccess> _yaf_ForumAccesses;
		
		private EntitySet<yaf_UserGroup> _yaf_UserGroups;
		
		private EntityRef<yaf_Board> _yaf_Board;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    partial void OnBoardIDChanging(int value);
    partial void OnBoardIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFlagsChanging(int value);
    partial void OnFlagsChanged();
    partial void OnPMLimitChanging(System.Nullable<int> value);
    partial void OnPMLimitChanged();
    partial void OnStyleChanging(string value);
    partial void OnStyleChanged();
    partial void OnSortOrderChanging(short value);
    partial void OnSortOrderChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUsrSigCharsChanging(int value);
    partial void OnUsrSigCharsChanged();
    partial void OnUsrSigBBCodesChanging(string value);
    partial void OnUsrSigBBCodesChanged();
    partial void OnUsrSigHTMLTagsChanging(string value);
    partial void OnUsrSigHTMLTagsChanged();
    partial void OnUsrAlbumsChanging(int value);
    partial void OnUsrAlbumsChanged();
    partial void OnUsrAlbumImagesChanging(int value);
    partial void OnUsrAlbumImagesChanged();
    #endregion
		
		public yaf_Group()
		{
			this._yaf_ForumAccesses = new EntitySet<yaf_ForumAccess>(new Action<yaf_ForumAccess>(this.attach_yaf_ForumAccesses), new Action<yaf_ForumAccess>(this.detach_yaf_ForumAccesses));
			this._yaf_UserGroups = new EntitySet<yaf_UserGroup>(new Action<yaf_UserGroup>(this.attach_yaf_UserGroups), new Action<yaf_UserGroup>(this.detach_yaf_UserGroups));
			this._yaf_Board = default(EntityRef<yaf_Board>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoardID", DbType="Int NOT NULL")]
		public int BoardID
		{
			get
			{
				return this._BoardID;
			}
			set
			{
				if ((this._BoardID != value))
				{
					if (this._yaf_Board.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBoardIDChanging(value);
					this.SendPropertyChanging();
					this._BoardID = value;
					this.SendPropertyChanged("BoardID");
					this.OnBoardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flags", DbType="Int NOT NULL")]
		public int Flags
		{
			get
			{
				return this._Flags;
			}
			set
			{
				if ((this._Flags != value))
				{
					this.OnFlagsChanging(value);
					this.SendPropertyChanging();
					this._Flags = value;
					this.SendPropertyChanged("Flags");
					this.OnFlagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PMLimit", DbType="Int")]
		public System.Nullable<int> PMLimit
		{
			get
			{
				return this._PMLimit;
			}
			set
			{
				if ((this._PMLimit != value))
				{
					this.OnPMLimitChanging(value);
					this.SendPropertyChanging();
					this._PMLimit = value;
					this.SendPropertyChanged("PMLimit");
					this.OnPMLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Style", DbType="NVarChar(255)")]
		public string Style
		{
			get
			{
				return this._Style;
			}
			set
			{
				if ((this._Style != value))
				{
					this.OnStyleChanging(value);
					this.SendPropertyChanging();
					this._Style = value;
					this.SendPropertyChanged("Style");
					this.OnStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="SmallInt NOT NULL")]
		public short SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(128)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsrSigChars", DbType="Int NOT NULL")]
		public int UsrSigChars
		{
			get
			{
				return this._UsrSigChars;
			}
			set
			{
				if ((this._UsrSigChars != value))
				{
					this.OnUsrSigCharsChanging(value);
					this.SendPropertyChanging();
					this._UsrSigChars = value;
					this.SendPropertyChanged("UsrSigChars");
					this.OnUsrSigCharsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsrSigBBCodes", DbType="NVarChar(255)")]
		public string UsrSigBBCodes
		{
			get
			{
				return this._UsrSigBBCodes;
			}
			set
			{
				if ((this._UsrSigBBCodes != value))
				{
					this.OnUsrSigBBCodesChanging(value);
					this.SendPropertyChanging();
					this._UsrSigBBCodes = value;
					this.SendPropertyChanged("UsrSigBBCodes");
					this.OnUsrSigBBCodesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsrSigHTMLTags", DbType="NVarChar(255)")]
		public string UsrSigHTMLTags
		{
			get
			{
				return this._UsrSigHTMLTags;
			}
			set
			{
				if ((this._UsrSigHTMLTags != value))
				{
					this.OnUsrSigHTMLTagsChanging(value);
					this.SendPropertyChanging();
					this._UsrSigHTMLTags = value;
					this.SendPropertyChanged("UsrSigHTMLTags");
					this.OnUsrSigHTMLTagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsrAlbums", DbType="Int NOT NULL")]
		public int UsrAlbums
		{
			get
			{
				return this._UsrAlbums;
			}
			set
			{
				if ((this._UsrAlbums != value))
				{
					this.OnUsrAlbumsChanging(value);
					this.SendPropertyChanging();
					this._UsrAlbums = value;
					this.SendPropertyChanged("UsrAlbums");
					this.OnUsrAlbumsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsrAlbumImages", DbType="Int NOT NULL")]
		public int UsrAlbumImages
		{
			get
			{
				return this._UsrAlbumImages;
			}
			set
			{
				if ((this._UsrAlbumImages != value))
				{
					this.OnUsrAlbumImagesChanging(value);
					this.SendPropertyChanging();
					this._UsrAlbumImages = value;
					this.SendPropertyChanged("UsrAlbumImages");
					this.OnUsrAlbumImagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Group_yaf_ForumAccess", Storage="_yaf_ForumAccesses", ThisKey="GroupID", OtherKey="GroupID")]
		public EntitySet<yaf_ForumAccess> yaf_ForumAccesses
		{
			get
			{
				return this._yaf_ForumAccesses;
			}
			set
			{
				this._yaf_ForumAccesses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Group_yaf_UserGroup", Storage="_yaf_UserGroups", ThisKey="GroupID", OtherKey="GroupID")]
		public EntitySet<yaf_UserGroup> yaf_UserGroups
		{
			get
			{
				return this._yaf_UserGroups;
			}
			set
			{
				this._yaf_UserGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Board_yaf_Group", Storage="_yaf_Board", ThisKey="BoardID", OtherKey="BoardID", IsForeignKey=true)]
		public yaf_Board yaf_Board
		{
			get
			{
				return this._yaf_Board.Entity;
			}
			set
			{
				yaf_Board previousValue = this._yaf_Board.Entity;
				if (((previousValue != value) 
							|| (this._yaf_Board.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_Board.Entity = null;
						previousValue.yaf_Groups.Remove(this);
					}
					this._yaf_Board.Entity = value;
					if ((value != null))
					{
						value.yaf_Groups.Add(this);
						this._BoardID = value.BoardID;
					}
					else
					{
						this._BoardID = default(int);
					}
					this.SendPropertyChanged("yaf_Board");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_yaf_ForumAccesses(yaf_ForumAccess entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Group = this;
		}
		
		private void detach_yaf_ForumAccesses(yaf_ForumAccess entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Group = null;
		}
		
		private void attach_yaf_UserGroups(yaf_UserGroup entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Group = this;
		}
		
		private void detach_yaf_UserGroups(yaf_UserGroup entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Group = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_GroupMedal")]
	public partial class yaf_GroupMedal
	{
		
		private int _GroupID;
		
		private int _MedalID;
		
		private string _Message;
		
		private bool _Hide;
		
		private bool _OnlyRibbon;
		
		private byte _SortOrder;
		
		public yaf_GroupMedal()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int NOT NULL")]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this._GroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedalID", DbType="Int NOT NULL")]
		public int MedalID
		{
			get
			{
				return this._MedalID;
			}
			set
			{
				if ((this._MedalID != value))
				{
					this._MedalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(100)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hide", DbType="Bit NOT NULL")]
		public bool Hide
		{
			get
			{
				return this._Hide;
			}
			set
			{
				if ((this._Hide != value))
				{
					this._Hide = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnlyRibbon", DbType="Bit NOT NULL")]
		public bool OnlyRibbon
		{
			get
			{
				return this._OnlyRibbon;
			}
			set
			{
				if ((this._OnlyRibbon != value))
				{
					this._OnlyRibbon = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="TinyInt NOT NULL")]
		public byte SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this._SortOrder = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_IgnoreUser")]
	public partial class yaf_IgnoreUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private int _IgnoredUserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnIgnoredUserIDChanging(int value);
    partial void OnIgnoredUserIDChanged();
    #endregion
		
		public yaf_IgnoreUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IgnoredUserID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IgnoredUserID
		{
			get
			{
				return this._IgnoredUserID;
			}
			set
			{
				if ((this._IgnoredUserID != value))
				{
					this.OnIgnoredUserIDChanging(value);
					this.SendPropertyChanging();
					this._IgnoredUserID = value;
					this.SendPropertyChanged("IgnoredUserID");
					this.OnIgnoredUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_Mail")]
	public partial class yaf_Mail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MailID;
		
		private string _FromUser;
		
		private string _FromUserName;
		
		private string _ToUser;
		
		private string _ToUserName;
		
		private System.DateTime _Created;
		
		private string _Subject;
		
		private string _Body;
		
		private string _BodyHtml;
		
		private int _SendTries;
		
		private System.Nullable<System.DateTime> _SendAttempt;
		
		private System.Nullable<int> _ProcessID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMailIDChanging(int value);
    partial void OnMailIDChanged();
    partial void OnFromUserChanging(string value);
    partial void OnFromUserChanged();
    partial void OnFromUserNameChanging(string value);
    partial void OnFromUserNameChanged();
    partial void OnToUserChanging(string value);
    partial void OnToUserChanged();
    partial void OnToUserNameChanging(string value);
    partial void OnToUserNameChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnBodyHtmlChanging(string value);
    partial void OnBodyHtmlChanged();
    partial void OnSendTriesChanging(int value);
    partial void OnSendTriesChanged();
    partial void OnSendAttemptChanging(System.Nullable<System.DateTime> value);
    partial void OnSendAttemptChanged();
    partial void OnProcessIDChanging(System.Nullable<int> value);
    partial void OnProcessIDChanged();
    #endregion
		
		public yaf_Mail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MailID
		{
			get
			{
				return this._MailID;
			}
			set
			{
				if ((this._MailID != value))
				{
					this.OnMailIDChanging(value);
					this.SendPropertyChanging();
					this._MailID = value;
					this.SendPropertyChanged("MailID");
					this.OnMailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromUser", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FromUser
		{
			get
			{
				return this._FromUser;
			}
			set
			{
				if ((this._FromUser != value))
				{
					this.OnFromUserChanging(value);
					this.SendPropertyChanging();
					this._FromUser = value;
					this.SendPropertyChanged("FromUser");
					this.OnFromUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromUserName", DbType="NVarChar(255)")]
		public string FromUserName
		{
			get
			{
				return this._FromUserName;
			}
			set
			{
				if ((this._FromUserName != value))
				{
					this.OnFromUserNameChanging(value);
					this.SendPropertyChanging();
					this._FromUserName = value;
					this.SendPropertyChanged("FromUserName");
					this.OnFromUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToUser", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ToUser
		{
			get
			{
				return this._ToUser;
			}
			set
			{
				if ((this._ToUser != value))
				{
					this.OnToUserChanging(value);
					this.SendPropertyChanging();
					this._ToUser = value;
					this.SendPropertyChanged("ToUser");
					this.OnToUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToUserName", DbType="NVarChar(255)")]
		public string ToUserName
		{
			get
			{
				return this._ToUserName;
			}
			set
			{
				if ((this._ToUserName != value))
				{
					this.OnToUserNameChanging(value);
					this.SendPropertyChanging();
					this._ToUserName = value;
					this.SendPropertyChanged("ToUserName");
					this.OnToUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BodyHtml", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string BodyHtml
		{
			get
			{
				return this._BodyHtml;
			}
			set
			{
				if ((this._BodyHtml != value))
				{
					this.OnBodyHtmlChanging(value);
					this.SendPropertyChanging();
					this._BodyHtml = value;
					this.SendPropertyChanged("BodyHtml");
					this.OnBodyHtmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendTries", DbType="Int NOT NULL")]
		public int SendTries
		{
			get
			{
				return this._SendTries;
			}
			set
			{
				if ((this._SendTries != value))
				{
					this.OnSendTriesChanging(value);
					this.SendPropertyChanging();
					this._SendTries = value;
					this.SendPropertyChanged("SendTries");
					this.OnSendTriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendAttempt", DbType="DateTime")]
		public System.Nullable<System.DateTime> SendAttempt
		{
			get
			{
				return this._SendAttempt;
			}
			set
			{
				if ((this._SendAttempt != value))
				{
					this.OnSendAttemptChanging(value);
					this.SendPropertyChanging();
					this._SendAttempt = value;
					this.SendPropertyChanged("SendAttempt");
					this.OnSendAttemptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessID", DbType="Int")]
		public System.Nullable<int> ProcessID
		{
			get
			{
				return this._ProcessID;
			}
			set
			{
				if ((this._ProcessID != value))
				{
					this.OnProcessIDChanging(value);
					this.SendPropertyChanging();
					this._ProcessID = value;
					this.SendPropertyChanged("ProcessID");
					this.OnProcessIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_Medal")]
	public partial class yaf_Medal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BoardID;
		
		private int _MedalID;
		
		private string _Name;
		
		private string _Description;
		
		private string _Message;
		
		private string _Category;
		
		private string _MedalURL;
		
		private string _RibbonURL;
		
		private string _SmallMedalURL;
		
		private string _SmallRibbonURL;
		
		private short _SmallMedalWidth;
		
		private short _SmallMedalHeight;
		
		private System.Nullable<short> _SmallRibbonWidth;
		
		private System.Nullable<short> _SmallRibbonHeight;
		
		private byte _SortOrder;
		
		private int _Flags;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBoardIDChanging(int value);
    partial void OnBoardIDChanged();
    partial void OnMedalIDChanging(int value);
    partial void OnMedalIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnMedalURLChanging(string value);
    partial void OnMedalURLChanged();
    partial void OnRibbonURLChanging(string value);
    partial void OnRibbonURLChanged();
    partial void OnSmallMedalURLChanging(string value);
    partial void OnSmallMedalURLChanged();
    partial void OnSmallRibbonURLChanging(string value);
    partial void OnSmallRibbonURLChanged();
    partial void OnSmallMedalWidthChanging(short value);
    partial void OnSmallMedalWidthChanged();
    partial void OnSmallMedalHeightChanging(short value);
    partial void OnSmallMedalHeightChanged();
    partial void OnSmallRibbonWidthChanging(System.Nullable<short> value);
    partial void OnSmallRibbonWidthChanged();
    partial void OnSmallRibbonHeightChanging(System.Nullable<short> value);
    partial void OnSmallRibbonHeightChanged();
    partial void OnSortOrderChanging(byte value);
    partial void OnSortOrderChanged();
    partial void OnFlagsChanging(int value);
    partial void OnFlagsChanged();
    #endregion
		
		public yaf_Medal()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoardID", DbType="Int NOT NULL")]
		public int BoardID
		{
			get
			{
				return this._BoardID;
			}
			set
			{
				if ((this._BoardID != value))
				{
					this.OnBoardIDChanging(value);
					this.SendPropertyChanging();
					this._BoardID = value;
					this.SendPropertyChanged("BoardID");
					this.OnBoardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedalID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MedalID
		{
			get
			{
				return this._MedalID;
			}
			set
			{
				if ((this._MedalID != value))
				{
					this.OnMedalIDChanging(value);
					this.SendPropertyChanging();
					this._MedalID = value;
					this.SendPropertyChanged("MedalID");
					this.OnMedalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(50)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedalURL", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string MedalURL
		{
			get
			{
				return this._MedalURL;
			}
			set
			{
				if ((this._MedalURL != value))
				{
					this.OnMedalURLChanging(value);
					this.SendPropertyChanging();
					this._MedalURL = value;
					this.SendPropertyChanged("MedalURL");
					this.OnMedalURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RibbonURL", DbType="NVarChar(250)")]
		public string RibbonURL
		{
			get
			{
				return this._RibbonURL;
			}
			set
			{
				if ((this._RibbonURL != value))
				{
					this.OnRibbonURLChanging(value);
					this.SendPropertyChanging();
					this._RibbonURL = value;
					this.SendPropertyChanged("RibbonURL");
					this.OnRibbonURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmallMedalURL", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string SmallMedalURL
		{
			get
			{
				return this._SmallMedalURL;
			}
			set
			{
				if ((this._SmallMedalURL != value))
				{
					this.OnSmallMedalURLChanging(value);
					this.SendPropertyChanging();
					this._SmallMedalURL = value;
					this.SendPropertyChanged("SmallMedalURL");
					this.OnSmallMedalURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmallRibbonURL", DbType="NVarChar(250)")]
		public string SmallRibbonURL
		{
			get
			{
				return this._SmallRibbonURL;
			}
			set
			{
				if ((this._SmallRibbonURL != value))
				{
					this.OnSmallRibbonURLChanging(value);
					this.SendPropertyChanging();
					this._SmallRibbonURL = value;
					this.SendPropertyChanged("SmallRibbonURL");
					this.OnSmallRibbonURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmallMedalWidth", DbType="SmallInt NOT NULL")]
		public short SmallMedalWidth
		{
			get
			{
				return this._SmallMedalWidth;
			}
			set
			{
				if ((this._SmallMedalWidth != value))
				{
					this.OnSmallMedalWidthChanging(value);
					this.SendPropertyChanging();
					this._SmallMedalWidth = value;
					this.SendPropertyChanged("SmallMedalWidth");
					this.OnSmallMedalWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmallMedalHeight", DbType="SmallInt NOT NULL")]
		public short SmallMedalHeight
		{
			get
			{
				return this._SmallMedalHeight;
			}
			set
			{
				if ((this._SmallMedalHeight != value))
				{
					this.OnSmallMedalHeightChanging(value);
					this.SendPropertyChanging();
					this._SmallMedalHeight = value;
					this.SendPropertyChanged("SmallMedalHeight");
					this.OnSmallMedalHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmallRibbonWidth", DbType="SmallInt")]
		public System.Nullable<short> SmallRibbonWidth
		{
			get
			{
				return this._SmallRibbonWidth;
			}
			set
			{
				if ((this._SmallRibbonWidth != value))
				{
					this.OnSmallRibbonWidthChanging(value);
					this.SendPropertyChanging();
					this._SmallRibbonWidth = value;
					this.SendPropertyChanged("SmallRibbonWidth");
					this.OnSmallRibbonWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmallRibbonHeight", DbType="SmallInt")]
		public System.Nullable<short> SmallRibbonHeight
		{
			get
			{
				return this._SmallRibbonHeight;
			}
			set
			{
				if ((this._SmallRibbonHeight != value))
				{
					this.OnSmallRibbonHeightChanging(value);
					this.SendPropertyChanging();
					this._SmallRibbonHeight = value;
					this.SendPropertyChanged("SmallRibbonHeight");
					this.OnSmallRibbonHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="TinyInt NOT NULL")]
		public byte SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flags", DbType="Int NOT NULL")]
		public int Flags
		{
			get
			{
				return this._Flags;
			}
			set
			{
				if ((this._Flags != value))
				{
					this.OnFlagsChanging(value);
					this.SendPropertyChanging();
					this._Flags = value;
					this.SendPropertyChanged("Flags");
					this.OnFlagsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_Message")]
	public partial class yaf_Message : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MessageID;
		
		private int _TopicID;
		
		private System.Nullable<int> _ReplyTo;
		
		private int _Position;
		
		private int _Indent;
		
		private int _UserID;
		
		private string _UserName;
		
		private System.DateTime _Posted;
		
		private string _Message;
		
		private string _IP;
		
		private System.Nullable<System.DateTime> _Edited;
		
		private int _Flags;
		
		private string _EditReason;
		
		private bool _IsModeratorChanged;
		
		private string _DeleteReason;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.Nullable<bool> _IsApproved;
		
		private string _BlogPostID;
		
		private System.Nullable<int> _EditedBy;
		
		private EntitySet<yaf_Attachment> _yaf_Attachments;
		
		private EntitySet<yaf_Forum> _yaf_Forums;
		
		private EntitySet<yaf_Message> _yaf_Messages;
		
		private EntitySet<yaf_Topic> _yaf_Topics;
		
		private EntityRef<yaf_Message> _yaf_Message1;
		
		private EntityRef<yaf_Topic> _yaf_Topic;
		
		private EntityRef<yaf_User> _yaf_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageIDChanging(int value);
    partial void OnMessageIDChanged();
    partial void OnTopicIDChanging(int value);
    partial void OnTopicIDChanged();
    partial void OnReplyToChanging(System.Nullable<int> value);
    partial void OnReplyToChanged();
    partial void OnPositionChanging(int value);
    partial void OnPositionChanged();
    partial void OnIndentChanging(int value);
    partial void OnIndentChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPostedChanging(System.DateTime value);
    partial void OnPostedChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnIPChanging(string value);
    partial void OnIPChanged();
    partial void OnEditedChanging(System.Nullable<System.DateTime> value);
    partial void OnEditedChanged();
    partial void OnFlagsChanging(int value);
    partial void OnFlagsChanged();
    partial void OnEditReasonChanging(string value);
    partial void OnEditReasonChanged();
    partial void OnIsModeratorChangedChanging(bool value);
    partial void OnIsModeratorChangedChanged();
    partial void OnDeleteReasonChanging(string value);
    partial void OnDeleteReasonChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnIsApprovedChanging(System.Nullable<bool> value);
    partial void OnIsApprovedChanged();
    partial void OnBlogPostIDChanging(string value);
    partial void OnBlogPostIDChanged();
    partial void OnEditedByChanging(System.Nullable<int> value);
    partial void OnEditedByChanged();
    #endregion
		
		public yaf_Message()
		{
			this._yaf_Attachments = new EntitySet<yaf_Attachment>(new Action<yaf_Attachment>(this.attach_yaf_Attachments), new Action<yaf_Attachment>(this.detach_yaf_Attachments));
			this._yaf_Forums = new EntitySet<yaf_Forum>(new Action<yaf_Forum>(this.attach_yaf_Forums), new Action<yaf_Forum>(this.detach_yaf_Forums));
			this._yaf_Messages = new EntitySet<yaf_Message>(new Action<yaf_Message>(this.attach_yaf_Messages), new Action<yaf_Message>(this.detach_yaf_Messages));
			this._yaf_Topics = new EntitySet<yaf_Topic>(new Action<yaf_Topic>(this.attach_yaf_Topics), new Action<yaf_Topic>(this.detach_yaf_Topics));
			this._yaf_Message1 = default(EntityRef<yaf_Message>);
			this._yaf_Topic = default(EntityRef<yaf_Topic>);
			this._yaf_User = default(EntityRef<yaf_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this.OnMessageIDChanging(value);
					this.SendPropertyChanging();
					this._MessageID = value;
					this.SendPropertyChanged("MessageID");
					this.OnMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicID", DbType="Int NOT NULL")]
		public int TopicID
		{
			get
			{
				return this._TopicID;
			}
			set
			{
				if ((this._TopicID != value))
				{
					if (this._yaf_Topic.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTopicIDChanging(value);
					this.SendPropertyChanging();
					this._TopicID = value;
					this.SendPropertyChanged("TopicID");
					this.OnTopicIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplyTo", DbType="Int")]
		public System.Nullable<int> ReplyTo
		{
			get
			{
				return this._ReplyTo;
			}
			set
			{
				if ((this._ReplyTo != value))
				{
					if (this._yaf_Message1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReplyToChanging(value);
					this.SendPropertyChanging();
					this._ReplyTo = value;
					this.SendPropertyChanged("ReplyTo");
					this.OnReplyToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="Int NOT NULL")]
		public int Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Indent", DbType="Int NOT NULL")]
		public int Indent
		{
			get
			{
				return this._Indent;
			}
			set
			{
				if ((this._Indent != value))
				{
					this.OnIndentChanging(value);
					this.SendPropertyChanging();
					this._Indent = value;
					this.SendPropertyChanged("Indent");
					this.OnIndentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._yaf_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(255)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Posted", DbType="DateTime NOT NULL")]
		public System.DateTime Posted
		{
			get
			{
				return this._Posted;
			}
			set
			{
				if ((this._Posted != value))
				{
					this.OnPostedChanging(value);
					this.SendPropertyChanging();
					this._Posted = value;
					this.SendPropertyChanged("Posted");
					this.OnPostedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP", DbType="VarChar(39) NOT NULL", CanBeNull=false)]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this.OnIPChanging(value);
					this.SendPropertyChanging();
					this._IP = value;
					this.SendPropertyChanged("IP");
					this.OnIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edited", DbType="DateTime")]
		public System.Nullable<System.DateTime> Edited
		{
			get
			{
				return this._Edited;
			}
			set
			{
				if ((this._Edited != value))
				{
					this.OnEditedChanging(value);
					this.SendPropertyChanging();
					this._Edited = value;
					this.SendPropertyChanged("Edited");
					this.OnEditedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flags", DbType="Int NOT NULL")]
		public int Flags
		{
			get
			{
				return this._Flags;
			}
			set
			{
				if ((this._Flags != value))
				{
					this.OnFlagsChanging(value);
					this.SendPropertyChanging();
					this._Flags = value;
					this.SendPropertyChanged("Flags");
					this.OnFlagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditReason", DbType="NVarChar(100)")]
		public string EditReason
		{
			get
			{
				return this._EditReason;
			}
			set
			{
				if ((this._EditReason != value))
				{
					this.OnEditReasonChanging(value);
					this.SendPropertyChanging();
					this._EditReason = value;
					this.SendPropertyChanged("EditReason");
					this.OnEditReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsModeratorChanged", DbType="Bit NOT NULL")]
		public bool IsModeratorChanged
		{
			get
			{
				return this._IsModeratorChanged;
			}
			set
			{
				if ((this._IsModeratorChanged != value))
				{
					this.OnIsModeratorChangedChanging(value);
					this.SendPropertyChanging();
					this._IsModeratorChanged = value;
					this.SendPropertyChanged("IsModeratorChanged");
					this.OnIsModeratorChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteReason", DbType="NVarChar(100)")]
		public string DeleteReason
		{
			get
			{
				return this._DeleteReason;
			}
			set
			{
				if ((this._DeleteReason != value))
				{
					this.OnDeleteReasonChanging(value);
					this.SendPropertyChanging();
					this._DeleteReason = value;
					this.SendPropertyChanged("DeleteReason");
					this.OnDeleteReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", AutoSync=AutoSync.Always, DbType="Bit", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", AutoSync=AutoSync.Always, DbType="Bit", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogPostID", DbType="NVarChar(50)")]
		public string BlogPostID
		{
			get
			{
				return this._BlogPostID;
			}
			set
			{
				if ((this._BlogPostID != value))
				{
					this.OnBlogPostIDChanging(value);
					this.SendPropertyChanging();
					this._BlogPostID = value;
					this.SendPropertyChanged("BlogPostID");
					this.OnBlogPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditedBy", DbType="Int")]
		public System.Nullable<int> EditedBy
		{
			get
			{
				return this._EditedBy;
			}
			set
			{
				if ((this._EditedBy != value))
				{
					this.OnEditedByChanging(value);
					this.SendPropertyChanging();
					this._EditedBy = value;
					this.SendPropertyChanged("EditedBy");
					this.OnEditedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Message_yaf_Attachment", Storage="_yaf_Attachments", ThisKey="MessageID", OtherKey="MessageID")]
		public EntitySet<yaf_Attachment> yaf_Attachments
		{
			get
			{
				return this._yaf_Attachments;
			}
			set
			{
				this._yaf_Attachments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Message_yaf_Forum", Storage="_yaf_Forums", ThisKey="MessageID", OtherKey="LastMessageID")]
		public EntitySet<yaf_Forum> yaf_Forums
		{
			get
			{
				return this._yaf_Forums;
			}
			set
			{
				this._yaf_Forums.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Message_yaf_Message", Storage="_yaf_Messages", ThisKey="MessageID", OtherKey="ReplyTo")]
		public EntitySet<yaf_Message> yaf_Messages
		{
			get
			{
				return this._yaf_Messages;
			}
			set
			{
				this._yaf_Messages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Message_yaf_Topic", Storage="_yaf_Topics", ThisKey="MessageID", OtherKey="LastMessageID")]
		public EntitySet<yaf_Topic> yaf_Topics
		{
			get
			{
				return this._yaf_Topics;
			}
			set
			{
				this._yaf_Topics.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Message_yaf_Message", Storage="_yaf_Message1", ThisKey="ReplyTo", OtherKey="MessageID", IsForeignKey=true)]
		public yaf_Message yaf_Message1
		{
			get
			{
				return this._yaf_Message1.Entity;
			}
			set
			{
				yaf_Message previousValue = this._yaf_Message1.Entity;
				if (((previousValue != value) 
							|| (this._yaf_Message1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_Message1.Entity = null;
						previousValue.yaf_Messages.Remove(this);
					}
					this._yaf_Message1.Entity = value;
					if ((value != null))
					{
						value.yaf_Messages.Add(this);
						this._ReplyTo = value.MessageID;
					}
					else
					{
						this._ReplyTo = default(Nullable<int>);
					}
					this.SendPropertyChanged("yaf_Message1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Topic_yaf_Message", Storage="_yaf_Topic", ThisKey="TopicID", OtherKey="TopicID", IsForeignKey=true)]
		public yaf_Topic yaf_Topic
		{
			get
			{
				return this._yaf_Topic.Entity;
			}
			set
			{
				yaf_Topic previousValue = this._yaf_Topic.Entity;
				if (((previousValue != value) 
							|| (this._yaf_Topic.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_Topic.Entity = null;
						previousValue.yaf_Messages.Remove(this);
					}
					this._yaf_Topic.Entity = value;
					if ((value != null))
					{
						value.yaf_Messages.Add(this);
						this._TopicID = value.TopicID;
					}
					else
					{
						this._TopicID = default(int);
					}
					this.SendPropertyChanged("yaf_Topic");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_User_yaf_Message", Storage="_yaf_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public yaf_User yaf_User
		{
			get
			{
				return this._yaf_User.Entity;
			}
			set
			{
				yaf_User previousValue = this._yaf_User.Entity;
				if (((previousValue != value) 
							|| (this._yaf_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_User.Entity = null;
						previousValue.yaf_Messages.Remove(this);
					}
					this._yaf_User.Entity = value;
					if ((value != null))
					{
						value.yaf_Messages.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("yaf_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_yaf_Attachments(yaf_Attachment entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Message = this;
		}
		
		private void detach_yaf_Attachments(yaf_Attachment entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Message = null;
		}
		
		private void attach_yaf_Forums(yaf_Forum entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Message = this;
		}
		
		private void detach_yaf_Forums(yaf_Forum entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Message = null;
		}
		
		private void attach_yaf_Messages(yaf_Message entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Message1 = this;
		}
		
		private void detach_yaf_Messages(yaf_Message entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Message1 = null;
		}
		
		private void attach_yaf_Topics(yaf_Topic entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Message = this;
		}
		
		private void detach_yaf_Topics(yaf_Topic entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Message = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_MessageHistory")]
	public partial class yaf_MessageHistory
	{
		
		private System.Guid _MessageHistoryID;
		
		private int _MessageID;
		
		private string _Message;
		
		private string _IP;
		
		private System.Nullable<System.DateTime> _Edited;
		
		private System.Nullable<int> _EditedBy;
		
		private string _EditReason;
		
		private bool _IsModeratorChanged;
		
		private int _Flags;
		
		public yaf_MessageHistory()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageHistoryID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid MessageHistoryID
		{
			get
			{
				return this._MessageHistoryID;
			}
			set
			{
				if ((this._MessageHistoryID != value))
				{
					this._MessageHistoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", DbType="Int NOT NULL")]
		public int MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this._MessageID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP", DbType="VarChar(39) NOT NULL", CanBeNull=false)]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this._IP = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edited", DbType="DateTime")]
		public System.Nullable<System.DateTime> Edited
		{
			get
			{
				return this._Edited;
			}
			set
			{
				if ((this._Edited != value))
				{
					this._Edited = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditedBy", DbType="Int")]
		public System.Nullable<int> EditedBy
		{
			get
			{
				return this._EditedBy;
			}
			set
			{
				if ((this._EditedBy != value))
				{
					this._EditedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditReason", DbType="NVarChar(100)")]
		public string EditReason
		{
			get
			{
				return this._EditReason;
			}
			set
			{
				if ((this._EditReason != value))
				{
					this._EditReason = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsModeratorChanged", DbType="Bit NOT NULL")]
		public bool IsModeratorChanged
		{
			get
			{
				return this._IsModeratorChanged;
			}
			set
			{
				if ((this._IsModeratorChanged != value))
				{
					this._IsModeratorChanged = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flags", DbType="Int NOT NULL")]
		public int Flags
		{
			get
			{
				return this._Flags;
			}
			set
			{
				if ((this._Flags != value))
				{
					this._Flags = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_MessageReported")]
	public partial class yaf_MessageReported
	{
		
		private int _MessageID;
		
		private string _Message;
		
		private System.Nullable<bool> _Resolved;
		
		private System.Nullable<int> _ResolvedBy;
		
		private System.Nullable<System.DateTime> _ResolvedDate;
		
		public yaf_MessageReported()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", DbType="Int NOT NULL")]
		public int MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this._MessageID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resolved", DbType="Bit")]
		public System.Nullable<bool> Resolved
		{
			get
			{
				return this._Resolved;
			}
			set
			{
				if ((this._Resolved != value))
				{
					this._Resolved = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResolvedBy", DbType="Int")]
		public System.Nullable<int> ResolvedBy
		{
			get
			{
				return this._ResolvedBy;
			}
			set
			{
				if ((this._ResolvedBy != value))
				{
					this._ResolvedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResolvedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ResolvedDate
		{
			get
			{
				return this._ResolvedDate;
			}
			set
			{
				if ((this._ResolvedDate != value))
				{
					this._ResolvedDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_MessageReportedAudit")]
	public partial class yaf_MessageReportedAudit
	{
		
		private int _LogID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _MessageID;
		
		private System.Nullable<System.DateTime> _Reported;
		
		private int _ReportedNumber;
		
		private string _ReportText;
		
		public yaf_MessageReportedAudit()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int LogID
		{
			get
			{
				return this._LogID;
			}
			set
			{
				if ((this._LogID != value))
				{
					this._LogID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", DbType="Int")]
		public System.Nullable<int> MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this._MessageID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reported", DbType="DateTime")]
		public System.Nullable<System.DateTime> Reported
		{
			get
			{
				return this._Reported;
			}
			set
			{
				if ((this._Reported != value))
				{
					this._Reported = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportedNumber", DbType="Int NOT NULL")]
		public int ReportedNumber
		{
			get
			{
				return this._ReportedNumber;
			}
			set
			{
				if ((this._ReportedNumber != value))
				{
					this._ReportedNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportText", DbType="NVarChar(4000)")]
		public string ReportText
		{
			get
			{
				return this._ReportText;
			}
			set
			{
				if ((this._ReportText != value))
				{
					this._ReportText = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_NntpForum")]
	public partial class yaf_NntpForum : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NntpForumID;
		
		private int _NntpServerID;
		
		private string _GroupName;
		
		private int _ForumID;
		
		private int _LastMessageNo;
		
		private System.DateTime _LastUpdate;
		
		private bool _Active;
		
		private EntitySet<yaf_NntpTopic> _yaf_NntpTopics;
		
		private EntityRef<yaf_Forum> _yaf_Forum;
		
		private EntityRef<yaf_NntpServer> _yaf_NntpServer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNntpForumIDChanging(int value);
    partial void OnNntpForumIDChanged();
    partial void OnNntpServerIDChanging(int value);
    partial void OnNntpServerIDChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnForumIDChanging(int value);
    partial void OnForumIDChanged();
    partial void OnLastMessageNoChanging(int value);
    partial void OnLastMessageNoChanged();
    partial void OnLastUpdateChanging(System.DateTime value);
    partial void OnLastUpdateChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public yaf_NntpForum()
		{
			this._yaf_NntpTopics = new EntitySet<yaf_NntpTopic>(new Action<yaf_NntpTopic>(this.attach_yaf_NntpTopics), new Action<yaf_NntpTopic>(this.detach_yaf_NntpTopics));
			this._yaf_Forum = default(EntityRef<yaf_Forum>);
			this._yaf_NntpServer = default(EntityRef<yaf_NntpServer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NntpForumID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NntpForumID
		{
			get
			{
				return this._NntpForumID;
			}
			set
			{
				if ((this._NntpForumID != value))
				{
					this.OnNntpForumIDChanging(value);
					this.SendPropertyChanging();
					this._NntpForumID = value;
					this.SendPropertyChanged("NntpForumID");
					this.OnNntpForumIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NntpServerID", DbType="Int NOT NULL")]
		public int NntpServerID
		{
			get
			{
				return this._NntpServerID;
			}
			set
			{
				if ((this._NntpServerID != value))
				{
					if (this._yaf_NntpServer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNntpServerIDChanging(value);
					this.SendPropertyChanging();
					this._NntpServerID = value;
					this.SendPropertyChanged("NntpServerID");
					this.OnNntpServerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumID", DbType="Int NOT NULL")]
		public int ForumID
		{
			get
			{
				return this._ForumID;
			}
			set
			{
				if ((this._ForumID != value))
				{
					if (this._yaf_Forum.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForumIDChanging(value);
					this.SendPropertyChanging();
					this._ForumID = value;
					this.SendPropertyChanged("ForumID");
					this.OnForumIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastMessageNo", DbType="Int NOT NULL")]
		public int LastMessageNo
		{
			get
			{
				return this._LastMessageNo;
			}
			set
			{
				if ((this._LastMessageNo != value))
				{
					this.OnLastMessageNoChanging(value);
					this.SendPropertyChanging();
					this._LastMessageNo = value;
					this.SendPropertyChanged("LastMessageNo");
					this.OnLastMessageNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdate
		{
			get
			{
				return this._LastUpdate;
			}
			set
			{
				if ((this._LastUpdate != value))
				{
					this.OnLastUpdateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdate = value;
					this.SendPropertyChanged("LastUpdate");
					this.OnLastUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_NntpForum_yaf_NntpTopic", Storage="_yaf_NntpTopics", ThisKey="NntpForumID", OtherKey="NntpForumID")]
		public EntitySet<yaf_NntpTopic> yaf_NntpTopics
		{
			get
			{
				return this._yaf_NntpTopics;
			}
			set
			{
				this._yaf_NntpTopics.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Forum_yaf_NntpForum", Storage="_yaf_Forum", ThisKey="ForumID", OtherKey="ForumID", IsForeignKey=true)]
		public yaf_Forum yaf_Forum
		{
			get
			{
				return this._yaf_Forum.Entity;
			}
			set
			{
				yaf_Forum previousValue = this._yaf_Forum.Entity;
				if (((previousValue != value) 
							|| (this._yaf_Forum.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_Forum.Entity = null;
						previousValue.yaf_NntpForums.Remove(this);
					}
					this._yaf_Forum.Entity = value;
					if ((value != null))
					{
						value.yaf_NntpForums.Add(this);
						this._ForumID = value.ForumID;
					}
					else
					{
						this._ForumID = default(int);
					}
					this.SendPropertyChanged("yaf_Forum");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_NntpServer_yaf_NntpForum", Storage="_yaf_NntpServer", ThisKey="NntpServerID", OtherKey="NntpServerID", IsForeignKey=true)]
		public yaf_NntpServer yaf_NntpServer
		{
			get
			{
				return this._yaf_NntpServer.Entity;
			}
			set
			{
				yaf_NntpServer previousValue = this._yaf_NntpServer.Entity;
				if (((previousValue != value) 
							|| (this._yaf_NntpServer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_NntpServer.Entity = null;
						previousValue.yaf_NntpForums.Remove(this);
					}
					this._yaf_NntpServer.Entity = value;
					if ((value != null))
					{
						value.yaf_NntpForums.Add(this);
						this._NntpServerID = value.NntpServerID;
					}
					else
					{
						this._NntpServerID = default(int);
					}
					this.SendPropertyChanged("yaf_NntpServer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_yaf_NntpTopics(yaf_NntpTopic entity)
		{
			this.SendPropertyChanging();
			entity.yaf_NntpForum = this;
		}
		
		private void detach_yaf_NntpTopics(yaf_NntpTopic entity)
		{
			this.SendPropertyChanging();
			entity.yaf_NntpForum = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_NntpServer")]
	public partial class yaf_NntpServer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NntpServerID;
		
		private int _BoardID;
		
		private string _Name;
		
		private string _Address;
		
		private System.Nullable<int> _Port;
		
		private string _UserName;
		
		private string _UserPass;
		
		private EntitySet<yaf_NntpForum> _yaf_NntpForums;
		
		private EntityRef<yaf_Board> _yaf_Board;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNntpServerIDChanging(int value);
    partial void OnNntpServerIDChanged();
    partial void OnBoardIDChanging(int value);
    partial void OnBoardIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPortChanging(System.Nullable<int> value);
    partial void OnPortChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserPassChanging(string value);
    partial void OnUserPassChanged();
    #endregion
		
		public yaf_NntpServer()
		{
			this._yaf_NntpForums = new EntitySet<yaf_NntpForum>(new Action<yaf_NntpForum>(this.attach_yaf_NntpForums), new Action<yaf_NntpForum>(this.detach_yaf_NntpForums));
			this._yaf_Board = default(EntityRef<yaf_Board>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NntpServerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NntpServerID
		{
			get
			{
				return this._NntpServerID;
			}
			set
			{
				if ((this._NntpServerID != value))
				{
					this.OnNntpServerIDChanging(value);
					this.SendPropertyChanging();
					this._NntpServerID = value;
					this.SendPropertyChanged("NntpServerID");
					this.OnNntpServerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoardID", DbType="Int NOT NULL")]
		public int BoardID
		{
			get
			{
				return this._BoardID;
			}
			set
			{
				if ((this._BoardID != value))
				{
					if (this._yaf_Board.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBoardIDChanging(value);
					this.SendPropertyChanging();
					this._BoardID = value;
					this.SendPropertyChanged("BoardID");
					this.OnBoardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Port", DbType="Int")]
		public System.Nullable<int> Port
		{
			get
			{
				return this._Port;
			}
			set
			{
				if ((this._Port != value))
				{
					this.OnPortChanging(value);
					this.SendPropertyChanging();
					this._Port = value;
					this.SendPropertyChanged("Port");
					this.OnPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(255)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPass", DbType="NVarChar(50)")]
		public string UserPass
		{
			get
			{
				return this._UserPass;
			}
			set
			{
				if ((this._UserPass != value))
				{
					this.OnUserPassChanging(value);
					this.SendPropertyChanging();
					this._UserPass = value;
					this.SendPropertyChanged("UserPass");
					this.OnUserPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_NntpServer_yaf_NntpForum", Storage="_yaf_NntpForums", ThisKey="NntpServerID", OtherKey="NntpServerID")]
		public EntitySet<yaf_NntpForum> yaf_NntpForums
		{
			get
			{
				return this._yaf_NntpForums;
			}
			set
			{
				this._yaf_NntpForums.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Board_yaf_NntpServer", Storage="_yaf_Board", ThisKey="BoardID", OtherKey="BoardID", IsForeignKey=true)]
		public yaf_Board yaf_Board
		{
			get
			{
				return this._yaf_Board.Entity;
			}
			set
			{
				yaf_Board previousValue = this._yaf_Board.Entity;
				if (((previousValue != value) 
							|| (this._yaf_Board.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_Board.Entity = null;
						previousValue.yaf_NntpServers.Remove(this);
					}
					this._yaf_Board.Entity = value;
					if ((value != null))
					{
						value.yaf_NntpServers.Add(this);
						this._BoardID = value.BoardID;
					}
					else
					{
						this._BoardID = default(int);
					}
					this.SendPropertyChanged("yaf_Board");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_yaf_NntpForums(yaf_NntpForum entity)
		{
			this.SendPropertyChanging();
			entity.yaf_NntpServer = this;
		}
		
		private void detach_yaf_NntpForums(yaf_NntpForum entity)
		{
			this.SendPropertyChanging();
			entity.yaf_NntpServer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_NntpTopic")]
	public partial class yaf_NntpTopic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NntpTopicID;
		
		private int _NntpForumID;
		
		private string _Thread;
		
		private int _TopicID;
		
		private EntityRef<yaf_NntpForum> _yaf_NntpForum;
		
		private EntityRef<yaf_Topic> _yaf_Topic;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNntpTopicIDChanging(int value);
    partial void OnNntpTopicIDChanged();
    partial void OnNntpForumIDChanging(int value);
    partial void OnNntpForumIDChanged();
    partial void OnThreadChanging(string value);
    partial void OnThreadChanged();
    partial void OnTopicIDChanging(int value);
    partial void OnTopicIDChanged();
    #endregion
		
		public yaf_NntpTopic()
		{
			this._yaf_NntpForum = default(EntityRef<yaf_NntpForum>);
			this._yaf_Topic = default(EntityRef<yaf_Topic>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NntpTopicID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NntpTopicID
		{
			get
			{
				return this._NntpTopicID;
			}
			set
			{
				if ((this._NntpTopicID != value))
				{
					this.OnNntpTopicIDChanging(value);
					this.SendPropertyChanging();
					this._NntpTopicID = value;
					this.SendPropertyChanged("NntpTopicID");
					this.OnNntpTopicIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NntpForumID", DbType="Int NOT NULL")]
		public int NntpForumID
		{
			get
			{
				return this._NntpForumID;
			}
			set
			{
				if ((this._NntpForumID != value))
				{
					if (this._yaf_NntpForum.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNntpForumIDChanging(value);
					this.SendPropertyChanging();
					this._NntpForumID = value;
					this.SendPropertyChanged("NntpForumID");
					this.OnNntpForumIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thread", DbType="Char(32) NOT NULL", CanBeNull=false)]
		public string Thread
		{
			get
			{
				return this._Thread;
			}
			set
			{
				if ((this._Thread != value))
				{
					this.OnThreadChanging(value);
					this.SendPropertyChanging();
					this._Thread = value;
					this.SendPropertyChanged("Thread");
					this.OnThreadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicID", DbType="Int NOT NULL")]
		public int TopicID
		{
			get
			{
				return this._TopicID;
			}
			set
			{
				if ((this._TopicID != value))
				{
					if (this._yaf_Topic.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTopicIDChanging(value);
					this.SendPropertyChanging();
					this._TopicID = value;
					this.SendPropertyChanged("TopicID");
					this.OnTopicIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_NntpForum_yaf_NntpTopic", Storage="_yaf_NntpForum", ThisKey="NntpForumID", OtherKey="NntpForumID", IsForeignKey=true)]
		public yaf_NntpForum yaf_NntpForum
		{
			get
			{
				return this._yaf_NntpForum.Entity;
			}
			set
			{
				yaf_NntpForum previousValue = this._yaf_NntpForum.Entity;
				if (((previousValue != value) 
							|| (this._yaf_NntpForum.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_NntpForum.Entity = null;
						previousValue.yaf_NntpTopics.Remove(this);
					}
					this._yaf_NntpForum.Entity = value;
					if ((value != null))
					{
						value.yaf_NntpTopics.Add(this);
						this._NntpForumID = value.NntpForumID;
					}
					else
					{
						this._NntpForumID = default(int);
					}
					this.SendPropertyChanged("yaf_NntpForum");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Topic_yaf_NntpTopic", Storage="_yaf_Topic", ThisKey="TopicID", OtherKey="TopicID", IsForeignKey=true)]
		public yaf_Topic yaf_Topic
		{
			get
			{
				return this._yaf_Topic.Entity;
			}
			set
			{
				yaf_Topic previousValue = this._yaf_Topic.Entity;
				if (((previousValue != value) 
							|| (this._yaf_Topic.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_Topic.Entity = null;
						previousValue.yaf_NntpTopics.Remove(this);
					}
					this._yaf_Topic.Entity = value;
					if ((value != null))
					{
						value.yaf_NntpTopics.Add(this);
						this._TopicID = value.TopicID;
					}
					else
					{
						this._TopicID = default(int);
					}
					this.SendPropertyChanged("yaf_Topic");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_PMessage")]
	public partial class yaf_PMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PMessageID;
		
		private int _FromUserID;
		
		private System.DateTime _Created;
		
		private string _Subject;
		
		private string _Body;
		
		private int _Flags;
		
		private EntitySet<yaf_UserPMessage> _yaf_UserPMessages;
		
		private EntityRef<yaf_User> _yaf_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPMessageIDChanging(int value);
    partial void OnPMessageIDChanged();
    partial void OnFromUserIDChanging(int value);
    partial void OnFromUserIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnFlagsChanging(int value);
    partial void OnFlagsChanged();
    #endregion
		
		public yaf_PMessage()
		{
			this._yaf_UserPMessages = new EntitySet<yaf_UserPMessage>(new Action<yaf_UserPMessage>(this.attach_yaf_UserPMessages), new Action<yaf_UserPMessage>(this.detach_yaf_UserPMessages));
			this._yaf_User = default(EntityRef<yaf_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PMessageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PMessageID
		{
			get
			{
				return this._PMessageID;
			}
			set
			{
				if ((this._PMessageID != value))
				{
					this.OnPMessageIDChanging(value);
					this.SendPropertyChanging();
					this._PMessageID = value;
					this.SendPropertyChanged("PMessageID");
					this.OnPMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromUserID", DbType="Int NOT NULL")]
		public int FromUserID
		{
			get
			{
				return this._FromUserID;
			}
			set
			{
				if ((this._FromUserID != value))
				{
					if (this._yaf_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromUserIDChanging(value);
					this.SendPropertyChanging();
					this._FromUserID = value;
					this.SendPropertyChanged("FromUserID");
					this.OnFromUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flags", DbType="Int NOT NULL")]
		public int Flags
		{
			get
			{
				return this._Flags;
			}
			set
			{
				if ((this._Flags != value))
				{
					this.OnFlagsChanging(value);
					this.SendPropertyChanging();
					this._Flags = value;
					this.SendPropertyChanged("Flags");
					this.OnFlagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_PMessage_yaf_UserPMessage", Storage="_yaf_UserPMessages", ThisKey="PMessageID", OtherKey="PMessageID")]
		public EntitySet<yaf_UserPMessage> yaf_UserPMessages
		{
			get
			{
				return this._yaf_UserPMessages;
			}
			set
			{
				this._yaf_UserPMessages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_User_yaf_PMessage", Storage="_yaf_User", ThisKey="FromUserID", OtherKey="UserID", IsForeignKey=true)]
		public yaf_User yaf_User
		{
			get
			{
				return this._yaf_User.Entity;
			}
			set
			{
				yaf_User previousValue = this._yaf_User.Entity;
				if (((previousValue != value) 
							|| (this._yaf_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_User.Entity = null;
						previousValue.yaf_PMessages.Remove(this);
					}
					this._yaf_User.Entity = value;
					if ((value != null))
					{
						value.yaf_PMessages.Add(this);
						this._FromUserID = value.UserID;
					}
					else
					{
						this._FromUserID = default(int);
					}
					this.SendPropertyChanged("yaf_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_yaf_UserPMessages(yaf_UserPMessage entity)
		{
			this.SendPropertyChanging();
			entity.yaf_PMessage = this;
		}
		
		private void detach_yaf_UserPMessages(yaf_UserPMessage entity)
		{
			this.SendPropertyChanging();
			entity.yaf_PMessage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_Poll")]
	public partial class yaf_Poll : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PollID;
		
		private string _Question;
		
		private System.Nullable<System.DateTime> _Closes;
		
		private System.Nullable<int> _PollGroupID;
		
		private int _UserID;
		
		private string _ObjectPath;
		
		private string _MimeType;
		
		private int _Flags;
		
		private System.Nullable<bool> _IsClosedBound;
		
		private System.Nullable<bool> _AllowMultipleChoices;
		
		private System.Nullable<bool> _ShowVoters;
		
		private System.Nullable<bool> _AllowSkipVote;
		
		private EntitySet<yaf_Choice> _yaf_Choices;
		
		private EntitySet<yaf_PollVote> _yaf_PollVotes;
		
		private EntityRef<yaf_PollGroupCluster> _yaf_PollGroupCluster;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPollIDChanging(int value);
    partial void OnPollIDChanged();
    partial void OnQuestionChanging(string value);
    partial void OnQuestionChanged();
    partial void OnClosesChanging(System.Nullable<System.DateTime> value);
    partial void OnClosesChanged();
    partial void OnPollGroupIDChanging(System.Nullable<int> value);
    partial void OnPollGroupIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnObjectPathChanging(string value);
    partial void OnObjectPathChanged();
    partial void OnMimeTypeChanging(string value);
    partial void OnMimeTypeChanged();
    partial void OnFlagsChanging(int value);
    partial void OnFlagsChanged();
    partial void OnIsClosedBoundChanging(System.Nullable<bool> value);
    partial void OnIsClosedBoundChanged();
    partial void OnAllowMultipleChoicesChanging(System.Nullable<bool> value);
    partial void OnAllowMultipleChoicesChanged();
    partial void OnShowVotersChanging(System.Nullable<bool> value);
    partial void OnShowVotersChanged();
    partial void OnAllowSkipVoteChanging(System.Nullable<bool> value);
    partial void OnAllowSkipVoteChanged();
    #endregion
		
		public yaf_Poll()
		{
			this._yaf_Choices = new EntitySet<yaf_Choice>(new Action<yaf_Choice>(this.attach_yaf_Choices), new Action<yaf_Choice>(this.detach_yaf_Choices));
			this._yaf_PollVotes = new EntitySet<yaf_PollVote>(new Action<yaf_PollVote>(this.attach_yaf_PollVotes), new Action<yaf_PollVote>(this.detach_yaf_PollVotes));
			this._yaf_PollGroupCluster = default(EntityRef<yaf_PollGroupCluster>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PollID
		{
			get
			{
				return this._PollID;
			}
			set
			{
				if ((this._PollID != value))
				{
					this.OnPollIDChanging(value);
					this.SendPropertyChanging();
					this._PollID = value;
					this.SendPropertyChanged("PollID");
					this.OnPollIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Question", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Question
		{
			get
			{
				return this._Question;
			}
			set
			{
				if ((this._Question != value))
				{
					this.OnQuestionChanging(value);
					this.SendPropertyChanging();
					this._Question = value;
					this.SendPropertyChanged("Question");
					this.OnQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Closes", DbType="DateTime")]
		public System.Nullable<System.DateTime> Closes
		{
			get
			{
				return this._Closes;
			}
			set
			{
				if ((this._Closes != value))
				{
					this.OnClosesChanging(value);
					this.SendPropertyChanging();
					this._Closes = value;
					this.SendPropertyChanged("Closes");
					this.OnClosesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollGroupID", DbType="Int")]
		public System.Nullable<int> PollGroupID
		{
			get
			{
				return this._PollGroupID;
			}
			set
			{
				if ((this._PollGroupID != value))
				{
					if (this._yaf_PollGroupCluster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPollGroupIDChanging(value);
					this.SendPropertyChanging();
					this._PollGroupID = value;
					this.SendPropertyChanged("PollGroupID");
					this.OnPollGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectPath", DbType="NVarChar(255)")]
		public string ObjectPath
		{
			get
			{
				return this._ObjectPath;
			}
			set
			{
				if ((this._ObjectPath != value))
				{
					this.OnObjectPathChanging(value);
					this.SendPropertyChanging();
					this._ObjectPath = value;
					this.SendPropertyChanged("ObjectPath");
					this.OnObjectPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MimeType", DbType="VarChar(50)")]
		public string MimeType
		{
			get
			{
				return this._MimeType;
			}
			set
			{
				if ((this._MimeType != value))
				{
					this.OnMimeTypeChanging(value);
					this.SendPropertyChanging();
					this._MimeType = value;
					this.SendPropertyChanged("MimeType");
					this.OnMimeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flags", DbType="Int NOT NULL")]
		public int Flags
		{
			get
			{
				return this._Flags;
			}
			set
			{
				if ((this._Flags != value))
				{
					this.OnFlagsChanging(value);
					this.SendPropertyChanging();
					this._Flags = value;
					this.SendPropertyChanged("Flags");
					this.OnFlagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClosedBound", AutoSync=AutoSync.Always, DbType="Bit", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsClosedBound
		{
			get
			{
				return this._IsClosedBound;
			}
			set
			{
				if ((this._IsClosedBound != value))
				{
					this.OnIsClosedBoundChanging(value);
					this.SendPropertyChanging();
					this._IsClosedBound = value;
					this.SendPropertyChanged("IsClosedBound");
					this.OnIsClosedBoundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowMultipleChoices", AutoSync=AutoSync.Always, DbType="Bit", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> AllowMultipleChoices
		{
			get
			{
				return this._AllowMultipleChoices;
			}
			set
			{
				if ((this._AllowMultipleChoices != value))
				{
					this.OnAllowMultipleChoicesChanging(value);
					this.SendPropertyChanging();
					this._AllowMultipleChoices = value;
					this.SendPropertyChanged("AllowMultipleChoices");
					this.OnAllowMultipleChoicesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowVoters", AutoSync=AutoSync.Always, DbType="Bit", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> ShowVoters
		{
			get
			{
				return this._ShowVoters;
			}
			set
			{
				if ((this._ShowVoters != value))
				{
					this.OnShowVotersChanging(value);
					this.SendPropertyChanging();
					this._ShowVoters = value;
					this.SendPropertyChanged("ShowVoters");
					this.OnShowVotersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowSkipVote", AutoSync=AutoSync.Always, DbType="Bit", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> AllowSkipVote
		{
			get
			{
				return this._AllowSkipVote;
			}
			set
			{
				if ((this._AllowSkipVote != value))
				{
					this.OnAllowSkipVoteChanging(value);
					this.SendPropertyChanging();
					this._AllowSkipVote = value;
					this.SendPropertyChanged("AllowSkipVote");
					this.OnAllowSkipVoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Poll_yaf_Choice", Storage="_yaf_Choices", ThisKey="PollID", OtherKey="PollID")]
		public EntitySet<yaf_Choice> yaf_Choices
		{
			get
			{
				return this._yaf_Choices;
			}
			set
			{
				this._yaf_Choices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Poll_yaf_PollVote", Storage="_yaf_PollVotes", ThisKey="PollID", OtherKey="PollID")]
		public EntitySet<yaf_PollVote> yaf_PollVotes
		{
			get
			{
				return this._yaf_PollVotes;
			}
			set
			{
				this._yaf_PollVotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_PollGroupCluster_yaf_Poll", Storage="_yaf_PollGroupCluster", ThisKey="PollGroupID", OtherKey="PollGroupID", IsForeignKey=true, DeleteRule="CASCADE")]
		public yaf_PollGroupCluster yaf_PollGroupCluster
		{
			get
			{
				return this._yaf_PollGroupCluster.Entity;
			}
			set
			{
				yaf_PollGroupCluster previousValue = this._yaf_PollGroupCluster.Entity;
				if (((previousValue != value) 
							|| (this._yaf_PollGroupCluster.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_PollGroupCluster.Entity = null;
						previousValue.yaf_Polls.Remove(this);
					}
					this._yaf_PollGroupCluster.Entity = value;
					if ((value != null))
					{
						value.yaf_Polls.Add(this);
						this._PollGroupID = value.PollGroupID;
					}
					else
					{
						this._PollGroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("yaf_PollGroupCluster");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_yaf_Choices(yaf_Choice entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Poll = this;
		}
		
		private void detach_yaf_Choices(yaf_Choice entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Poll = null;
		}
		
		private void attach_yaf_PollVotes(yaf_PollVote entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Poll = this;
		}
		
		private void detach_yaf_PollVotes(yaf_PollVote entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Poll = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_PollGroupCluster")]
	public partial class yaf_PollGroupCluster : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PollGroupID;
		
		private int _UserID;
		
		private int _Flags;
		
		private System.Nullable<bool> _IsBound;
		
		private EntitySet<yaf_Category> _yaf_Categories;
		
		private EntitySet<yaf_Forum> _yaf_Forums;
		
		private EntitySet<yaf_Poll> _yaf_Polls;
		
		private EntitySet<yaf_Topic> _yaf_Topics;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPollGroupIDChanging(int value);
    partial void OnPollGroupIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnFlagsChanging(int value);
    partial void OnFlagsChanged();
    partial void OnIsBoundChanging(System.Nullable<bool> value);
    partial void OnIsBoundChanged();
    #endregion
		
		public yaf_PollGroupCluster()
		{
			this._yaf_Categories = new EntitySet<yaf_Category>(new Action<yaf_Category>(this.attach_yaf_Categories), new Action<yaf_Category>(this.detach_yaf_Categories));
			this._yaf_Forums = new EntitySet<yaf_Forum>(new Action<yaf_Forum>(this.attach_yaf_Forums), new Action<yaf_Forum>(this.detach_yaf_Forums));
			this._yaf_Polls = new EntitySet<yaf_Poll>(new Action<yaf_Poll>(this.attach_yaf_Polls), new Action<yaf_Poll>(this.detach_yaf_Polls));
			this._yaf_Topics = new EntitySet<yaf_Topic>(new Action<yaf_Topic>(this.attach_yaf_Topics), new Action<yaf_Topic>(this.detach_yaf_Topics));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PollGroupID
		{
			get
			{
				return this._PollGroupID;
			}
			set
			{
				if ((this._PollGroupID != value))
				{
					this.OnPollGroupIDChanging(value);
					this.SendPropertyChanging();
					this._PollGroupID = value;
					this.SendPropertyChanged("PollGroupID");
					this.OnPollGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flags", DbType="Int NOT NULL")]
		public int Flags
		{
			get
			{
				return this._Flags;
			}
			set
			{
				if ((this._Flags != value))
				{
					this.OnFlagsChanging(value);
					this.SendPropertyChanging();
					this._Flags = value;
					this.SendPropertyChanged("Flags");
					this.OnFlagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBound", AutoSync=AutoSync.Always, DbType="Bit", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsBound
		{
			get
			{
				return this._IsBound;
			}
			set
			{
				if ((this._IsBound != value))
				{
					this.OnIsBoundChanging(value);
					this.SendPropertyChanging();
					this._IsBound = value;
					this.SendPropertyChanged("IsBound");
					this.OnIsBoundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_PollGroupCluster_yaf_Category", Storage="_yaf_Categories", ThisKey="PollGroupID", OtherKey="PollGroupID")]
		public EntitySet<yaf_Category> yaf_Categories
		{
			get
			{
				return this._yaf_Categories;
			}
			set
			{
				this._yaf_Categories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_PollGroupCluster_yaf_Forum", Storage="_yaf_Forums", ThisKey="PollGroupID", OtherKey="PollGroupID")]
		public EntitySet<yaf_Forum> yaf_Forums
		{
			get
			{
				return this._yaf_Forums;
			}
			set
			{
				this._yaf_Forums.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_PollGroupCluster_yaf_Poll", Storage="_yaf_Polls", ThisKey="PollGroupID", OtherKey="PollGroupID")]
		public EntitySet<yaf_Poll> yaf_Polls
		{
			get
			{
				return this._yaf_Polls;
			}
			set
			{
				this._yaf_Polls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_PollGroupCluster_yaf_Topic", Storage="_yaf_Topics", ThisKey="PollGroupID", OtherKey="PollID")]
		public EntitySet<yaf_Topic> yaf_Topics
		{
			get
			{
				return this._yaf_Topics;
			}
			set
			{
				this._yaf_Topics.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_yaf_Categories(yaf_Category entity)
		{
			this.SendPropertyChanging();
			entity.yaf_PollGroupCluster = this;
		}
		
		private void detach_yaf_Categories(yaf_Category entity)
		{
			this.SendPropertyChanging();
			entity.yaf_PollGroupCluster = null;
		}
		
		private void attach_yaf_Forums(yaf_Forum entity)
		{
			this.SendPropertyChanging();
			entity.yaf_PollGroupCluster = this;
		}
		
		private void detach_yaf_Forums(yaf_Forum entity)
		{
			this.SendPropertyChanging();
			entity.yaf_PollGroupCluster = null;
		}
		
		private void attach_yaf_Polls(yaf_Poll entity)
		{
			this.SendPropertyChanging();
			entity.yaf_PollGroupCluster = this;
		}
		
		private void detach_yaf_Polls(yaf_Poll entity)
		{
			this.SendPropertyChanging();
			entity.yaf_PollGroupCluster = null;
		}
		
		private void attach_yaf_Topics(yaf_Topic entity)
		{
			this.SendPropertyChanging();
			entity.yaf_PollGroupCluster = this;
		}
		
		private void detach_yaf_Topics(yaf_Topic entity)
		{
			this.SendPropertyChanging();
			entity.yaf_PollGroupCluster = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_PollVote")]
	public partial class yaf_PollVote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PollVoteID;
		
		private int _PollID;
		
		private System.Nullable<int> _UserID;
		
		private string _RemoteIP;
		
		private System.Nullable<int> _ChoiceID;
		
		private EntityRef<yaf_Poll> _yaf_Poll;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPollVoteIDChanging(int value);
    partial void OnPollVoteIDChanged();
    partial void OnPollIDChanging(int value);
    partial void OnPollIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnRemoteIPChanging(string value);
    partial void OnRemoteIPChanged();
    partial void OnChoiceIDChanging(System.Nullable<int> value);
    partial void OnChoiceIDChanged();
    #endregion
		
		public yaf_PollVote()
		{
			this._yaf_Poll = default(EntityRef<yaf_Poll>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollVoteID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PollVoteID
		{
			get
			{
				return this._PollVoteID;
			}
			set
			{
				if ((this._PollVoteID != value))
				{
					this.OnPollVoteIDChanging(value);
					this.SendPropertyChanging();
					this._PollVoteID = value;
					this.SendPropertyChanged("PollVoteID");
					this.OnPollVoteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollID", DbType="Int NOT NULL")]
		public int PollID
		{
			get
			{
				return this._PollID;
			}
			set
			{
				if ((this._PollID != value))
				{
					if (this._yaf_Poll.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPollIDChanging(value);
					this.SendPropertyChanging();
					this._PollID = value;
					this.SendPropertyChanged("PollID");
					this.OnPollIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemoteIP", DbType="VarChar(57)")]
		public string RemoteIP
		{
			get
			{
				return this._RemoteIP;
			}
			set
			{
				if ((this._RemoteIP != value))
				{
					this.OnRemoteIPChanging(value);
					this.SendPropertyChanging();
					this._RemoteIP = value;
					this.SendPropertyChanged("RemoteIP");
					this.OnRemoteIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChoiceID", DbType="Int")]
		public System.Nullable<int> ChoiceID
		{
			get
			{
				return this._ChoiceID;
			}
			set
			{
				if ((this._ChoiceID != value))
				{
					this.OnChoiceIDChanging(value);
					this.SendPropertyChanging();
					this._ChoiceID = value;
					this.SendPropertyChanged("ChoiceID");
					this.OnChoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Poll_yaf_PollVote", Storage="_yaf_Poll", ThisKey="PollID", OtherKey="PollID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public yaf_Poll yaf_Poll
		{
			get
			{
				return this._yaf_Poll.Entity;
			}
			set
			{
				yaf_Poll previousValue = this._yaf_Poll.Entity;
				if (((previousValue != value) 
							|| (this._yaf_Poll.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_Poll.Entity = null;
						previousValue.yaf_PollVotes.Remove(this);
					}
					this._yaf_Poll.Entity = value;
					if ((value != null))
					{
						value.yaf_PollVotes.Add(this);
						this._PollID = value.PollID;
					}
					else
					{
						this._PollID = default(int);
					}
					this.SendPropertyChanged("yaf_Poll");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_prov_Application")]
	public partial class yaf_prov_Application : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationID;
		
		private string _ApplicationName;
		
		private string _ApplicationNameLwd;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIDChanging(System.Guid value);
    partial void OnApplicationIDChanged();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnApplicationNameLwdChanging(string value);
    partial void OnApplicationNameLwdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public yaf_prov_Application()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					this.OnApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationID = value;
					this.SendPropertyChanged("ApplicationID");
					this.OnApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(256)")]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationNameLwd", DbType="NVarChar(256)")]
		public string ApplicationNameLwd
		{
			get
			{
				return this._ApplicationNameLwd;
			}
			set
			{
				if ((this._ApplicationNameLwd != value))
				{
					this.OnApplicationNameLwdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationNameLwd = value;
					this.SendPropertyChanged("ApplicationNameLwd");
					this.OnApplicationNameLwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_prov_Membership")]
	public partial class yaf_prov_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserID;
		
		private System.Guid _ApplicationID;
		
		private string _Username;
		
		private string _UsernameLwd;
		
		private string _Password;
		
		private string _PasswordSalt;
		
		private string _PasswordFormat;
		
		private string _Email;
		
		private string _EmailLwd;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private System.Nullable<bool> _IsApproved;
		
		private System.Nullable<bool> _IsLockedOut;
		
		private System.Nullable<System.DateTime> _LastLogin;
		
		private System.Nullable<System.DateTime> _LastActivity;
		
		private System.Nullable<System.DateTime> _LastPasswordChange;
		
		private System.Nullable<System.DateTime> _LastLockOut;
		
		private System.Nullable<int> _FailedPasswordAttempts;
		
		private System.Nullable<int> _FailedAnswerAttempts;
		
		private System.Nullable<System.DateTime> _FailedPasswordWindow;
		
		private System.Nullable<System.DateTime> _FailedAnswerWindow;
		
		private System.Nullable<System.DateTime> _Joined;
		
		private string _Comment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnApplicationIDChanging(System.Guid value);
    partial void OnApplicationIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnUsernameLwdChanging(string value);
    partial void OnUsernameLwdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnPasswordFormatChanging(string value);
    partial void OnPasswordFormatChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnEmailLwdChanging(string value);
    partial void OnEmailLwdChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(System.Nullable<bool> value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(System.Nullable<bool> value);
    partial void OnIsLockedOutChanged();
    partial void OnLastLoginChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoginChanged();
    partial void OnLastActivityChanging(System.Nullable<System.DateTime> value);
    partial void OnLastActivityChanged();
    partial void OnLastPasswordChangeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastPasswordChangeChanged();
    partial void OnLastLockOutChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLockOutChanged();
    partial void OnFailedPasswordAttemptsChanging(System.Nullable<int> value);
    partial void OnFailedPasswordAttemptsChanged();
    partial void OnFailedAnswerAttemptsChanging(System.Nullable<int> value);
    partial void OnFailedAnswerAttemptsChanged();
    partial void OnFailedPasswordWindowChanging(System.Nullable<System.DateTime> value);
    partial void OnFailedPasswordWindowChanged();
    partial void OnFailedAnswerWindowChanging(System.Nullable<System.DateTime> value);
    partial void OnFailedAnswerWindowChanged();
    partial void OnJoinedChanging(System.Nullable<System.DateTime> value);
    partial void OnJoinedChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public yaf_prov_Membership()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(64) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					this.OnApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationID = value;
					this.SendPropertyChanged("ApplicationID");
					this.OnApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsernameLwd", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UsernameLwd
		{
			get
			{
				return this._UsernameLwd;
			}
			set
			{
				if ((this._UsernameLwd != value))
				{
					this.OnUsernameLwdChanging(value);
					this.SendPropertyChanging();
					this._UsernameLwd = value;
					this.SendPropertyChanged("UsernameLwd");
					this.OnUsernameLwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(256)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(256)")]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="NVarChar(256)")]
		public string PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this.OnPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._PasswordFormat = value;
					this.SendPropertyChanged("PasswordFormat");
					this.OnPasswordFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailLwd", DbType="NVarChar(256)")]
		public string EmailLwd
		{
			get
			{
				return this._EmailLwd;
			}
			set
			{
				if ((this._EmailLwd != value))
				{
					this.OnEmailLwdChanging(value);
					this.SendPropertyChanging();
					this._EmailLwd = value;
					this.SendPropertyChanged("EmailLwd");
					this.OnEmailLwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(256)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit")]
		public System.Nullable<bool> IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit")]
		public System.Nullable<bool> IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLogin", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLogin
		{
			get
			{
				return this._LastLogin;
			}
			set
			{
				if ((this._LastLogin != value))
				{
					this.OnLastLoginChanging(value);
					this.SendPropertyChanging();
					this._LastLogin = value;
					this.SendPropertyChanged("LastLogin");
					this.OnLastLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivity", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastActivity
		{
			get
			{
				return this._LastActivity;
			}
			set
			{
				if ((this._LastActivity != value))
				{
					this.OnLastActivityChanging(value);
					this.SendPropertyChanging();
					this._LastActivity = value;
					this.SendPropertyChanged("LastActivity");
					this.OnLastActivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChange", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastPasswordChange
		{
			get
			{
				return this._LastPasswordChange;
			}
			set
			{
				if ((this._LastPasswordChange != value))
				{
					this.OnLastPasswordChangeChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChange = value;
					this.SendPropertyChanged("LastPasswordChange");
					this.OnLastPasswordChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockOut", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLockOut
		{
			get
			{
				return this._LastLockOut;
			}
			set
			{
				if ((this._LastLockOut != value))
				{
					this.OnLastLockOutChanging(value);
					this.SendPropertyChanging();
					this._LastLockOut = value;
					this.SendPropertyChanged("LastLockOut");
					this.OnLastLockOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttempts", DbType="Int")]
		public System.Nullable<int> FailedPasswordAttempts
		{
			get
			{
				return this._FailedPasswordAttempts;
			}
			set
			{
				if ((this._FailedPasswordAttempts != value))
				{
					this.OnFailedPasswordAttemptsChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttempts = value;
					this.SendPropertyChanged("FailedPasswordAttempts");
					this.OnFailedPasswordAttemptsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedAnswerAttempts", DbType="Int")]
		public System.Nullable<int> FailedAnswerAttempts
		{
			get
			{
				return this._FailedAnswerAttempts;
			}
			set
			{
				if ((this._FailedAnswerAttempts != value))
				{
					this.OnFailedAnswerAttemptsChanging(value);
					this.SendPropertyChanging();
					this._FailedAnswerAttempts = value;
					this.SendPropertyChanged("FailedAnswerAttempts");
					this.OnFailedAnswerAttemptsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordWindow", DbType="DateTime")]
		public System.Nullable<System.DateTime> FailedPasswordWindow
		{
			get
			{
				return this._FailedPasswordWindow;
			}
			set
			{
				if ((this._FailedPasswordWindow != value))
				{
					this.OnFailedPasswordWindowChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordWindow = value;
					this.SendPropertyChanged("FailedPasswordWindow");
					this.OnFailedPasswordWindowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedAnswerWindow", DbType="DateTime")]
		public System.Nullable<System.DateTime> FailedAnswerWindow
		{
			get
			{
				return this._FailedAnswerWindow;
			}
			set
			{
				if ((this._FailedAnswerWindow != value))
				{
					this.OnFailedAnswerWindowChanging(value);
					this.SendPropertyChanging();
					this._FailedAnswerWindow = value;
					this.SendPropertyChanged("FailedAnswerWindow");
					this.OnFailedAnswerWindowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Joined", DbType="DateTime")]
		public System.Nullable<System.DateTime> Joined
		{
			get
			{
				return this._Joined;
			}
			set
			{
				if ((this._Joined != value))
				{
					this.OnJoinedChanging(value);
					this.SendPropertyChanging();
					this._Joined = value;
					this.SendPropertyChanged("Joined");
					this.OnJoinedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_prov_Profile")]
	public partial class yaf_prov_Profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserID;
		
		private System.DateTime _LastUpdatedDate;
		
		private string _RealName;
		
		private string _BlogServiceUrl;
		
		private string _Blog;
		
		private System.Nullable<int> _Gender;
		
		private string _MSN;
		
		private System.Nullable<System.DateTime> _Birthday;
		
		private string _BlogServiceUsername;
		
		private string _BlogServicePassword;
		
		private string _AIM;
		
		private string _GoogleTalk;
		
		private string _Location;
		
		private string _Interests;
		
		private string _Homepage;
		
		private string _Skype;
		
		private string _ICQ;
		
		private string _XMPP;
		
		private string _YIM;
		
		private string _Occupation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    partial void OnRealNameChanging(string value);
    partial void OnRealNameChanged();
    partial void OnBlogServiceUrlChanging(string value);
    partial void OnBlogServiceUrlChanged();
    partial void OnBlogChanging(string value);
    partial void OnBlogChanged();
    partial void OnGenderChanging(System.Nullable<int> value);
    partial void OnGenderChanged();
    partial void OnMSNChanging(string value);
    partial void OnMSNChanged();
    partial void OnBirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdayChanged();
    partial void OnBlogServiceUsernameChanging(string value);
    partial void OnBlogServiceUsernameChanged();
    partial void OnBlogServicePasswordChanging(string value);
    partial void OnBlogServicePasswordChanged();
    partial void OnAIMChanging(string value);
    partial void OnAIMChanged();
    partial void OnGoogleTalkChanging(string value);
    partial void OnGoogleTalkChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnInterestsChanging(string value);
    partial void OnInterestsChanged();
    partial void OnHomepageChanging(string value);
    partial void OnHomepageChanged();
    partial void OnSkypeChanging(string value);
    partial void OnSkypeChanged();
    partial void OnICQChanging(string value);
    partial void OnICQChanged();
    partial void OnXMPPChanging(string value);
    partial void OnXMPPChanged();
    partial void OnYIMChanging(string value);
    partial void OnYIMChanged();
    partial void OnOccupationChanging(string value);
    partial void OnOccupationChanged();
    #endregion
		
		public yaf_prov_Profile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(64) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealName", DbType="NVarChar(255)")]
		public string RealName
		{
			get
			{
				return this._RealName;
			}
			set
			{
				if ((this._RealName != value))
				{
					this.OnRealNameChanging(value);
					this.SendPropertyChanging();
					this._RealName = value;
					this.SendPropertyChanged("RealName");
					this.OnRealNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogServiceUrl", DbType="NVarChar(255)")]
		public string BlogServiceUrl
		{
			get
			{
				return this._BlogServiceUrl;
			}
			set
			{
				if ((this._BlogServiceUrl != value))
				{
					this.OnBlogServiceUrlChanging(value);
					this.SendPropertyChanging();
					this._BlogServiceUrl = value;
					this.SendPropertyChanged("BlogServiceUrl");
					this.OnBlogServiceUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Blog", DbType="NVarChar(255)")]
		public string Blog
		{
			get
			{
				return this._Blog;
			}
			set
			{
				if ((this._Blog != value))
				{
					this.OnBlogChanging(value);
					this.SendPropertyChanging();
					this._Blog = value;
					this.SendPropertyChanged("Blog");
					this.OnBlogChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Int")]
		public System.Nullable<int> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSN", DbType="NVarChar(255)")]
		public string MSN
		{
			get
			{
				return this._MSN;
			}
			set
			{
				if ((this._MSN != value))
				{
					this.OnMSNChanging(value);
					this.SendPropertyChanging();
					this._MSN = value;
					this.SendPropertyChanged("MSN");
					this.OnMSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="DateTime")]
		public System.Nullable<System.DateTime> Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogServiceUsername", DbType="NVarChar(255)")]
		public string BlogServiceUsername
		{
			get
			{
				return this._BlogServiceUsername;
			}
			set
			{
				if ((this._BlogServiceUsername != value))
				{
					this.OnBlogServiceUsernameChanging(value);
					this.SendPropertyChanging();
					this._BlogServiceUsername = value;
					this.SendPropertyChanged("BlogServiceUsername");
					this.OnBlogServiceUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogServicePassword", DbType="NVarChar(255)")]
		public string BlogServicePassword
		{
			get
			{
				return this._BlogServicePassword;
			}
			set
			{
				if ((this._BlogServicePassword != value))
				{
					this.OnBlogServicePasswordChanging(value);
					this.SendPropertyChanging();
					this._BlogServicePassword = value;
					this.SendPropertyChanged("BlogServicePassword");
					this.OnBlogServicePasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIM", DbType="NVarChar(255)")]
		public string AIM
		{
			get
			{
				return this._AIM;
			}
			set
			{
				if ((this._AIM != value))
				{
					this.OnAIMChanging(value);
					this.SendPropertyChanging();
					this._AIM = value;
					this.SendPropertyChanged("AIM");
					this.OnAIMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoogleTalk", DbType="NVarChar(255)")]
		public string GoogleTalk
		{
			get
			{
				return this._GoogleTalk;
			}
			set
			{
				if ((this._GoogleTalk != value))
				{
					this.OnGoogleTalkChanging(value);
					this.SendPropertyChanging();
					this._GoogleTalk = value;
					this.SendPropertyChanged("GoogleTalk");
					this.OnGoogleTalkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(255)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Interests", DbType="NVarChar(400)")]
		public string Interests
		{
			get
			{
				return this._Interests;
			}
			set
			{
				if ((this._Interests != value))
				{
					this.OnInterestsChanging(value);
					this.SendPropertyChanging();
					this._Interests = value;
					this.SendPropertyChanged("Interests");
					this.OnInterestsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Homepage", DbType="NVarChar(255)")]
		public string Homepage
		{
			get
			{
				return this._Homepage;
			}
			set
			{
				if ((this._Homepage != value))
				{
					this.OnHomepageChanging(value);
					this.SendPropertyChanging();
					this._Homepage = value;
					this.SendPropertyChanged("Homepage");
					this.OnHomepageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skype", DbType="NVarChar(255)")]
		public string Skype
		{
			get
			{
				return this._Skype;
			}
			set
			{
				if ((this._Skype != value))
				{
					this.OnSkypeChanging(value);
					this.SendPropertyChanging();
					this._Skype = value;
					this.SendPropertyChanged("Skype");
					this.OnSkypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ICQ", DbType="NVarChar(255)")]
		public string ICQ
		{
			get
			{
				return this._ICQ;
			}
			set
			{
				if ((this._ICQ != value))
				{
					this.OnICQChanging(value);
					this.SendPropertyChanging();
					this._ICQ = value;
					this.SendPropertyChanged("ICQ");
					this.OnICQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XMPP", DbType="NVarChar(255)")]
		public string XMPP
		{
			get
			{
				return this._XMPP;
			}
			set
			{
				if ((this._XMPP != value))
				{
					this.OnXMPPChanging(value);
					this.SendPropertyChanging();
					this._XMPP = value;
					this.SendPropertyChanged("XMPP");
					this.OnXMPPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YIM", DbType="NVarChar(255)")]
		public string YIM
		{
			get
			{
				return this._YIM;
			}
			set
			{
				if ((this._YIM != value))
				{
					this.OnYIMChanging(value);
					this.SendPropertyChanging();
					this._YIM = value;
					this.SendPropertyChanged("YIM");
					this.OnYIMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Occupation", DbType="NVarChar(400)")]
		public string Occupation
		{
			get
			{
				return this._Occupation;
			}
			set
			{
				if ((this._Occupation != value))
				{
					this.OnOccupationChanging(value);
					this.SendPropertyChanging();
					this._Occupation = value;
					this.SendPropertyChanged("Occupation");
					this.OnOccupationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_prov_Role")]
	public partial class yaf_prov_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _RoleID;
		
		private System.Guid _ApplicationID;
		
		private string _RoleName;
		
		private string _RoleNameLwd;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIDChanging(System.Guid value);
    partial void OnRoleIDChanged();
    partial void OnApplicationIDChanging(System.Guid value);
    partial void OnApplicationIDChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnRoleNameLwdChanging(string value);
    partial void OnRoleNameLwdChanged();
    #endregion
		
		public yaf_prov_Role()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					this.OnApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationID = value;
					this.SendPropertyChanged("ApplicationID");
					this.OnApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleNameLwd", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleNameLwd
		{
			get
			{
				return this._RoleNameLwd;
			}
			set
			{
				if ((this._RoleNameLwd != value))
				{
					this.OnRoleNameLwdChanging(value);
					this.SendPropertyChanging();
					this._RoleNameLwd = value;
					this.SendPropertyChanged("RoleNameLwd");
					this.OnRoleNameLwdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_prov_RoleMembership")]
	public partial class yaf_prov_RoleMembership
	{
		
		private System.Guid _RoleID;
		
		private string _UserID;
		
		public yaf_prov_RoleMembership()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this._RoleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_Rank")]
	public partial class yaf_Rank : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RankID;
		
		private int _BoardID;
		
		private string _Name;
		
		private System.Nullable<int> _MinPosts;
		
		private string _RankImage;
		
		private int _Flags;
		
		private System.Nullable<int> _PMLimit;
		
		private string _Style;
		
		private short _SortOrder;
		
		private string _Description;
		
		private int _UsrSigChars;
		
		private string _UsrSigBBCodes;
		
		private string _UsrSigHTMLTags;
		
		private int _UsrAlbums;
		
		private int _UsrAlbumImages;
		
		private EntitySet<yaf_User> _yaf_Users;
		
		private EntityRef<yaf_Board> _yaf_Board;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRankIDChanging(int value);
    partial void OnRankIDChanged();
    partial void OnBoardIDChanging(int value);
    partial void OnBoardIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMinPostsChanging(System.Nullable<int> value);
    partial void OnMinPostsChanged();
    partial void OnRankImageChanging(string value);
    partial void OnRankImageChanged();
    partial void OnFlagsChanging(int value);
    partial void OnFlagsChanged();
    partial void OnPMLimitChanging(System.Nullable<int> value);
    partial void OnPMLimitChanged();
    partial void OnStyleChanging(string value);
    partial void OnStyleChanged();
    partial void OnSortOrderChanging(short value);
    partial void OnSortOrderChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUsrSigCharsChanging(int value);
    partial void OnUsrSigCharsChanged();
    partial void OnUsrSigBBCodesChanging(string value);
    partial void OnUsrSigBBCodesChanged();
    partial void OnUsrSigHTMLTagsChanging(string value);
    partial void OnUsrSigHTMLTagsChanged();
    partial void OnUsrAlbumsChanging(int value);
    partial void OnUsrAlbumsChanged();
    partial void OnUsrAlbumImagesChanging(int value);
    partial void OnUsrAlbumImagesChanged();
    #endregion
		
		public yaf_Rank()
		{
			this._yaf_Users = new EntitySet<yaf_User>(new Action<yaf_User>(this.attach_yaf_Users), new Action<yaf_User>(this.detach_yaf_Users));
			this._yaf_Board = default(EntityRef<yaf_Board>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RankID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RankID
		{
			get
			{
				return this._RankID;
			}
			set
			{
				if ((this._RankID != value))
				{
					this.OnRankIDChanging(value);
					this.SendPropertyChanging();
					this._RankID = value;
					this.SendPropertyChanged("RankID");
					this.OnRankIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoardID", DbType="Int NOT NULL")]
		public int BoardID
		{
			get
			{
				return this._BoardID;
			}
			set
			{
				if ((this._BoardID != value))
				{
					if (this._yaf_Board.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBoardIDChanging(value);
					this.SendPropertyChanging();
					this._BoardID = value;
					this.SendPropertyChanged("BoardID");
					this.OnBoardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinPosts", DbType="Int")]
		public System.Nullable<int> MinPosts
		{
			get
			{
				return this._MinPosts;
			}
			set
			{
				if ((this._MinPosts != value))
				{
					this.OnMinPostsChanging(value);
					this.SendPropertyChanging();
					this._MinPosts = value;
					this.SendPropertyChanged("MinPosts");
					this.OnMinPostsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RankImage", DbType="NVarChar(50)")]
		public string RankImage
		{
			get
			{
				return this._RankImage;
			}
			set
			{
				if ((this._RankImage != value))
				{
					this.OnRankImageChanging(value);
					this.SendPropertyChanging();
					this._RankImage = value;
					this.SendPropertyChanged("RankImage");
					this.OnRankImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flags", DbType="Int NOT NULL")]
		public int Flags
		{
			get
			{
				return this._Flags;
			}
			set
			{
				if ((this._Flags != value))
				{
					this.OnFlagsChanging(value);
					this.SendPropertyChanging();
					this._Flags = value;
					this.SendPropertyChanged("Flags");
					this.OnFlagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PMLimit", DbType="Int")]
		public System.Nullable<int> PMLimit
		{
			get
			{
				return this._PMLimit;
			}
			set
			{
				if ((this._PMLimit != value))
				{
					this.OnPMLimitChanging(value);
					this.SendPropertyChanging();
					this._PMLimit = value;
					this.SendPropertyChanged("PMLimit");
					this.OnPMLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Style", DbType="NVarChar(255)")]
		public string Style
		{
			get
			{
				return this._Style;
			}
			set
			{
				if ((this._Style != value))
				{
					this.OnStyleChanging(value);
					this.SendPropertyChanging();
					this._Style = value;
					this.SendPropertyChanged("Style");
					this.OnStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="SmallInt NOT NULL")]
		public short SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(128)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsrSigChars", DbType="Int NOT NULL")]
		public int UsrSigChars
		{
			get
			{
				return this._UsrSigChars;
			}
			set
			{
				if ((this._UsrSigChars != value))
				{
					this.OnUsrSigCharsChanging(value);
					this.SendPropertyChanging();
					this._UsrSigChars = value;
					this.SendPropertyChanged("UsrSigChars");
					this.OnUsrSigCharsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsrSigBBCodes", DbType="NVarChar(255)")]
		public string UsrSigBBCodes
		{
			get
			{
				return this._UsrSigBBCodes;
			}
			set
			{
				if ((this._UsrSigBBCodes != value))
				{
					this.OnUsrSigBBCodesChanging(value);
					this.SendPropertyChanging();
					this._UsrSigBBCodes = value;
					this.SendPropertyChanged("UsrSigBBCodes");
					this.OnUsrSigBBCodesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsrSigHTMLTags", DbType="NVarChar(255)")]
		public string UsrSigHTMLTags
		{
			get
			{
				return this._UsrSigHTMLTags;
			}
			set
			{
				if ((this._UsrSigHTMLTags != value))
				{
					this.OnUsrSigHTMLTagsChanging(value);
					this.SendPropertyChanging();
					this._UsrSigHTMLTags = value;
					this.SendPropertyChanged("UsrSigHTMLTags");
					this.OnUsrSigHTMLTagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsrAlbums", DbType="Int NOT NULL")]
		public int UsrAlbums
		{
			get
			{
				return this._UsrAlbums;
			}
			set
			{
				if ((this._UsrAlbums != value))
				{
					this.OnUsrAlbumsChanging(value);
					this.SendPropertyChanging();
					this._UsrAlbums = value;
					this.SendPropertyChanged("UsrAlbums");
					this.OnUsrAlbumsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsrAlbumImages", DbType="Int NOT NULL")]
		public int UsrAlbumImages
		{
			get
			{
				return this._UsrAlbumImages;
			}
			set
			{
				if ((this._UsrAlbumImages != value))
				{
					this.OnUsrAlbumImagesChanging(value);
					this.SendPropertyChanging();
					this._UsrAlbumImages = value;
					this.SendPropertyChanged("UsrAlbumImages");
					this.OnUsrAlbumImagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Rank_yaf_User", Storage="_yaf_Users", ThisKey="RankID", OtherKey="RankID")]
		public EntitySet<yaf_User> yaf_Users
		{
			get
			{
				return this._yaf_Users;
			}
			set
			{
				this._yaf_Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Board_yaf_Rank", Storage="_yaf_Board", ThisKey="BoardID", OtherKey="BoardID", IsForeignKey=true)]
		public yaf_Board yaf_Board
		{
			get
			{
				return this._yaf_Board.Entity;
			}
			set
			{
				yaf_Board previousValue = this._yaf_Board.Entity;
				if (((previousValue != value) 
							|| (this._yaf_Board.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_Board.Entity = null;
						previousValue.yaf_Ranks.Remove(this);
					}
					this._yaf_Board.Entity = value;
					if ((value != null))
					{
						value.yaf_Ranks.Add(this);
						this._BoardID = value.BoardID;
					}
					else
					{
						this._BoardID = default(int);
					}
					this.SendPropertyChanged("yaf_Board");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_yaf_Users(yaf_User entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Rank = this;
		}
		
		private void detach_yaf_Users(yaf_User entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Rank = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_Registry")]
	public partial class yaf_Registry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RegistryID;
		
		private string _Name;
		
		private string _Value;
		
		private System.Nullable<int> _BoardID;
		
		private EntityRef<yaf_Board> _yaf_Board;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRegistryIDChanging(int value);
    partial void OnRegistryIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnBoardIDChanging(System.Nullable<int> value);
    partial void OnBoardIDChanged();
    #endregion
		
		public yaf_Registry()
		{
			this._yaf_Board = default(EntityRef<yaf_Board>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RegistryID
		{
			get
			{
				return this._RegistryID;
			}
			set
			{
				if ((this._RegistryID != value))
				{
					this.OnRegistryIDChanging(value);
					this.SendPropertyChanging();
					this._RegistryID = value;
					this.SendPropertyChanged("RegistryID");
					this.OnRegistryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoardID", DbType="Int")]
		public System.Nullable<int> BoardID
		{
			get
			{
				return this._BoardID;
			}
			set
			{
				if ((this._BoardID != value))
				{
					if (this._yaf_Board.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBoardIDChanging(value);
					this.SendPropertyChanging();
					this._BoardID = value;
					this.SendPropertyChanged("BoardID");
					this.OnBoardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Board_yaf_Registry", Storage="_yaf_Board", ThisKey="BoardID", OtherKey="BoardID", IsForeignKey=true, DeleteRule="CASCADE")]
		public yaf_Board yaf_Board
		{
			get
			{
				return this._yaf_Board.Entity;
			}
			set
			{
				yaf_Board previousValue = this._yaf_Board.Entity;
				if (((previousValue != value) 
							|| (this._yaf_Board.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_Board.Entity = null;
						previousValue.yaf_Registries.Remove(this);
					}
					this._yaf_Board.Entity = value;
					if ((value != null))
					{
						value.yaf_Registries.Add(this);
						this._BoardID = value.BoardID;
					}
					else
					{
						this._BoardID = default(Nullable<int>);
					}
					this.SendPropertyChanged("yaf_Board");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_Replace_Words")]
	public partial class yaf_Replace_Word : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _BoardId;
		
		private string _BadWord;
		
		private string _GoodWord;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBoardIdChanging(int value);
    partial void OnBoardIdChanged();
    partial void OnBadWordChanging(string value);
    partial void OnBadWordChanged();
    partial void OnGoodWordChanging(string value);
    partial void OnGoodWordChanged();
    #endregion
		
		public yaf_Replace_Word()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoardId", DbType="Int NOT NULL")]
		public int BoardId
		{
			get
			{
				return this._BoardId;
			}
			set
			{
				if ((this._BoardId != value))
				{
					this.OnBoardIdChanging(value);
					this.SendPropertyChanging();
					this._BoardId = value;
					this.SendPropertyChanged("BoardId");
					this.OnBoardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BadWord", DbType="NVarChar(255)")]
		public string BadWord
		{
			get
			{
				return this._BadWord;
			}
			set
			{
				if ((this._BadWord != value))
				{
					this.OnBadWordChanging(value);
					this.SendPropertyChanging();
					this._BadWord = value;
					this.SendPropertyChanged("BadWord");
					this.OnBadWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodWord", DbType="NVarChar(255)")]
		public string GoodWord
		{
			get
			{
				return this._GoodWord;
			}
			set
			{
				if ((this._GoodWord != value))
				{
					this.OnGoodWordChanging(value);
					this.SendPropertyChanging();
					this._GoodWord = value;
					this.SendPropertyChanged("GoodWord");
					this.OnGoodWordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_ShoutboxMessage")]
	public partial class yaf_ShoutboxMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ShoutBoxMessageID;
		
		private int _BoardId;
		
		private System.Nullable<int> _UserID;
		
		private string _UserName;
		
		private string _Message;
		
		private System.DateTime _Date;
		
		private string _IP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShoutBoxMessageIDChanging(int value);
    partial void OnShoutBoxMessageIDChanged();
    partial void OnBoardIdChanging(int value);
    partial void OnBoardIdChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnIPChanging(string value);
    partial void OnIPChanged();
    #endregion
		
		public yaf_ShoutboxMessage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShoutBoxMessageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ShoutBoxMessageID
		{
			get
			{
				return this._ShoutBoxMessageID;
			}
			set
			{
				if ((this._ShoutBoxMessageID != value))
				{
					this.OnShoutBoxMessageIDChanging(value);
					this.SendPropertyChanging();
					this._ShoutBoxMessageID = value;
					this.SendPropertyChanged("ShoutBoxMessageID");
					this.OnShoutBoxMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoardId", DbType="Int NOT NULL")]
		public int BoardId
		{
			get
			{
				return this._BoardId;
			}
			set
			{
				if ((this._BoardId != value))
				{
					this.OnBoardIdChanging(value);
					this.SendPropertyChanging();
					this._BoardId = value;
					this.SendPropertyChanged("BoardId");
					this.OnBoardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this.OnIPChanging(value);
					this.SendPropertyChanging();
					this._IP = value;
					this.SendPropertyChanged("IP");
					this.OnIPChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_Smiley")]
	public partial class yaf_Smiley : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SmileyID;
		
		private int _BoardID;
		
		private string _Code;
		
		private string _Icon;
		
		private string _Emoticon;
		
		private byte _SortOrder;
		
		private EntityRef<yaf_Board> _yaf_Board;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSmileyIDChanging(int value);
    partial void OnSmileyIDChanged();
    partial void OnBoardIDChanging(int value);
    partial void OnBoardIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnIconChanging(string value);
    partial void OnIconChanged();
    partial void OnEmoticonChanging(string value);
    partial void OnEmoticonChanged();
    partial void OnSortOrderChanging(byte value);
    partial void OnSortOrderChanged();
    #endregion
		
		public yaf_Smiley()
		{
			this._yaf_Board = default(EntityRef<yaf_Board>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmileyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SmileyID
		{
			get
			{
				return this._SmileyID;
			}
			set
			{
				if ((this._SmileyID != value))
				{
					this.OnSmileyIDChanging(value);
					this.SendPropertyChanging();
					this._SmileyID = value;
					this.SendPropertyChanged("SmileyID");
					this.OnSmileyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoardID", DbType="Int NOT NULL")]
		public int BoardID
		{
			get
			{
				return this._BoardID;
			}
			set
			{
				if ((this._BoardID != value))
				{
					if (this._yaf_Board.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBoardIDChanging(value);
					this.SendPropertyChanging();
					this._BoardID = value;
					this.SendPropertyChanged("BoardID");
					this.OnBoardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Icon", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Icon
		{
			get
			{
				return this._Icon;
			}
			set
			{
				if ((this._Icon != value))
				{
					this.OnIconChanging(value);
					this.SendPropertyChanging();
					this._Icon = value;
					this.SendPropertyChanged("Icon");
					this.OnIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emoticon", DbType="NVarChar(50)")]
		public string Emoticon
		{
			get
			{
				return this._Emoticon;
			}
			set
			{
				if ((this._Emoticon != value))
				{
					this.OnEmoticonChanging(value);
					this.SendPropertyChanging();
					this._Emoticon = value;
					this.SendPropertyChanged("Emoticon");
					this.OnEmoticonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="TinyInt NOT NULL")]
		public byte SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Board_yaf_Smiley", Storage="_yaf_Board", ThisKey="BoardID", OtherKey="BoardID", IsForeignKey=true)]
		public yaf_Board yaf_Board
		{
			get
			{
				return this._yaf_Board.Entity;
			}
			set
			{
				yaf_Board previousValue = this._yaf_Board.Entity;
				if (((previousValue != value) 
							|| (this._yaf_Board.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_Board.Entity = null;
						previousValue.yaf_Smileys.Remove(this);
					}
					this._yaf_Board.Entity = value;
					if ((value != null))
					{
						value.yaf_Smileys.Add(this);
						this._BoardID = value.BoardID;
					}
					else
					{
						this._BoardID = default(int);
					}
					this.SendPropertyChanged("yaf_Board");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_Thanks")]
	public partial class yaf_Thank : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ThanksID;
		
		private int _ThanksFromUserID;
		
		private int _ThanksToUserID;
		
		private int _MessageID;
		
		private System.DateTime _ThanksDate;
		
		private EntityRef<yaf_User> _yaf_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThanksIDChanging(int value);
    partial void OnThanksIDChanged();
    partial void OnThanksFromUserIDChanging(int value);
    partial void OnThanksFromUserIDChanged();
    partial void OnThanksToUserIDChanging(int value);
    partial void OnThanksToUserIDChanged();
    partial void OnMessageIDChanging(int value);
    partial void OnMessageIDChanged();
    partial void OnThanksDateChanging(System.DateTime value);
    partial void OnThanksDateChanged();
    #endregion
		
		public yaf_Thank()
		{
			this._yaf_User = default(EntityRef<yaf_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanksID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ThanksID
		{
			get
			{
				return this._ThanksID;
			}
			set
			{
				if ((this._ThanksID != value))
				{
					this.OnThanksIDChanging(value);
					this.SendPropertyChanging();
					this._ThanksID = value;
					this.SendPropertyChanged("ThanksID");
					this.OnThanksIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanksFromUserID", DbType="Int NOT NULL")]
		public int ThanksFromUserID
		{
			get
			{
				return this._ThanksFromUserID;
			}
			set
			{
				if ((this._ThanksFromUserID != value))
				{
					if (this._yaf_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThanksFromUserIDChanging(value);
					this.SendPropertyChanging();
					this._ThanksFromUserID = value;
					this.SendPropertyChanged("ThanksFromUserID");
					this.OnThanksFromUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanksToUserID", DbType="Int NOT NULL")]
		public int ThanksToUserID
		{
			get
			{
				return this._ThanksToUserID;
			}
			set
			{
				if ((this._ThanksToUserID != value))
				{
					this.OnThanksToUserIDChanging(value);
					this.SendPropertyChanging();
					this._ThanksToUserID = value;
					this.SendPropertyChanged("ThanksToUserID");
					this.OnThanksToUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", DbType="Int NOT NULL")]
		public int MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this.OnMessageIDChanging(value);
					this.SendPropertyChanging();
					this._MessageID = value;
					this.SendPropertyChanged("MessageID");
					this.OnMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanksDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime ThanksDate
		{
			get
			{
				return this._ThanksDate;
			}
			set
			{
				if ((this._ThanksDate != value))
				{
					this.OnThanksDateChanging(value);
					this.SendPropertyChanging();
					this._ThanksDate = value;
					this.SendPropertyChanged("ThanksDate");
					this.OnThanksDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_User_yaf_Thank", Storage="_yaf_User", ThisKey="ThanksFromUserID", OtherKey="UserID", IsForeignKey=true)]
		public yaf_User yaf_User
		{
			get
			{
				return this._yaf_User.Entity;
			}
			set
			{
				yaf_User previousValue = this._yaf_User.Entity;
				if (((previousValue != value) 
							|| (this._yaf_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_User.Entity = null;
						previousValue.yaf_Thanks.Remove(this);
					}
					this._yaf_User.Entity = value;
					if ((value != null))
					{
						value.yaf_Thanks.Add(this);
						this._ThanksFromUserID = value.UserID;
					}
					else
					{
						this._ThanksFromUserID = default(int);
					}
					this.SendPropertyChanged("yaf_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_Topic")]
	public partial class yaf_Topic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TopicID;
		
		private int _ForumID;
		
		private int _UserID;
		
		private string _UserName;
		
		private System.DateTime _Posted;
		
		private string _Topic;
		
		private int _Views;
		
		private short _Priority;
		
		private System.Nullable<int> _PollID;
		
		private System.Nullable<int> _TopicMovedID;
		
		private System.Nullable<System.DateTime> _LastPosted;
		
		private System.Nullable<int> _LastMessageID;
		
		private System.Nullable<int> _LastUserID;
		
		private string _LastUserName;
		
		private int _NumPosts;
		
		private int _Flags;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.Nullable<bool> _IsQuestion;
		
		private System.Nullable<int> _AnswerMessageId;
		
		private System.Nullable<int> _LastMessageFlags;
		
		private string _TopicImage;
		
		private EntitySet<yaf_WatchTopic> _yaf_WatchTopics;
		
		private EntitySet<yaf_Active> _yaf_Actives;
		
		private EntitySet<yaf_FavoriteTopic> _yaf_FavoriteTopics;
		
		private EntitySet<yaf_Forum> _yaf_Forums;
		
		private EntitySet<yaf_Message> _yaf_Messages;
		
		private EntitySet<yaf_NntpTopic> _yaf_NntpTopics;
		
		private EntitySet<yaf_Topic> _yaf_Topics;
		
		private EntityRef<yaf_Forum> _yaf_Forum;
		
		private EntityRef<yaf_Message> _yaf_Message;
		
		private EntityRef<yaf_PollGroupCluster> _yaf_PollGroupCluster;
		
		private EntityRef<yaf_Topic> _yaf_Topic1;
		
		private EntityRef<yaf_User> _yaf_User;
		
		private EntityRef<yaf_User> _yaf_User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTopicIDChanging(int value);
    partial void OnTopicIDChanged();
    partial void OnForumIDChanging(int value);
    partial void OnForumIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPostedChanging(System.DateTime value);
    partial void OnPostedChanged();
    partial void OnTopicChanging(string value);
    partial void OnTopicChanged();
    partial void OnViewsChanging(int value);
    partial void OnViewsChanged();
    partial void OnPriorityChanging(short value);
    partial void OnPriorityChanged();
    partial void OnPollIDChanging(System.Nullable<int> value);
    partial void OnPollIDChanged();
    partial void OnTopicMovedIDChanging(System.Nullable<int> value);
    partial void OnTopicMovedIDChanged();
    partial void OnLastPostedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastPostedChanged();
    partial void OnLastMessageIDChanging(System.Nullable<int> value);
    partial void OnLastMessageIDChanged();
    partial void OnLastUserIDChanging(System.Nullable<int> value);
    partial void OnLastUserIDChanged();
    partial void OnLastUserNameChanging(string value);
    partial void OnLastUserNameChanged();
    partial void OnNumPostsChanging(int value);
    partial void OnNumPostsChanged();
    partial void OnFlagsChanging(int value);
    partial void OnFlagsChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnIsQuestionChanging(System.Nullable<bool> value);
    partial void OnIsQuestionChanged();
    partial void OnAnswerMessageIdChanging(System.Nullable<int> value);
    partial void OnAnswerMessageIdChanged();
    partial void OnLastMessageFlagsChanging(System.Nullable<int> value);
    partial void OnLastMessageFlagsChanged();
    partial void OnTopicImageChanging(string value);
    partial void OnTopicImageChanged();
    #endregion
		
		public yaf_Topic()
		{
			this._yaf_WatchTopics = new EntitySet<yaf_WatchTopic>(new Action<yaf_WatchTopic>(this.attach_yaf_WatchTopics), new Action<yaf_WatchTopic>(this.detach_yaf_WatchTopics));
			this._yaf_Actives = new EntitySet<yaf_Active>(new Action<yaf_Active>(this.attach_yaf_Actives), new Action<yaf_Active>(this.detach_yaf_Actives));
			this._yaf_FavoriteTopics = new EntitySet<yaf_FavoriteTopic>(new Action<yaf_FavoriteTopic>(this.attach_yaf_FavoriteTopics), new Action<yaf_FavoriteTopic>(this.detach_yaf_FavoriteTopics));
			this._yaf_Forums = new EntitySet<yaf_Forum>(new Action<yaf_Forum>(this.attach_yaf_Forums), new Action<yaf_Forum>(this.detach_yaf_Forums));
			this._yaf_Messages = new EntitySet<yaf_Message>(new Action<yaf_Message>(this.attach_yaf_Messages), new Action<yaf_Message>(this.detach_yaf_Messages));
			this._yaf_NntpTopics = new EntitySet<yaf_NntpTopic>(new Action<yaf_NntpTopic>(this.attach_yaf_NntpTopics), new Action<yaf_NntpTopic>(this.detach_yaf_NntpTopics));
			this._yaf_Topics = new EntitySet<yaf_Topic>(new Action<yaf_Topic>(this.attach_yaf_Topics), new Action<yaf_Topic>(this.detach_yaf_Topics));
			this._yaf_Forum = default(EntityRef<yaf_Forum>);
			this._yaf_Message = default(EntityRef<yaf_Message>);
			this._yaf_PollGroupCluster = default(EntityRef<yaf_PollGroupCluster>);
			this._yaf_Topic1 = default(EntityRef<yaf_Topic>);
			this._yaf_User = default(EntityRef<yaf_User>);
			this._yaf_User1 = default(EntityRef<yaf_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TopicID
		{
			get
			{
				return this._TopicID;
			}
			set
			{
				if ((this._TopicID != value))
				{
					this.OnTopicIDChanging(value);
					this.SendPropertyChanging();
					this._TopicID = value;
					this.SendPropertyChanged("TopicID");
					this.OnTopicIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumID", DbType="Int NOT NULL")]
		public int ForumID
		{
			get
			{
				return this._ForumID;
			}
			set
			{
				if ((this._ForumID != value))
				{
					if (this._yaf_Forum.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForumIDChanging(value);
					this.SendPropertyChanging();
					this._ForumID = value;
					this.SendPropertyChanged("ForumID");
					this.OnForumIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._yaf_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(255)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Posted", DbType="DateTime NOT NULL")]
		public System.DateTime Posted
		{
			get
			{
				return this._Posted;
			}
			set
			{
				if ((this._Posted != value))
				{
					this.OnPostedChanging(value);
					this.SendPropertyChanging();
					this._Posted = value;
					this.SendPropertyChanged("Posted");
					this.OnPostedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Topic", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Topic
		{
			get
			{
				return this._Topic;
			}
			set
			{
				if ((this._Topic != value))
				{
					this.OnTopicChanging(value);
					this.SendPropertyChanging();
					this._Topic = value;
					this.SendPropertyChanged("Topic");
					this.OnTopicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Views", DbType="Int NOT NULL")]
		public int Views
		{
			get
			{
				return this._Views;
			}
			set
			{
				if ((this._Views != value))
				{
					this.OnViewsChanging(value);
					this.SendPropertyChanging();
					this._Views = value;
					this.SendPropertyChanged("Views");
					this.OnViewsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="SmallInt NOT NULL")]
		public short Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollID", DbType="Int")]
		public System.Nullable<int> PollID
		{
			get
			{
				return this._PollID;
			}
			set
			{
				if ((this._PollID != value))
				{
					if (this._yaf_PollGroupCluster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPollIDChanging(value);
					this.SendPropertyChanging();
					this._PollID = value;
					this.SendPropertyChanged("PollID");
					this.OnPollIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicMovedID", DbType="Int")]
		public System.Nullable<int> TopicMovedID
		{
			get
			{
				return this._TopicMovedID;
			}
			set
			{
				if ((this._TopicMovedID != value))
				{
					if (this._yaf_Topic1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTopicMovedIDChanging(value);
					this.SendPropertyChanging();
					this._TopicMovedID = value;
					this.SendPropertyChanged("TopicMovedID");
					this.OnTopicMovedIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPosted", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastPosted
		{
			get
			{
				return this._LastPosted;
			}
			set
			{
				if ((this._LastPosted != value))
				{
					this.OnLastPostedChanging(value);
					this.SendPropertyChanging();
					this._LastPosted = value;
					this.SendPropertyChanged("LastPosted");
					this.OnLastPostedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastMessageID", DbType="Int")]
		public System.Nullable<int> LastMessageID
		{
			get
			{
				return this._LastMessageID;
			}
			set
			{
				if ((this._LastMessageID != value))
				{
					if (this._yaf_Message.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLastMessageIDChanging(value);
					this.SendPropertyChanging();
					this._LastMessageID = value;
					this.SendPropertyChanged("LastMessageID");
					this.OnLastMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUserID", DbType="Int")]
		public System.Nullable<int> LastUserID
		{
			get
			{
				return this._LastUserID;
			}
			set
			{
				if ((this._LastUserID != value))
				{
					if (this._yaf_User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLastUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastUserID = value;
					this.SendPropertyChanged("LastUserID");
					this.OnLastUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUserName", DbType="NVarChar(255)")]
		public string LastUserName
		{
			get
			{
				return this._LastUserName;
			}
			set
			{
				if ((this._LastUserName != value))
				{
					this.OnLastUserNameChanging(value);
					this.SendPropertyChanging();
					this._LastUserName = value;
					this.SendPropertyChanged("LastUserName");
					this.OnLastUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumPosts", DbType="Int NOT NULL")]
		public int NumPosts
		{
			get
			{
				return this._NumPosts;
			}
			set
			{
				if ((this._NumPosts != value))
				{
					this.OnNumPostsChanging(value);
					this.SendPropertyChanging();
					this._NumPosts = value;
					this.SendPropertyChanged("NumPosts");
					this.OnNumPostsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flags", DbType="Int NOT NULL")]
		public int Flags
		{
			get
			{
				return this._Flags;
			}
			set
			{
				if ((this._Flags != value))
				{
					this.OnFlagsChanging(value);
					this.SendPropertyChanging();
					this._Flags = value;
					this.SendPropertyChanged("Flags");
					this.OnFlagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", AutoSync=AutoSync.Always, DbType="Bit", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsQuestion", AutoSync=AutoSync.Always, DbType="Bit", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsQuestion
		{
			get
			{
				return this._IsQuestion;
			}
			set
			{
				if ((this._IsQuestion != value))
				{
					this.OnIsQuestionChanging(value);
					this.SendPropertyChanging();
					this._IsQuestion = value;
					this.SendPropertyChanged("IsQuestion");
					this.OnIsQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerMessageId", DbType="Int")]
		public System.Nullable<int> AnswerMessageId
		{
			get
			{
				return this._AnswerMessageId;
			}
			set
			{
				if ((this._AnswerMessageId != value))
				{
					this.OnAnswerMessageIdChanging(value);
					this.SendPropertyChanging();
					this._AnswerMessageId = value;
					this.SendPropertyChanged("AnswerMessageId");
					this.OnAnswerMessageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastMessageFlags", DbType="Int")]
		public System.Nullable<int> LastMessageFlags
		{
			get
			{
				return this._LastMessageFlags;
			}
			set
			{
				if ((this._LastMessageFlags != value))
				{
					this.OnLastMessageFlagsChanging(value);
					this.SendPropertyChanging();
					this._LastMessageFlags = value;
					this.SendPropertyChanged("LastMessageFlags");
					this.OnLastMessageFlagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicImage", DbType="NVarChar(255)")]
		public string TopicImage
		{
			get
			{
				return this._TopicImage;
			}
			set
			{
				if ((this._TopicImage != value))
				{
					this.OnTopicImageChanging(value);
					this.SendPropertyChanging();
					this._TopicImage = value;
					this.SendPropertyChanged("TopicImage");
					this.OnTopicImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Topic_yaf_WatchTopic", Storage="_yaf_WatchTopics", ThisKey="TopicID", OtherKey="TopicID")]
		public EntitySet<yaf_WatchTopic> yaf_WatchTopics
		{
			get
			{
				return this._yaf_WatchTopics;
			}
			set
			{
				this._yaf_WatchTopics.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Topic_yaf_Active", Storage="_yaf_Actives", ThisKey="TopicID", OtherKey="TopicID")]
		public EntitySet<yaf_Active> yaf_Actives
		{
			get
			{
				return this._yaf_Actives;
			}
			set
			{
				this._yaf_Actives.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Topic_yaf_FavoriteTopic", Storage="_yaf_FavoriteTopics", ThisKey="TopicID", OtherKey="TopicID")]
		public EntitySet<yaf_FavoriteTopic> yaf_FavoriteTopics
		{
			get
			{
				return this._yaf_FavoriteTopics;
			}
			set
			{
				this._yaf_FavoriteTopics.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Topic_yaf_Forum", Storage="_yaf_Forums", ThisKey="TopicID", OtherKey="LastTopicID")]
		public EntitySet<yaf_Forum> yaf_Forums
		{
			get
			{
				return this._yaf_Forums;
			}
			set
			{
				this._yaf_Forums.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Topic_yaf_Message", Storage="_yaf_Messages", ThisKey="TopicID", OtherKey="TopicID")]
		public EntitySet<yaf_Message> yaf_Messages
		{
			get
			{
				return this._yaf_Messages;
			}
			set
			{
				this._yaf_Messages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Topic_yaf_NntpTopic", Storage="_yaf_NntpTopics", ThisKey="TopicID", OtherKey="TopicID")]
		public EntitySet<yaf_NntpTopic> yaf_NntpTopics
		{
			get
			{
				return this._yaf_NntpTopics;
			}
			set
			{
				this._yaf_NntpTopics.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Topic_yaf_Topic", Storage="_yaf_Topics", ThisKey="TopicID", OtherKey="TopicMovedID")]
		public EntitySet<yaf_Topic> yaf_Topics
		{
			get
			{
				return this._yaf_Topics;
			}
			set
			{
				this._yaf_Topics.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Forum_yaf_Topic", Storage="_yaf_Forum", ThisKey="ForumID", OtherKey="ForumID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public yaf_Forum yaf_Forum
		{
			get
			{
				return this._yaf_Forum.Entity;
			}
			set
			{
				yaf_Forum previousValue = this._yaf_Forum.Entity;
				if (((previousValue != value) 
							|| (this._yaf_Forum.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_Forum.Entity = null;
						previousValue.yaf_Topics.Remove(this);
					}
					this._yaf_Forum.Entity = value;
					if ((value != null))
					{
						value.yaf_Topics.Add(this);
						this._ForumID = value.ForumID;
					}
					else
					{
						this._ForumID = default(int);
					}
					this.SendPropertyChanged("yaf_Forum");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Message_yaf_Topic", Storage="_yaf_Message", ThisKey="LastMessageID", OtherKey="MessageID", IsForeignKey=true)]
		public yaf_Message yaf_Message
		{
			get
			{
				return this._yaf_Message.Entity;
			}
			set
			{
				yaf_Message previousValue = this._yaf_Message.Entity;
				if (((previousValue != value) 
							|| (this._yaf_Message.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_Message.Entity = null;
						previousValue.yaf_Topics.Remove(this);
					}
					this._yaf_Message.Entity = value;
					if ((value != null))
					{
						value.yaf_Topics.Add(this);
						this._LastMessageID = value.MessageID;
					}
					else
					{
						this._LastMessageID = default(Nullable<int>);
					}
					this.SendPropertyChanged("yaf_Message");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_PollGroupCluster_yaf_Topic", Storage="_yaf_PollGroupCluster", ThisKey="PollID", OtherKey="PollGroupID", IsForeignKey=true)]
		public yaf_PollGroupCluster yaf_PollGroupCluster
		{
			get
			{
				return this._yaf_PollGroupCluster.Entity;
			}
			set
			{
				yaf_PollGroupCluster previousValue = this._yaf_PollGroupCluster.Entity;
				if (((previousValue != value) 
							|| (this._yaf_PollGroupCluster.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_PollGroupCluster.Entity = null;
						previousValue.yaf_Topics.Remove(this);
					}
					this._yaf_PollGroupCluster.Entity = value;
					if ((value != null))
					{
						value.yaf_Topics.Add(this);
						this._PollID = value.PollGroupID;
					}
					else
					{
						this._PollID = default(Nullable<int>);
					}
					this.SendPropertyChanged("yaf_PollGroupCluster");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Topic_yaf_Topic", Storage="_yaf_Topic1", ThisKey="TopicMovedID", OtherKey="TopicID", IsForeignKey=true)]
		public yaf_Topic yaf_Topic1
		{
			get
			{
				return this._yaf_Topic1.Entity;
			}
			set
			{
				yaf_Topic previousValue = this._yaf_Topic1.Entity;
				if (((previousValue != value) 
							|| (this._yaf_Topic1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_Topic1.Entity = null;
						previousValue.yaf_Topics.Remove(this);
					}
					this._yaf_Topic1.Entity = value;
					if ((value != null))
					{
						value.yaf_Topics.Add(this);
						this._TopicMovedID = value.TopicID;
					}
					else
					{
						this._TopicMovedID = default(Nullable<int>);
					}
					this.SendPropertyChanged("yaf_Topic1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_User_yaf_Topic", Storage="_yaf_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public yaf_User yaf_User
		{
			get
			{
				return this._yaf_User.Entity;
			}
			set
			{
				yaf_User previousValue = this._yaf_User.Entity;
				if (((previousValue != value) 
							|| (this._yaf_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_User.Entity = null;
						previousValue.yaf_Topics.Remove(this);
					}
					this._yaf_User.Entity = value;
					if ((value != null))
					{
						value.yaf_Topics.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("yaf_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_User_yaf_Topic1", Storage="_yaf_User1", ThisKey="LastUserID", OtherKey="UserID", IsForeignKey=true)]
		public yaf_User yaf_User1
		{
			get
			{
				return this._yaf_User1.Entity;
			}
			set
			{
				yaf_User previousValue = this._yaf_User1.Entity;
				if (((previousValue != value) 
							|| (this._yaf_User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_User1.Entity = null;
						previousValue.yaf_Topics1.Remove(this);
					}
					this._yaf_User1.Entity = value;
					if ((value != null))
					{
						value.yaf_Topics1.Add(this);
						this._LastUserID = value.UserID;
					}
					else
					{
						this._LastUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("yaf_User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_yaf_WatchTopics(yaf_WatchTopic entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Topic = this;
		}
		
		private void detach_yaf_WatchTopics(yaf_WatchTopic entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Topic = null;
		}
		
		private void attach_yaf_Actives(yaf_Active entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Topic = this;
		}
		
		private void detach_yaf_Actives(yaf_Active entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Topic = null;
		}
		
		private void attach_yaf_FavoriteTopics(yaf_FavoriteTopic entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Topic = this;
		}
		
		private void detach_yaf_FavoriteTopics(yaf_FavoriteTopic entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Topic = null;
		}
		
		private void attach_yaf_Forums(yaf_Forum entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Topic = this;
		}
		
		private void detach_yaf_Forums(yaf_Forum entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Topic = null;
		}
		
		private void attach_yaf_Messages(yaf_Message entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Topic = this;
		}
		
		private void detach_yaf_Messages(yaf_Message entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Topic = null;
		}
		
		private void attach_yaf_NntpTopics(yaf_NntpTopic entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Topic = this;
		}
		
		private void detach_yaf_NntpTopics(yaf_NntpTopic entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Topic = null;
		}
		
		private void attach_yaf_Topics(yaf_Topic entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Topic1 = this;
		}
		
		private void detach_yaf_Topics(yaf_Topic entity)
		{
			this.SendPropertyChanging();
			entity.yaf_Topic1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_User")]
	public partial class yaf_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private int _BoardID;
		
		private string _ProviderUserKey;
		
		private string _Name;
		
		private string _DisplayName;
		
		private string _Password;
		
		private string _Email;
		
		private System.DateTime _Joined;
		
		private System.DateTime _LastVisit;
		
		private string _IP;
		
		private int _NumPosts;
		
		private int _TimeZone;
		
		private string _Avatar;
		
		private string _Signature;
		
		private System.Data.Linq.Binary _AvatarImage;
		
		private string _AvatarImageType;
		
		private int _RankID;
		
		private System.Nullable<System.DateTime> _Suspended;
		
		private string _LanguageFile;
		
		private string _ThemeFile;
		
		private string _TextEditor;
		
		private bool _OverrideDefaultThemes;
		
		private bool _PMNotification;
		
		private bool _AutoWatchTopics;
		
		private bool _DailyDigest;
		
		private System.Nullable<int> _NotificationType;
		
		private int _Flags;
		
		private int _Points;
		
		private System.Nullable<bool> _IsApproved;
		
		private System.Nullable<bool> _IsActiveExcluded;
		
		private string _Culture;
		
		private EntitySet<yaf_WatchTopic> _yaf_WatchTopics;
		
		private EntitySet<FF_Article> _FF_Articles;
		
		private EntitySet<FF_UserComment> _FF_UserComments;
		
		private EntitySet<yaf_Active> _yaf_Actives;
		
		private EntitySet<yaf_Buddy> _yaf_Buddies;
		
		private EntitySet<yaf_CheckEmail> _yaf_CheckEmails;
		
		private EntitySet<yaf_EventLog> _yaf_EventLogs;
		
		private EntitySet<yaf_FavoriteTopic> _yaf_FavoriteTopics;
		
		private EntitySet<yaf_Forum> _yaf_Forums;
		
		private EntitySet<yaf_Message> _yaf_Messages;
		
		private EntitySet<yaf_PMessage> _yaf_PMessages;
		
		private EntitySet<yaf_Thank> _yaf_Thanks;
		
		private EntitySet<yaf_Topic> _yaf_Topics;
		
		private EntitySet<yaf_Topic> _yaf_Topics1;
		
		private EntitySet<yaf_UserForum> _yaf_UserForums;
		
		private EntitySet<yaf_UserGroup> _yaf_UserGroups;
		
		private EntitySet<yaf_UserPMessage> _yaf_UserPMessages;
		
		private EntitySet<yaf_WatchForum> _yaf_WatchForums;
		
		private EntityRef<yaf_Board> _yaf_Board;
		
		private EntityRef<yaf_Rank> _yaf_Rank;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnBoardIDChanging(int value);
    partial void OnBoardIDChanged();
    partial void OnProviderUserKeyChanging(string value);
    partial void OnProviderUserKeyChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnJoinedChanging(System.DateTime value);
    partial void OnJoinedChanged();
    partial void OnLastVisitChanging(System.DateTime value);
    partial void OnLastVisitChanged();
    partial void OnIPChanging(string value);
    partial void OnIPChanged();
    partial void OnNumPostsChanging(int value);
    partial void OnNumPostsChanged();
    partial void OnTimeZoneChanging(int value);
    partial void OnTimeZoneChanged();
    partial void OnAvatarChanging(string value);
    partial void OnAvatarChanged();
    partial void OnSignatureChanging(string value);
    partial void OnSignatureChanged();
    partial void OnAvatarImageChanging(System.Data.Linq.Binary value);
    partial void OnAvatarImageChanged();
    partial void OnAvatarImageTypeChanging(string value);
    partial void OnAvatarImageTypeChanged();
    partial void OnRankIDChanging(int value);
    partial void OnRankIDChanged();
    partial void OnSuspendedChanging(System.Nullable<System.DateTime> value);
    partial void OnSuspendedChanged();
    partial void OnLanguageFileChanging(string value);
    partial void OnLanguageFileChanged();
    partial void OnThemeFileChanging(string value);
    partial void OnThemeFileChanged();
    partial void OnTextEditorChanging(string value);
    partial void OnTextEditorChanged();
    partial void OnOverrideDefaultThemesChanging(bool value);
    partial void OnOverrideDefaultThemesChanged();
    partial void OnPMNotificationChanging(bool value);
    partial void OnPMNotificationChanged();
    partial void OnAutoWatchTopicsChanging(bool value);
    partial void OnAutoWatchTopicsChanged();
    partial void OnDailyDigestChanging(bool value);
    partial void OnDailyDigestChanged();
    partial void OnNotificationTypeChanging(System.Nullable<int> value);
    partial void OnNotificationTypeChanged();
    partial void OnFlagsChanging(int value);
    partial void OnFlagsChanged();
    partial void OnPointsChanging(int value);
    partial void OnPointsChanged();
    partial void OnIsApprovedChanging(System.Nullable<bool> value);
    partial void OnIsApprovedChanged();
    partial void OnIsActiveExcludedChanging(System.Nullable<bool> value);
    partial void OnIsActiveExcludedChanged();
    partial void OnCultureChanging(string value);
    partial void OnCultureChanged();
    #endregion
		
		public yaf_User()
		{
			this._yaf_WatchTopics = new EntitySet<yaf_WatchTopic>(new Action<yaf_WatchTopic>(this.attach_yaf_WatchTopics), new Action<yaf_WatchTopic>(this.detach_yaf_WatchTopics));
			this._FF_Articles = new EntitySet<FF_Article>(new Action<FF_Article>(this.attach_FF_Articles), new Action<FF_Article>(this.detach_FF_Articles));
			this._FF_UserComments = new EntitySet<FF_UserComment>(new Action<FF_UserComment>(this.attach_FF_UserComments), new Action<FF_UserComment>(this.detach_FF_UserComments));
			this._yaf_Actives = new EntitySet<yaf_Active>(new Action<yaf_Active>(this.attach_yaf_Actives), new Action<yaf_Active>(this.detach_yaf_Actives));
			this._yaf_Buddies = new EntitySet<yaf_Buddy>(new Action<yaf_Buddy>(this.attach_yaf_Buddies), new Action<yaf_Buddy>(this.detach_yaf_Buddies));
			this._yaf_CheckEmails = new EntitySet<yaf_CheckEmail>(new Action<yaf_CheckEmail>(this.attach_yaf_CheckEmails), new Action<yaf_CheckEmail>(this.detach_yaf_CheckEmails));
			this._yaf_EventLogs = new EntitySet<yaf_EventLog>(new Action<yaf_EventLog>(this.attach_yaf_EventLogs), new Action<yaf_EventLog>(this.detach_yaf_EventLogs));
			this._yaf_FavoriteTopics = new EntitySet<yaf_FavoriteTopic>(new Action<yaf_FavoriteTopic>(this.attach_yaf_FavoriteTopics), new Action<yaf_FavoriteTopic>(this.detach_yaf_FavoriteTopics));
			this._yaf_Forums = new EntitySet<yaf_Forum>(new Action<yaf_Forum>(this.attach_yaf_Forums), new Action<yaf_Forum>(this.detach_yaf_Forums));
			this._yaf_Messages = new EntitySet<yaf_Message>(new Action<yaf_Message>(this.attach_yaf_Messages), new Action<yaf_Message>(this.detach_yaf_Messages));
			this._yaf_PMessages = new EntitySet<yaf_PMessage>(new Action<yaf_PMessage>(this.attach_yaf_PMessages), new Action<yaf_PMessage>(this.detach_yaf_PMessages));
			this._yaf_Thanks = new EntitySet<yaf_Thank>(new Action<yaf_Thank>(this.attach_yaf_Thanks), new Action<yaf_Thank>(this.detach_yaf_Thanks));
			this._yaf_Topics = new EntitySet<yaf_Topic>(new Action<yaf_Topic>(this.attach_yaf_Topics), new Action<yaf_Topic>(this.detach_yaf_Topics));
			this._yaf_Topics1 = new EntitySet<yaf_Topic>(new Action<yaf_Topic>(this.attach_yaf_Topics1), new Action<yaf_Topic>(this.detach_yaf_Topics1));
			this._yaf_UserForums = new EntitySet<yaf_UserForum>(new Action<yaf_UserForum>(this.attach_yaf_UserForums), new Action<yaf_UserForum>(this.detach_yaf_UserForums));
			this._yaf_UserGroups = new EntitySet<yaf_UserGroup>(new Action<yaf_UserGroup>(this.attach_yaf_UserGroups), new Action<yaf_UserGroup>(this.detach_yaf_UserGroups));
			this._yaf_UserPMessages = new EntitySet<yaf_UserPMessage>(new Action<yaf_UserPMessage>(this.attach_yaf_UserPMessages), new Action<yaf_UserPMessage>(this.detach_yaf_UserPMessages));
			this._yaf_WatchForums = new EntitySet<yaf_WatchForum>(new Action<yaf_WatchForum>(this.attach_yaf_WatchForums), new Action<yaf_WatchForum>(this.detach_yaf_WatchForums));
			this._yaf_Board = default(EntityRef<yaf_Board>);
			this._yaf_Rank = default(EntityRef<yaf_Rank>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoardID", DbType="Int NOT NULL")]
		public int BoardID
		{
			get
			{
				return this._BoardID;
			}
			set
			{
				if ((this._BoardID != value))
				{
					if (this._yaf_Board.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBoardIDChanging(value);
					this.SendPropertyChanging();
					this._BoardID = value;
					this.SendPropertyChanged("BoardID");
					this.OnBoardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderUserKey", DbType="NVarChar(64)")]
		public string ProviderUserKey
		{
			get
			{
				return this._ProviderUserKey;
			}
			set
			{
				if ((this._ProviderUserKey != value))
				{
					this.OnProviderUserKeyChanging(value);
					this.SendPropertyChanging();
					this._ProviderUserKey = value;
					this.SendPropertyChanged("ProviderUserKey");
					this.OnProviderUserKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Joined", DbType="DateTime NOT NULL")]
		public System.DateTime Joined
		{
			get
			{
				return this._Joined;
			}
			set
			{
				if ((this._Joined != value))
				{
					this.OnJoinedChanging(value);
					this.SendPropertyChanging();
					this._Joined = value;
					this.SendPropertyChanged("Joined");
					this.OnJoinedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastVisit", DbType="DateTime NOT NULL")]
		public System.DateTime LastVisit
		{
			get
			{
				return this._LastVisit;
			}
			set
			{
				if ((this._LastVisit != value))
				{
					this.OnLastVisitChanging(value);
					this.SendPropertyChanging();
					this._LastVisit = value;
					this.SendPropertyChanged("LastVisit");
					this.OnLastVisitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP", DbType="VarChar(39)")]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this.OnIPChanging(value);
					this.SendPropertyChanging();
					this._IP = value;
					this.SendPropertyChanged("IP");
					this.OnIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumPosts", DbType="Int NOT NULL")]
		public int NumPosts
		{
			get
			{
				return this._NumPosts;
			}
			set
			{
				if ((this._NumPosts != value))
				{
					this.OnNumPostsChanging(value);
					this.SendPropertyChanging();
					this._NumPosts = value;
					this.SendPropertyChanged("NumPosts");
					this.OnNumPostsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeZone", DbType="Int NOT NULL")]
		public int TimeZone
		{
			get
			{
				return this._TimeZone;
			}
			set
			{
				if ((this._TimeZone != value))
				{
					this.OnTimeZoneChanging(value);
					this.SendPropertyChanging();
					this._TimeZone = value;
					this.SendPropertyChanged("TimeZone");
					this.OnTimeZoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Avatar", DbType="NVarChar(255)")]
		public string Avatar
		{
			get
			{
				return this._Avatar;
			}
			set
			{
				if ((this._Avatar != value))
				{
					this.OnAvatarChanging(value);
					this.SendPropertyChanging();
					this._Avatar = value;
					this.SendPropertyChanged("Avatar");
					this.OnAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Signature", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Signature
		{
			get
			{
				return this._Signature;
			}
			set
			{
				if ((this._Signature != value))
				{
					this.OnSignatureChanging(value);
					this.SendPropertyChanging();
					this._Signature = value;
					this.SendPropertyChanged("Signature");
					this.OnSignatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvatarImage", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary AvatarImage
		{
			get
			{
				return this._AvatarImage;
			}
			set
			{
				if ((this._AvatarImage != value))
				{
					this.OnAvatarImageChanging(value);
					this.SendPropertyChanging();
					this._AvatarImage = value;
					this.SendPropertyChanged("AvatarImage");
					this.OnAvatarImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvatarImageType", DbType="NVarChar(50)")]
		public string AvatarImageType
		{
			get
			{
				return this._AvatarImageType;
			}
			set
			{
				if ((this._AvatarImageType != value))
				{
					this.OnAvatarImageTypeChanging(value);
					this.SendPropertyChanging();
					this._AvatarImageType = value;
					this.SendPropertyChanged("AvatarImageType");
					this.OnAvatarImageTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RankID", DbType="Int NOT NULL")]
		public int RankID
		{
			get
			{
				return this._RankID;
			}
			set
			{
				if ((this._RankID != value))
				{
					if (this._yaf_Rank.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRankIDChanging(value);
					this.SendPropertyChanging();
					this._RankID = value;
					this.SendPropertyChanged("RankID");
					this.OnRankIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suspended", DbType="DateTime")]
		public System.Nullable<System.DateTime> Suspended
		{
			get
			{
				return this._Suspended;
			}
			set
			{
				if ((this._Suspended != value))
				{
					this.OnSuspendedChanging(value);
					this.SendPropertyChanging();
					this._Suspended = value;
					this.SendPropertyChanged("Suspended");
					this.OnSuspendedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageFile", DbType="NVarChar(50)")]
		public string LanguageFile
		{
			get
			{
				return this._LanguageFile;
			}
			set
			{
				if ((this._LanguageFile != value))
				{
					this.OnLanguageFileChanging(value);
					this.SendPropertyChanging();
					this._LanguageFile = value;
					this.SendPropertyChanged("LanguageFile");
					this.OnLanguageFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThemeFile", DbType="NVarChar(50)")]
		public string ThemeFile
		{
			get
			{
				return this._ThemeFile;
			}
			set
			{
				if ((this._ThemeFile != value))
				{
					this.OnThemeFileChanging(value);
					this.SendPropertyChanging();
					this._ThemeFile = value;
					this.SendPropertyChanged("ThemeFile");
					this.OnThemeFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TextEditor", DbType="NVarChar(50)")]
		public string TextEditor
		{
			get
			{
				return this._TextEditor;
			}
			set
			{
				if ((this._TextEditor != value))
				{
					this.OnTextEditorChanging(value);
					this.SendPropertyChanging();
					this._TextEditor = value;
					this.SendPropertyChanged("TextEditor");
					this.OnTextEditorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverrideDefaultThemes", DbType="Bit NOT NULL")]
		public bool OverrideDefaultThemes
		{
			get
			{
				return this._OverrideDefaultThemes;
			}
			set
			{
				if ((this._OverrideDefaultThemes != value))
				{
					this.OnOverrideDefaultThemesChanging(value);
					this.SendPropertyChanging();
					this._OverrideDefaultThemes = value;
					this.SendPropertyChanged("OverrideDefaultThemes");
					this.OnOverrideDefaultThemesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PMNotification", DbType="Bit NOT NULL")]
		public bool PMNotification
		{
			get
			{
				return this._PMNotification;
			}
			set
			{
				if ((this._PMNotification != value))
				{
					this.OnPMNotificationChanging(value);
					this.SendPropertyChanging();
					this._PMNotification = value;
					this.SendPropertyChanged("PMNotification");
					this.OnPMNotificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoWatchTopics", DbType="Bit NOT NULL")]
		public bool AutoWatchTopics
		{
			get
			{
				return this._AutoWatchTopics;
			}
			set
			{
				if ((this._AutoWatchTopics != value))
				{
					this.OnAutoWatchTopicsChanging(value);
					this.SendPropertyChanging();
					this._AutoWatchTopics = value;
					this.SendPropertyChanged("AutoWatchTopics");
					this.OnAutoWatchTopicsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DailyDigest", DbType="Bit NOT NULL")]
		public bool DailyDigest
		{
			get
			{
				return this._DailyDigest;
			}
			set
			{
				if ((this._DailyDigest != value))
				{
					this.OnDailyDigestChanging(value);
					this.SendPropertyChanging();
					this._DailyDigest = value;
					this.SendPropertyChanged("DailyDigest");
					this.OnDailyDigestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationType", DbType="Int")]
		public System.Nullable<int> NotificationType
		{
			get
			{
				return this._NotificationType;
			}
			set
			{
				if ((this._NotificationType != value))
				{
					this.OnNotificationTypeChanging(value);
					this.SendPropertyChanging();
					this._NotificationType = value;
					this.SendPropertyChanged("NotificationType");
					this.OnNotificationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flags", DbType="Int NOT NULL")]
		public int Flags
		{
			get
			{
				return this._Flags;
			}
			set
			{
				if ((this._Flags != value))
				{
					this.OnFlagsChanging(value);
					this.SendPropertyChanging();
					this._Flags = value;
					this.SendPropertyChanged("Flags");
					this.OnFlagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Points", DbType="Int NOT NULL")]
		public int Points
		{
			get
			{
				return this._Points;
			}
			set
			{
				if ((this._Points != value))
				{
					this.OnPointsChanging(value);
					this.SendPropertyChanging();
					this._Points = value;
					this.SendPropertyChanged("Points");
					this.OnPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", AutoSync=AutoSync.Always, DbType="Bit", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActiveExcluded", AutoSync=AutoSync.Always, DbType="Bit", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsActiveExcluded
		{
			get
			{
				return this._IsActiveExcluded;
			}
			set
			{
				if ((this._IsActiveExcluded != value))
				{
					this.OnIsActiveExcludedChanging(value);
					this.SendPropertyChanging();
					this._IsActiveExcluded = value;
					this.SendPropertyChanged("IsActiveExcluded");
					this.OnIsActiveExcludedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Culture", DbType="Char(5)")]
		public string Culture
		{
			get
			{
				return this._Culture;
			}
			set
			{
				if ((this._Culture != value))
				{
					this.OnCultureChanging(value);
					this.SendPropertyChanging();
					this._Culture = value;
					this.SendPropertyChanged("Culture");
					this.OnCultureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_User_yaf_WatchTopic", Storage="_yaf_WatchTopics", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<yaf_WatchTopic> yaf_WatchTopics
		{
			get
			{
				return this._yaf_WatchTopics;
			}
			set
			{
				this._yaf_WatchTopics.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_User_FF_Article", Storage="_FF_Articles", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<FF_Article> FF_Articles
		{
			get
			{
				return this._FF_Articles;
			}
			set
			{
				this._FF_Articles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_User_FF_UserComment", Storage="_FF_UserComments", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<FF_UserComment> FF_UserComments
		{
			get
			{
				return this._FF_UserComments;
			}
			set
			{
				this._FF_UserComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_User_yaf_Active", Storage="_yaf_Actives", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<yaf_Active> yaf_Actives
		{
			get
			{
				return this._yaf_Actives;
			}
			set
			{
				this._yaf_Actives.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_User_yaf_Buddy", Storage="_yaf_Buddies", ThisKey="UserID", OtherKey="FromUserID")]
		public EntitySet<yaf_Buddy> yaf_Buddies
		{
			get
			{
				return this._yaf_Buddies;
			}
			set
			{
				this._yaf_Buddies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_User_yaf_CheckEmail", Storage="_yaf_CheckEmails", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<yaf_CheckEmail> yaf_CheckEmails
		{
			get
			{
				return this._yaf_CheckEmails;
			}
			set
			{
				this._yaf_CheckEmails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_User_yaf_EventLog", Storage="_yaf_EventLogs", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<yaf_EventLog> yaf_EventLogs
		{
			get
			{
				return this._yaf_EventLogs;
			}
			set
			{
				this._yaf_EventLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_User_yaf_FavoriteTopic", Storage="_yaf_FavoriteTopics", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<yaf_FavoriteTopic> yaf_FavoriteTopics
		{
			get
			{
				return this._yaf_FavoriteTopics;
			}
			set
			{
				this._yaf_FavoriteTopics.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_User_yaf_Forum", Storage="_yaf_Forums", ThisKey="UserID", OtherKey="LastUserID")]
		public EntitySet<yaf_Forum> yaf_Forums
		{
			get
			{
				return this._yaf_Forums;
			}
			set
			{
				this._yaf_Forums.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_User_yaf_Message", Storage="_yaf_Messages", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<yaf_Message> yaf_Messages
		{
			get
			{
				return this._yaf_Messages;
			}
			set
			{
				this._yaf_Messages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_User_yaf_PMessage", Storage="_yaf_PMessages", ThisKey="UserID", OtherKey="FromUserID")]
		public EntitySet<yaf_PMessage> yaf_PMessages
		{
			get
			{
				return this._yaf_PMessages;
			}
			set
			{
				this._yaf_PMessages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_User_yaf_Thank", Storage="_yaf_Thanks", ThisKey="UserID", OtherKey="ThanksFromUserID")]
		public EntitySet<yaf_Thank> yaf_Thanks
		{
			get
			{
				return this._yaf_Thanks;
			}
			set
			{
				this._yaf_Thanks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_User_yaf_Topic", Storage="_yaf_Topics", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<yaf_Topic> yaf_Topics
		{
			get
			{
				return this._yaf_Topics;
			}
			set
			{
				this._yaf_Topics.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_User_yaf_Topic1", Storage="_yaf_Topics1", ThisKey="UserID", OtherKey="LastUserID")]
		public EntitySet<yaf_Topic> yaf_Topics1
		{
			get
			{
				return this._yaf_Topics1;
			}
			set
			{
				this._yaf_Topics1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_User_yaf_UserForum", Storage="_yaf_UserForums", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<yaf_UserForum> yaf_UserForums
		{
			get
			{
				return this._yaf_UserForums;
			}
			set
			{
				this._yaf_UserForums.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_User_yaf_UserGroup", Storage="_yaf_UserGroups", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<yaf_UserGroup> yaf_UserGroups
		{
			get
			{
				return this._yaf_UserGroups;
			}
			set
			{
				this._yaf_UserGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_User_yaf_UserPMessage", Storage="_yaf_UserPMessages", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<yaf_UserPMessage> yaf_UserPMessages
		{
			get
			{
				return this._yaf_UserPMessages;
			}
			set
			{
				this._yaf_UserPMessages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_User_yaf_WatchForum", Storage="_yaf_WatchForums", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<yaf_WatchForum> yaf_WatchForums
		{
			get
			{
				return this._yaf_WatchForums;
			}
			set
			{
				this._yaf_WatchForums.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Board_yaf_User", Storage="_yaf_Board", ThisKey="BoardID", OtherKey="BoardID", IsForeignKey=true)]
		public yaf_Board yaf_Board
		{
			get
			{
				return this._yaf_Board.Entity;
			}
			set
			{
				yaf_Board previousValue = this._yaf_Board.Entity;
				if (((previousValue != value) 
							|| (this._yaf_Board.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_Board.Entity = null;
						previousValue.yaf_Users.Remove(this);
					}
					this._yaf_Board.Entity = value;
					if ((value != null))
					{
						value.yaf_Users.Add(this);
						this._BoardID = value.BoardID;
					}
					else
					{
						this._BoardID = default(int);
					}
					this.SendPropertyChanged("yaf_Board");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Rank_yaf_User", Storage="_yaf_Rank", ThisKey="RankID", OtherKey="RankID", IsForeignKey=true)]
		public yaf_Rank yaf_Rank
		{
			get
			{
				return this._yaf_Rank.Entity;
			}
			set
			{
				yaf_Rank previousValue = this._yaf_Rank.Entity;
				if (((previousValue != value) 
							|| (this._yaf_Rank.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_Rank.Entity = null;
						previousValue.yaf_Users.Remove(this);
					}
					this._yaf_Rank.Entity = value;
					if ((value != null))
					{
						value.yaf_Users.Add(this);
						this._RankID = value.RankID;
					}
					else
					{
						this._RankID = default(int);
					}
					this.SendPropertyChanged("yaf_Rank");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_yaf_WatchTopics(yaf_WatchTopic entity)
		{
			this.SendPropertyChanging();
			entity.yaf_User = this;
		}
		
		private void detach_yaf_WatchTopics(yaf_WatchTopic entity)
		{
			this.SendPropertyChanging();
			entity.yaf_User = null;
		}
		
		private void attach_FF_Articles(FF_Article entity)
		{
			this.SendPropertyChanging();
			entity.yaf_User = this;
		}
		
		private void detach_FF_Articles(FF_Article entity)
		{
			this.SendPropertyChanging();
			entity.yaf_User = null;
		}
		
		private void attach_FF_UserComments(FF_UserComment entity)
		{
			this.SendPropertyChanging();
			entity.yaf_User = this;
		}
		
		private void detach_FF_UserComments(FF_UserComment entity)
		{
			this.SendPropertyChanging();
			entity.yaf_User = null;
		}
		
		private void attach_yaf_Actives(yaf_Active entity)
		{
			this.SendPropertyChanging();
			entity.yaf_User = this;
		}
		
		private void detach_yaf_Actives(yaf_Active entity)
		{
			this.SendPropertyChanging();
			entity.yaf_User = null;
		}
		
		private void attach_yaf_Buddies(yaf_Buddy entity)
		{
			this.SendPropertyChanging();
			entity.yaf_User = this;
		}
		
		private void detach_yaf_Buddies(yaf_Buddy entity)
		{
			this.SendPropertyChanging();
			entity.yaf_User = null;
		}
		
		private void attach_yaf_CheckEmails(yaf_CheckEmail entity)
		{
			this.SendPropertyChanging();
			entity.yaf_User = this;
		}
		
		private void detach_yaf_CheckEmails(yaf_CheckEmail entity)
		{
			this.SendPropertyChanging();
			entity.yaf_User = null;
		}
		
		private void attach_yaf_EventLogs(yaf_EventLog entity)
		{
			this.SendPropertyChanging();
			entity.yaf_User = this;
		}
		
		private void detach_yaf_EventLogs(yaf_EventLog entity)
		{
			this.SendPropertyChanging();
			entity.yaf_User = null;
		}
		
		private void attach_yaf_FavoriteTopics(yaf_FavoriteTopic entity)
		{
			this.SendPropertyChanging();
			entity.yaf_User = this;
		}
		
		private void detach_yaf_FavoriteTopics(yaf_FavoriteTopic entity)
		{
			this.SendPropertyChanging();
			entity.yaf_User = null;
		}
		
		private void attach_yaf_Forums(yaf_Forum entity)
		{
			this.SendPropertyChanging();
			entity.yaf_User = this;
		}
		
		private void detach_yaf_Forums(yaf_Forum entity)
		{
			this.SendPropertyChanging();
			entity.yaf_User = null;
		}
		
		private void attach_yaf_Messages(yaf_Message entity)
		{
			this.SendPropertyChanging();
			entity.yaf_User = this;
		}
		
		private void detach_yaf_Messages(yaf_Message entity)
		{
			this.SendPropertyChanging();
			entity.yaf_User = null;
		}
		
		private void attach_yaf_PMessages(yaf_PMessage entity)
		{
			this.SendPropertyChanging();
			entity.yaf_User = this;
		}
		
		private void detach_yaf_PMessages(yaf_PMessage entity)
		{
			this.SendPropertyChanging();
			entity.yaf_User = null;
		}
		
		private void attach_yaf_Thanks(yaf_Thank entity)
		{
			this.SendPropertyChanging();
			entity.yaf_User = this;
		}
		
		private void detach_yaf_Thanks(yaf_Thank entity)
		{
			this.SendPropertyChanging();
			entity.yaf_User = null;
		}
		
		private void attach_yaf_Topics(yaf_Topic entity)
		{
			this.SendPropertyChanging();
			entity.yaf_User = this;
		}
		
		private void detach_yaf_Topics(yaf_Topic entity)
		{
			this.SendPropertyChanging();
			entity.yaf_User = null;
		}
		
		private void attach_yaf_Topics1(yaf_Topic entity)
		{
			this.SendPropertyChanging();
			entity.yaf_User1 = this;
		}
		
		private void detach_yaf_Topics1(yaf_Topic entity)
		{
			this.SendPropertyChanging();
			entity.yaf_User1 = null;
		}
		
		private void attach_yaf_UserForums(yaf_UserForum entity)
		{
			this.SendPropertyChanging();
			entity.yaf_User = this;
		}
		
		private void detach_yaf_UserForums(yaf_UserForum entity)
		{
			this.SendPropertyChanging();
			entity.yaf_User = null;
		}
		
		private void attach_yaf_UserGroups(yaf_UserGroup entity)
		{
			this.SendPropertyChanging();
			entity.yaf_User = this;
		}
		
		private void detach_yaf_UserGroups(yaf_UserGroup entity)
		{
			this.SendPropertyChanging();
			entity.yaf_User = null;
		}
		
		private void attach_yaf_UserPMessages(yaf_UserPMessage entity)
		{
			this.SendPropertyChanging();
			entity.yaf_User = this;
		}
		
		private void detach_yaf_UserPMessages(yaf_UserPMessage entity)
		{
			this.SendPropertyChanging();
			entity.yaf_User = null;
		}
		
		private void attach_yaf_WatchForums(yaf_WatchForum entity)
		{
			this.SendPropertyChanging();
			entity.yaf_User = this;
		}
		
		private void detach_yaf_WatchForums(yaf_WatchForum entity)
		{
			this.SendPropertyChanging();
			entity.yaf_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_UserAlbum")]
	public partial class yaf_UserAlbum : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AlbumID;
		
		private int _UserID;
		
		private string _Title;
		
		private System.Nullable<int> _CoverImageID;
		
		private System.DateTime _Updated;
		
		private EntitySet<yaf_UserAlbumImage> _yaf_UserAlbumImages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAlbumIDChanging(int value);
    partial void OnAlbumIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnCoverImageIDChanging(System.Nullable<int> value);
    partial void OnCoverImageIDChanged();
    partial void OnUpdatedChanging(System.DateTime value);
    partial void OnUpdatedChanged();
    #endregion
		
		public yaf_UserAlbum()
		{
			this._yaf_UserAlbumImages = new EntitySet<yaf_UserAlbumImage>(new Action<yaf_UserAlbumImage>(this.attach_yaf_UserAlbumImages), new Action<yaf_UserAlbumImage>(this.detach_yaf_UserAlbumImages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AlbumID
		{
			get
			{
				return this._AlbumID;
			}
			set
			{
				if ((this._AlbumID != value))
				{
					this.OnAlbumIDChanging(value);
					this.SendPropertyChanging();
					this._AlbumID = value;
					this.SendPropertyChanged("AlbumID");
					this.OnAlbumIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoverImageID", DbType="Int")]
		public System.Nullable<int> CoverImageID
		{
			get
			{
				return this._CoverImageID;
			}
			set
			{
				if ((this._CoverImageID != value))
				{
					this.OnCoverImageIDChanging(value);
					this.SendPropertyChanging();
					this._CoverImageID = value;
					this.SendPropertyChanged("CoverImageID");
					this.OnCoverImageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated", DbType="DateTime NOT NULL")]
		public System.DateTime Updated
		{
			get
			{
				return this._Updated;
			}
			set
			{
				if ((this._Updated != value))
				{
					this.OnUpdatedChanging(value);
					this.SendPropertyChanging();
					this._Updated = value;
					this.SendPropertyChanged("Updated");
					this.OnUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_UserAlbum_yaf_UserAlbumImage", Storage="_yaf_UserAlbumImages", ThisKey="AlbumID", OtherKey="AlbumID")]
		public EntitySet<yaf_UserAlbumImage> yaf_UserAlbumImages
		{
			get
			{
				return this._yaf_UserAlbumImages;
			}
			set
			{
				this._yaf_UserAlbumImages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_yaf_UserAlbumImages(yaf_UserAlbumImage entity)
		{
			this.SendPropertyChanging();
			entity.yaf_UserAlbum = this;
		}
		
		private void detach_yaf_UserAlbumImages(yaf_UserAlbumImage entity)
		{
			this.SendPropertyChanging();
			entity.yaf_UserAlbum = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_UserAlbumImage")]
	public partial class yaf_UserAlbumImage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ImageID;
		
		private int _AlbumID;
		
		private string _Caption;
		
		private string _FileName;
		
		private int _Bytes;
		
		private string _ContentType;
		
		private System.DateTime _Uploaded;
		
		private int _Downloads;
		
		private EntityRef<yaf_UserAlbum> _yaf_UserAlbum;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImageIDChanging(int value);
    partial void OnImageIDChanged();
    partial void OnAlbumIDChanging(int value);
    partial void OnAlbumIDChanged();
    partial void OnCaptionChanging(string value);
    partial void OnCaptionChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnBytesChanging(int value);
    partial void OnBytesChanged();
    partial void OnContentTypeChanging(string value);
    partial void OnContentTypeChanged();
    partial void OnUploadedChanging(System.DateTime value);
    partial void OnUploadedChanged();
    partial void OnDownloadsChanging(int value);
    partial void OnDownloadsChanged();
    #endregion
		
		public yaf_UserAlbumImage()
		{
			this._yaf_UserAlbum = default(EntityRef<yaf_UserAlbum>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ImageID
		{
			get
			{
				return this._ImageID;
			}
			set
			{
				if ((this._ImageID != value))
				{
					this.OnImageIDChanging(value);
					this.SendPropertyChanging();
					this._ImageID = value;
					this.SendPropertyChanged("ImageID");
					this.OnImageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumID", DbType="Int NOT NULL")]
		public int AlbumID
		{
			get
			{
				return this._AlbumID;
			}
			set
			{
				if ((this._AlbumID != value))
				{
					if (this._yaf_UserAlbum.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAlbumIDChanging(value);
					this.SendPropertyChanging();
					this._AlbumID = value;
					this.SendPropertyChanged("AlbumID");
					this.OnAlbumIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Caption", DbType="NVarChar(255)")]
		public string Caption
		{
			get
			{
				return this._Caption;
			}
			set
			{
				if ((this._Caption != value))
				{
					this.OnCaptionChanging(value);
					this.SendPropertyChanging();
					this._Caption = value;
					this.SendPropertyChanged("Caption");
					this.OnCaptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bytes", DbType="Int NOT NULL")]
		public int Bytes
		{
			get
			{
				return this._Bytes;
			}
			set
			{
				if ((this._Bytes != value))
				{
					this.OnBytesChanging(value);
					this.SendPropertyChanging();
					this._Bytes = value;
					this.SendPropertyChanged("Bytes");
					this.OnBytesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentType", DbType="NVarChar(50)")]
		public string ContentType
		{
			get
			{
				return this._ContentType;
			}
			set
			{
				if ((this._ContentType != value))
				{
					this.OnContentTypeChanging(value);
					this.SendPropertyChanging();
					this._ContentType = value;
					this.SendPropertyChanged("ContentType");
					this.OnContentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uploaded", DbType="DateTime NOT NULL")]
		public System.DateTime Uploaded
		{
			get
			{
				return this._Uploaded;
			}
			set
			{
				if ((this._Uploaded != value))
				{
					this.OnUploadedChanging(value);
					this.SendPropertyChanging();
					this._Uploaded = value;
					this.SendPropertyChanged("Uploaded");
					this.OnUploadedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Downloads", DbType="Int NOT NULL")]
		public int Downloads
		{
			get
			{
				return this._Downloads;
			}
			set
			{
				if ((this._Downloads != value))
				{
					this.OnDownloadsChanging(value);
					this.SendPropertyChanging();
					this._Downloads = value;
					this.SendPropertyChanged("Downloads");
					this.OnDownloadsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_UserAlbum_yaf_UserAlbumImage", Storage="_yaf_UserAlbum", ThisKey="AlbumID", OtherKey="AlbumID", IsForeignKey=true)]
		public yaf_UserAlbum yaf_UserAlbum
		{
			get
			{
				return this._yaf_UserAlbum.Entity;
			}
			set
			{
				yaf_UserAlbum previousValue = this._yaf_UserAlbum.Entity;
				if (((previousValue != value) 
							|| (this._yaf_UserAlbum.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_UserAlbum.Entity = null;
						previousValue.yaf_UserAlbumImages.Remove(this);
					}
					this._yaf_UserAlbum.Entity = value;
					if ((value != null))
					{
						value.yaf_UserAlbumImages.Add(this);
						this._AlbumID = value.AlbumID;
					}
					else
					{
						this._AlbumID = default(int);
					}
					this.SendPropertyChanged("yaf_UserAlbum");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_UserForum")]
	public partial class yaf_UserForum : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private int _ForumID;
		
		private int _AccessMaskID;
		
		private System.DateTime _Invited;
		
		private bool _Accepted;
		
		private EntityRef<yaf_AccessMask> _yaf_AccessMask;
		
		private EntityRef<yaf_Forum> _yaf_Forum;
		
		private EntityRef<yaf_User> _yaf_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnForumIDChanging(int value);
    partial void OnForumIDChanged();
    partial void OnAccessMaskIDChanging(int value);
    partial void OnAccessMaskIDChanged();
    partial void OnInvitedChanging(System.DateTime value);
    partial void OnInvitedChanged();
    partial void OnAcceptedChanging(bool value);
    partial void OnAcceptedChanged();
    #endregion
		
		public yaf_UserForum()
		{
			this._yaf_AccessMask = default(EntityRef<yaf_AccessMask>);
			this._yaf_Forum = default(EntityRef<yaf_Forum>);
			this._yaf_User = default(EntityRef<yaf_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._yaf_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ForumID
		{
			get
			{
				return this._ForumID;
			}
			set
			{
				if ((this._ForumID != value))
				{
					if (this._yaf_Forum.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForumIDChanging(value);
					this.SendPropertyChanging();
					this._ForumID = value;
					this.SendPropertyChanged("ForumID");
					this.OnForumIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessMaskID", DbType="Int NOT NULL")]
		public int AccessMaskID
		{
			get
			{
				return this._AccessMaskID;
			}
			set
			{
				if ((this._AccessMaskID != value))
				{
					if (this._yaf_AccessMask.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccessMaskIDChanging(value);
					this.SendPropertyChanging();
					this._AccessMaskID = value;
					this.SendPropertyChanged("AccessMaskID");
					this.OnAccessMaskIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invited", DbType="DateTime NOT NULL")]
		public System.DateTime Invited
		{
			get
			{
				return this._Invited;
			}
			set
			{
				if ((this._Invited != value))
				{
					this.OnInvitedChanging(value);
					this.SendPropertyChanging();
					this._Invited = value;
					this.SendPropertyChanged("Invited");
					this.OnInvitedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accepted", DbType="Bit NOT NULL")]
		public bool Accepted
		{
			get
			{
				return this._Accepted;
			}
			set
			{
				if ((this._Accepted != value))
				{
					this.OnAcceptedChanging(value);
					this.SendPropertyChanging();
					this._Accepted = value;
					this.SendPropertyChanged("Accepted");
					this.OnAcceptedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_AccessMask_yaf_UserForum", Storage="_yaf_AccessMask", ThisKey="AccessMaskID", OtherKey="AccessMaskID", IsForeignKey=true)]
		public yaf_AccessMask yaf_AccessMask
		{
			get
			{
				return this._yaf_AccessMask.Entity;
			}
			set
			{
				yaf_AccessMask previousValue = this._yaf_AccessMask.Entity;
				if (((previousValue != value) 
							|| (this._yaf_AccessMask.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_AccessMask.Entity = null;
						previousValue.yaf_UserForums.Remove(this);
					}
					this._yaf_AccessMask.Entity = value;
					if ((value != null))
					{
						value.yaf_UserForums.Add(this);
						this._AccessMaskID = value.AccessMaskID;
					}
					else
					{
						this._AccessMaskID = default(int);
					}
					this.SendPropertyChanged("yaf_AccessMask");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Forum_yaf_UserForum", Storage="_yaf_Forum", ThisKey="ForumID", OtherKey="ForumID", IsForeignKey=true)]
		public yaf_Forum yaf_Forum
		{
			get
			{
				return this._yaf_Forum.Entity;
			}
			set
			{
				yaf_Forum previousValue = this._yaf_Forum.Entity;
				if (((previousValue != value) 
							|| (this._yaf_Forum.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_Forum.Entity = null;
						previousValue.yaf_UserForums.Remove(this);
					}
					this._yaf_Forum.Entity = value;
					if ((value != null))
					{
						value.yaf_UserForums.Add(this);
						this._ForumID = value.ForumID;
					}
					else
					{
						this._ForumID = default(int);
					}
					this.SendPropertyChanged("yaf_Forum");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_User_yaf_UserForum", Storage="_yaf_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public yaf_User yaf_User
		{
			get
			{
				return this._yaf_User.Entity;
			}
			set
			{
				yaf_User previousValue = this._yaf_User.Entity;
				if (((previousValue != value) 
							|| (this._yaf_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_User.Entity = null;
						previousValue.yaf_UserForums.Remove(this);
					}
					this._yaf_User.Entity = value;
					if ((value != null))
					{
						value.yaf_UserForums.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("yaf_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_UserGroup")]
	public partial class yaf_UserGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private int _GroupID;
		
		private EntityRef<yaf_Group> _yaf_Group;
		
		private EntityRef<yaf_User> _yaf_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    #endregion
		
		public yaf_UserGroup()
		{
			this._yaf_Group = default(EntityRef<yaf_Group>);
			this._yaf_User = default(EntityRef<yaf_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._yaf_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					if (this._yaf_Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Group_yaf_UserGroup", Storage="_yaf_Group", ThisKey="GroupID", OtherKey="GroupID", IsForeignKey=true)]
		public yaf_Group yaf_Group
		{
			get
			{
				return this._yaf_Group.Entity;
			}
			set
			{
				yaf_Group previousValue = this._yaf_Group.Entity;
				if (((previousValue != value) 
							|| (this._yaf_Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_Group.Entity = null;
						previousValue.yaf_UserGroups.Remove(this);
					}
					this._yaf_Group.Entity = value;
					if ((value != null))
					{
						value.yaf_UserGroups.Add(this);
						this._GroupID = value.GroupID;
					}
					else
					{
						this._GroupID = default(int);
					}
					this.SendPropertyChanged("yaf_Group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_User_yaf_UserGroup", Storage="_yaf_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public yaf_User yaf_User
		{
			get
			{
				return this._yaf_User.Entity;
			}
			set
			{
				yaf_User previousValue = this._yaf_User.Entity;
				if (((previousValue != value) 
							|| (this._yaf_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_User.Entity = null;
						previousValue.yaf_UserGroups.Remove(this);
					}
					this._yaf_User.Entity = value;
					if ((value != null))
					{
						value.yaf_UserGroups.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("yaf_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_UserMedal")]
	public partial class yaf_UserMedal
	{
		
		private int _UserID;
		
		private int _MedalID;
		
		private string _Message;
		
		private bool _Hide;
		
		private bool _OnlyRibbon;
		
		private byte _SortOrder;
		
		private System.DateTime _DateAwarded;
		
		public yaf_UserMedal()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedalID", DbType="Int NOT NULL")]
		public int MedalID
		{
			get
			{
				return this._MedalID;
			}
			set
			{
				if ((this._MedalID != value))
				{
					this._MedalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(100)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hide", DbType="Bit NOT NULL")]
		public bool Hide
		{
			get
			{
				return this._Hide;
			}
			set
			{
				if ((this._Hide != value))
				{
					this._Hide = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnlyRibbon", DbType="Bit NOT NULL")]
		public bool OnlyRibbon
		{
			get
			{
				return this._OnlyRibbon;
			}
			set
			{
				if ((this._OnlyRibbon != value))
				{
					this._OnlyRibbon = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="TinyInt NOT NULL")]
		public byte SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this._SortOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAwarded", DbType="DateTime NOT NULL")]
		public System.DateTime DateAwarded
		{
			get
			{
				return this._DateAwarded;
			}
			set
			{
				if ((this._DateAwarded != value))
				{
					this._DateAwarded = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_UserPMessage")]
	public partial class yaf_UserPMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserPMessageID;
		
		private int _UserID;
		
		private int _PMessageID;
		
		private int _Flags;
		
		private System.Nullable<bool> _IsRead;
		
		private System.Nullable<bool> _IsInOutbox;
		
		private System.Nullable<bool> _IsArchived;
		
		private System.Nullable<bool> _IsDeleted;
		
		private EntityRef<yaf_PMessage> _yaf_PMessage;
		
		private EntityRef<yaf_User> _yaf_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserPMessageIDChanging(int value);
    partial void OnUserPMessageIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnPMessageIDChanging(int value);
    partial void OnPMessageIDChanged();
    partial void OnFlagsChanging(int value);
    partial void OnFlagsChanged();
    partial void OnIsReadChanging(System.Nullable<bool> value);
    partial void OnIsReadChanged();
    partial void OnIsInOutboxChanging(System.Nullable<bool> value);
    partial void OnIsInOutboxChanged();
    partial void OnIsArchivedChanging(System.Nullable<bool> value);
    partial void OnIsArchivedChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public yaf_UserPMessage()
		{
			this._yaf_PMessage = default(EntityRef<yaf_PMessage>);
			this._yaf_User = default(EntityRef<yaf_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPMessageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserPMessageID
		{
			get
			{
				return this._UserPMessageID;
			}
			set
			{
				if ((this._UserPMessageID != value))
				{
					this.OnUserPMessageIDChanging(value);
					this.SendPropertyChanging();
					this._UserPMessageID = value;
					this.SendPropertyChanged("UserPMessageID");
					this.OnUserPMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._yaf_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PMessageID", DbType="Int NOT NULL")]
		public int PMessageID
		{
			get
			{
				return this._PMessageID;
			}
			set
			{
				if ((this._PMessageID != value))
				{
					if (this._yaf_PMessage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPMessageIDChanging(value);
					this.SendPropertyChanging();
					this._PMessageID = value;
					this.SendPropertyChanged("PMessageID");
					this.OnPMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flags", DbType="Int NOT NULL")]
		public int Flags
		{
			get
			{
				return this._Flags;
			}
			set
			{
				if ((this._Flags != value))
				{
					this.OnFlagsChanging(value);
					this.SendPropertyChanging();
					this._Flags = value;
					this.SendPropertyChanged("Flags");
					this.OnFlagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRead", AutoSync=AutoSync.Always, DbType="Bit", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsRead
		{
			get
			{
				return this._IsRead;
			}
			set
			{
				if ((this._IsRead != value))
				{
					this.OnIsReadChanging(value);
					this.SendPropertyChanging();
					this._IsRead = value;
					this.SendPropertyChanged("IsRead");
					this.OnIsReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInOutbox", AutoSync=AutoSync.Always, DbType="Bit", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsInOutbox
		{
			get
			{
				return this._IsInOutbox;
			}
			set
			{
				if ((this._IsInOutbox != value))
				{
					this.OnIsInOutboxChanging(value);
					this.SendPropertyChanging();
					this._IsInOutbox = value;
					this.SendPropertyChanged("IsInOutbox");
					this.OnIsInOutboxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", AutoSync=AutoSync.Always, DbType="Bit", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", AutoSync=AutoSync.Always, DbType="Bit", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_PMessage_yaf_UserPMessage", Storage="_yaf_PMessage", ThisKey="PMessageID", OtherKey="PMessageID", IsForeignKey=true)]
		public yaf_PMessage yaf_PMessage
		{
			get
			{
				return this._yaf_PMessage.Entity;
			}
			set
			{
				yaf_PMessage previousValue = this._yaf_PMessage.Entity;
				if (((previousValue != value) 
							|| (this._yaf_PMessage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_PMessage.Entity = null;
						previousValue.yaf_UserPMessages.Remove(this);
					}
					this._yaf_PMessage.Entity = value;
					if ((value != null))
					{
						value.yaf_UserPMessages.Add(this);
						this._PMessageID = value.PMessageID;
					}
					else
					{
						this._PMessageID = default(int);
					}
					this.SendPropertyChanged("yaf_PMessage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_User_yaf_UserPMessage", Storage="_yaf_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public yaf_User yaf_User
		{
			get
			{
				return this._yaf_User.Entity;
			}
			set
			{
				yaf_User previousValue = this._yaf_User.Entity;
				if (((previousValue != value) 
							|| (this._yaf_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_User.Entity = null;
						previousValue.yaf_UserPMessages.Remove(this);
					}
					this._yaf_User.Entity = value;
					if ((value != null))
					{
						value.yaf_UserPMessages.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("yaf_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.yaf_WatchForum")]
	public partial class yaf_WatchForum : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WatchForumID;
		
		private int _ForumID;
		
		private int _UserID;
		
		private System.DateTime _Created;
		
		private System.Nullable<System.DateTime> _LastMail;
		
		private EntityRef<yaf_Forum> _yaf_Forum;
		
		private EntityRef<yaf_User> _yaf_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWatchForumIDChanging(int value);
    partial void OnWatchForumIDChanged();
    partial void OnForumIDChanging(int value);
    partial void OnForumIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnLastMailChanging(System.Nullable<System.DateTime> value);
    partial void OnLastMailChanged();
    #endregion
		
		public yaf_WatchForum()
		{
			this._yaf_Forum = default(EntityRef<yaf_Forum>);
			this._yaf_User = default(EntityRef<yaf_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WatchForumID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int WatchForumID
		{
			get
			{
				return this._WatchForumID;
			}
			set
			{
				if ((this._WatchForumID != value))
				{
					this.OnWatchForumIDChanging(value);
					this.SendPropertyChanging();
					this._WatchForumID = value;
					this.SendPropertyChanged("WatchForumID");
					this.OnWatchForumIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumID", DbType="Int NOT NULL")]
		public int ForumID
		{
			get
			{
				return this._ForumID;
			}
			set
			{
				if ((this._ForumID != value))
				{
					if (this._yaf_Forum.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForumIDChanging(value);
					this.SendPropertyChanging();
					this._ForumID = value;
					this.SendPropertyChanged("ForumID");
					this.OnForumIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._yaf_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastMail", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastMail
		{
			get
			{
				return this._LastMail;
			}
			set
			{
				if ((this._LastMail != value))
				{
					this.OnLastMailChanging(value);
					this.SendPropertyChanging();
					this._LastMail = value;
					this.SendPropertyChanged("LastMail");
					this.OnLastMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_Forum_yaf_WatchForum", Storage="_yaf_Forum", ThisKey="ForumID", OtherKey="ForumID", IsForeignKey=true)]
		public yaf_Forum yaf_Forum
		{
			get
			{
				return this._yaf_Forum.Entity;
			}
			set
			{
				yaf_Forum previousValue = this._yaf_Forum.Entity;
				if (((previousValue != value) 
							|| (this._yaf_Forum.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_Forum.Entity = null;
						previousValue.yaf_WatchForums.Remove(this);
					}
					this._yaf_Forum.Entity = value;
					if ((value != null))
					{
						value.yaf_WatchForums.Add(this);
						this._ForumID = value.ForumID;
					}
					else
					{
						this._ForumID = default(int);
					}
					this.SendPropertyChanged("yaf_Forum");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="yaf_User_yaf_WatchForum", Storage="_yaf_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public yaf_User yaf_User
		{
			get
			{
				return this._yaf_User.Entity;
			}
			set
			{
				yaf_User previousValue = this._yaf_User.Entity;
				if (((previousValue != value) 
							|| (this._yaf_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._yaf_User.Entity = null;
						previousValue.yaf_WatchForums.Remove(this);
					}
					this._yaf_User.Entity = value;
					if ((value != null))
					{
						value.yaf_WatchForums.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("yaf_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
